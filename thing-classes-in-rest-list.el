;;; thing-classes-in-rest-list.el --- thing-in-thing functions

;; Copyright (C) 2010-2018 Andreas Röhler, unless
;; indicated otherwise

;; Author: Andreas Röhler <andreas.roehler@easy-emacs.de>, unless
;; indicated otherwise

;; Version: 0.1

;; Keywords: convenience

;; This file is free software; you can redistribute it
;; and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2, or (at your option) any later version.

;; This file is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU General Public License for more details.

;; You should have received a copy of the GNU General Public License
;; along with GNU Emacs; see the file COPYING.  If not, write to
;; the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
;; Boston, MA 02110-1301, USA.

;;; Commentary:

;;; Code:

;; Functions delivered with this THING-in-THING 
;; group of files employ several functions at a
;; defined THING within the range of a second THING.
;; 
;; `ar-hide-bracketed-in-line-atpt' for example hides everything insides brackets within the given line. Resp. `ar-show-bracketed-in-line-atpt' or a function which toggles this state: ar-hide-show-bracketed-in-line-atpt.
;; 
;; Referring which implementations are to be expected, see the
;; contents lists at the bottom of thingatpt-utils-core.el which are
;; cross-used in general.

;; Further information is given with thingatpt-utils-core.el

(defun ar-alnum-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of  at things class of ALNUM residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'greateranglednested 'ar-th arg))

(defun ar-greaterangle-alnum-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of ALNUM residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'greateranglednested 'ar-th-greaterangle arg))

(defun ar-lesserangle-alnum-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of ALNUM residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'greateranglednested 'ar-th-lesserangle arg))

(defun ar-backslash-alnum-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of ALNUM residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'greateranglednested 'ar-th-backslash arg))

(defun ar-colon-alnum-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of COLON at things class of ALNUM residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'greateranglednested 'ar-th-colon arg))

(defun ar-beg-alnum-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BEG at things class of ALNUM residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'greateranglednested 'ar-th-beg arg))

(defun ar-blok-alnum-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BLOK at things class of ALNUM residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'greateranglednested 'ar-th-blok arg))

(defun ar-bounds-alnum-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of ALNUM residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'greateranglednested 'ar-th-bounds arg))

(defun ar-brace-alnum-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BRACE at things class of ALNUM residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'greateranglednested 'ar-th-brace arg))

(defun ar-bracket-alnum-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of ALNUM residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'greateranglednested 'ar-th-bracket arg))

(defun ar-commatize-alnum-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of ALNUM residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'greateranglednested 'ar-th-commatize arg))

(defun ar-comment-alnum-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of ALNUM residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'greateranglednested 'ar-th-comment arg))

(defun ar-dollar-alnum-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of ALNUM residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'greateranglednested 'ar-th-dollar arg))

(defun ar-doublebackslash-alnum-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of ALNUM residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'greateranglednested 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-alnum-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of ALNUM residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'greateranglednested 'ar-th-doublebacktick arg))

(defun ar-doublequote-alnum-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of ALNUM residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'greateranglednested 'ar-th-doublequote arg))

(defun ar-doubleslash-alnum-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of ALNUM residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'greateranglednested 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-alnum-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of ALNUM residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'greateranglednested 'ar-th-doublebackslashparen arg))

(defun ar-end-alnum-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of END at things class of ALNUM residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'greateranglednested 'ar-th-end arg))

(defun ar-escape-alnum-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of ALNUM residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'greateranglednested 'ar-th-escape arg))

(defun ar-hide-alnum-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of HIDE at things class of ALNUM residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'greateranglednested 'ar-th-hide arg))

(defun ar-hide-show-alnum-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of ALNUM residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'greateranglednested 'ar-th-hide-show arg))

(defun ar-hyphen-alnum-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of ALNUM residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'greateranglednested 'ar-th-hyphen arg))

(defun ar-kill-alnum-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of KILL at things class of ALNUM residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'greateranglednested 'ar-th-kill arg))

(defun ar-leftrightsinglequote-alnum-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of ALNUM residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'greateranglednested 'ar-th-leftrightsinglequote arg))

(defun ar-length-alnum-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of ALNUM residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'greateranglednested 'ar-th-length arg))

(defun ar-parentize-alnum-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of ALNUM residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'greateranglednested 'ar-th-parentize arg))

(defun ar-quote-alnum-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of ALNUM residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'greateranglednested 'ar-th-quote arg))

(defun ar-separate-alnum-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of ALNUM residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'greateranglednested 'ar-th-separate arg))

(defun ar-show-alnum-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SHOW at things class of ALNUM residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'greateranglednested 'ar-th-show arg))

(defun ar-singlequote-alnum-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of ALNUM residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'greateranglednested 'ar-th-singlequote arg))

(defun ar-slash-alnum-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SLASH at things class of ALNUM residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'greateranglednested 'ar-th-slash arg))

(defun ar-star-alnum-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of STAR at things class of ALNUM residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'greateranglednested 'ar-th-star arg))

(defun ar-slashparen-alnum-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of ALNUM residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'greateranglednested 'ar-th-slashparen arg))

(defun ar-sort-alnum-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SORT at things class of ALNUM residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'greateranglednested 'ar-th-sort arg))

(defun ar-trim-alnum-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of TRIM at things class of ALNUM residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'greateranglednested 'ar-th-trim arg))

(defun ar-trim-left-alnum-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of ALNUM residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'greateranglednested 'ar-th-trim-left arg))

(defun ar-trim-right-alnum-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of ALNUM residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'greateranglednested 'ar-th-trim-right arg))

(defun ar-underscore-alnum-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of ALNUM residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'greateranglednested 'ar-th-underscore arg))

(defun ar-whitespace-alnum-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of ALNUM residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'greateranglednested 'ar-th-whitespace arg))

(defun ar-alnum-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of  at things class of ALNUM residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'lesseranglednested 'ar-th arg))

(defun ar-greaterangle-alnum-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of ALNUM residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'lesseranglednested 'ar-th-greaterangle arg))

(defun ar-lesserangle-alnum-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of ALNUM residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'lesseranglednested 'ar-th-lesserangle arg))

(defun ar-backslash-alnum-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of ALNUM residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'lesseranglednested 'ar-th-backslash arg))

(defun ar-colon-alnum-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of COLON at things class of ALNUM residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'lesseranglednested 'ar-th-colon arg))

(defun ar-beg-alnum-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BEG at things class of ALNUM residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'lesseranglednested 'ar-th-beg arg))

(defun ar-blok-alnum-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BLOK at things class of ALNUM residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'lesseranglednested 'ar-th-blok arg))

(defun ar-bounds-alnum-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of ALNUM residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'lesseranglednested 'ar-th-bounds arg))

(defun ar-brace-alnum-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BRACE at things class of ALNUM residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'lesseranglednested 'ar-th-brace arg))

(defun ar-bracket-alnum-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of ALNUM residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'lesseranglednested 'ar-th-bracket arg))

(defun ar-commatize-alnum-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of ALNUM residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'lesseranglednested 'ar-th-commatize arg))

(defun ar-comment-alnum-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of ALNUM residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'lesseranglednested 'ar-th-comment arg))

(defun ar-dollar-alnum-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of ALNUM residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'lesseranglednested 'ar-th-dollar arg))

(defun ar-doublebackslash-alnum-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of ALNUM residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'lesseranglednested 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-alnum-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of ALNUM residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'lesseranglednested 'ar-th-doublebacktick arg))

(defun ar-doublequote-alnum-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of ALNUM residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'lesseranglednested 'ar-th-doublequote arg))

(defun ar-doubleslash-alnum-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of ALNUM residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'lesseranglednested 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-alnum-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of ALNUM residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'lesseranglednested 'ar-th-doublebackslashparen arg))

(defun ar-end-alnum-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of END at things class of ALNUM residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'lesseranglednested 'ar-th-end arg))

(defun ar-escape-alnum-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of ALNUM residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'lesseranglednested 'ar-th-escape arg))

(defun ar-hide-alnum-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of HIDE at things class of ALNUM residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'lesseranglednested 'ar-th-hide arg))

(defun ar-hide-show-alnum-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of ALNUM residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'lesseranglednested 'ar-th-hide-show arg))

(defun ar-hyphen-alnum-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of ALNUM residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'lesseranglednested 'ar-th-hyphen arg))

(defun ar-kill-alnum-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of KILL at things class of ALNUM residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'lesseranglednested 'ar-th-kill arg))

(defun ar-leftrightsinglequote-alnum-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of ALNUM residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'lesseranglednested 'ar-th-leftrightsinglequote arg))

(defun ar-length-alnum-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of ALNUM residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'lesseranglednested 'ar-th-length arg))

(defun ar-parentize-alnum-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of ALNUM residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'lesseranglednested 'ar-th-parentize arg))

(defun ar-quote-alnum-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of ALNUM residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'lesseranglednested 'ar-th-quote arg))

(defun ar-separate-alnum-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of ALNUM residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'lesseranglednested 'ar-th-separate arg))

(defun ar-show-alnum-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SHOW at things class of ALNUM residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'lesseranglednested 'ar-th-show arg))

(defun ar-singlequote-alnum-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of ALNUM residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'lesseranglednested 'ar-th-singlequote arg))

(defun ar-slash-alnum-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SLASH at things class of ALNUM residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'lesseranglednested 'ar-th-slash arg))

(defun ar-star-alnum-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of STAR at things class of ALNUM residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'lesseranglednested 'ar-th-star arg))

(defun ar-slashparen-alnum-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of ALNUM residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'lesseranglednested 'ar-th-slashparen arg))

(defun ar-sort-alnum-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SORT at things class of ALNUM residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'lesseranglednested 'ar-th-sort arg))

(defun ar-trim-alnum-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of TRIM at things class of ALNUM residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'lesseranglednested 'ar-th-trim arg))

(defun ar-trim-left-alnum-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of ALNUM residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'lesseranglednested 'ar-th-trim-left arg))

(defun ar-trim-right-alnum-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of ALNUM residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'lesseranglednested 'ar-th-trim-right arg))

(defun ar-underscore-alnum-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of ALNUM residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'lesseranglednested 'ar-th-underscore arg))

(defun ar-whitespace-alnum-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of ALNUM residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'lesseranglednested 'ar-th-whitespace arg))

(defun ar-alnum-in-buffer-atpt (&optional arg) 
  "Employ actions of  at things class of ALNUM residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'buffer 'ar-th arg))

(defun ar-greaterangle-alnum-in-buffer-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of ALNUM residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'buffer 'ar-th-greaterangle arg))

(defun ar-lesserangle-alnum-in-buffer-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of ALNUM residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'buffer 'ar-th-lesserangle arg))

(defun ar-backslash-alnum-in-buffer-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of ALNUM residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'buffer 'ar-th-backslash arg))

(defun ar-colon-alnum-in-buffer-atpt (&optional arg) 
  "Employ actions of COLON at things class of ALNUM residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'buffer 'ar-th-colon arg))

(defun ar-beg-alnum-in-buffer-atpt (&optional arg) 
  "Employ actions of BEG at things class of ALNUM residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'buffer 'ar-th-beg arg))

(defun ar-blok-alnum-in-buffer-atpt (&optional arg) 
  "Employ actions of BLOK at things class of ALNUM residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'buffer 'ar-th-blok arg))

(defun ar-bounds-alnum-in-buffer-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of ALNUM residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'buffer 'ar-th-bounds arg))

(defun ar-brace-alnum-in-buffer-atpt (&optional arg) 
  "Employ actions of BRACE at things class of ALNUM residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'buffer 'ar-th-brace arg))

(defun ar-bracket-alnum-in-buffer-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of ALNUM residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'buffer 'ar-th-bracket arg))

(defun ar-commatize-alnum-in-buffer-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of ALNUM residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'buffer 'ar-th-commatize arg))

(defun ar-comment-alnum-in-buffer-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of ALNUM residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'buffer 'ar-th-comment arg))

(defun ar-dollar-alnum-in-buffer-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of ALNUM residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'buffer 'ar-th-dollar arg))

(defun ar-doublebackslash-alnum-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of ALNUM residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'buffer 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-alnum-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of ALNUM residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'buffer 'ar-th-doublebacktick arg))

(defun ar-doublequote-alnum-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of ALNUM residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'buffer 'ar-th-doublequote arg))

(defun ar-doubleslash-alnum-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of ALNUM residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'buffer 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-alnum-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of ALNUM residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'buffer 'ar-th-doublebackslashparen arg))

(defun ar-end-alnum-in-buffer-atpt (&optional arg) 
  "Employ actions of END at things class of ALNUM residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'buffer 'ar-th-end arg))

(defun ar-escape-alnum-in-buffer-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of ALNUM residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'buffer 'ar-th-escape arg))

(defun ar-hide-alnum-in-buffer-atpt (&optional arg) 
  "Employ actions of HIDE at things class of ALNUM residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'buffer 'ar-th-hide arg))

(defun ar-hide-show-alnum-in-buffer-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of ALNUM residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'buffer 'ar-th-hide-show arg))

(defun ar-hyphen-alnum-in-buffer-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of ALNUM residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'buffer 'ar-th-hyphen arg))

(defun ar-kill-alnum-in-buffer-atpt (&optional arg) 
  "Employ actions of KILL at things class of ALNUM residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'buffer 'ar-th-kill arg))

(defun ar-leftrightsinglequote-alnum-in-buffer-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of ALNUM residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'buffer 'ar-th-leftrightsinglequote arg))

(defun ar-length-alnum-in-buffer-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of ALNUM residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'buffer 'ar-th-length arg))

(defun ar-parentize-alnum-in-buffer-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of ALNUM residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'buffer 'ar-th-parentize arg))

(defun ar-quote-alnum-in-buffer-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of ALNUM residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'buffer 'ar-th-quote arg))

(defun ar-separate-alnum-in-buffer-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of ALNUM residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'buffer 'ar-th-separate arg))

(defun ar-show-alnum-in-buffer-atpt (&optional arg) 
  "Employ actions of SHOW at things class of ALNUM residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'buffer 'ar-th-show arg))

(defun ar-singlequote-alnum-in-buffer-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of ALNUM residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'buffer 'ar-th-singlequote arg))

(defun ar-slash-alnum-in-buffer-atpt (&optional arg) 
  "Employ actions of SLASH at things class of ALNUM residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'buffer 'ar-th-slash arg))

(defun ar-star-alnum-in-buffer-atpt (&optional arg) 
  "Employ actions of STAR at things class of ALNUM residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'buffer 'ar-th-star arg))

(defun ar-slashparen-alnum-in-buffer-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of ALNUM residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'buffer 'ar-th-slashparen arg))

(defun ar-sort-alnum-in-buffer-atpt (&optional arg) 
  "Employ actions of SORT at things class of ALNUM residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'buffer 'ar-th-sort arg))

(defun ar-trim-alnum-in-buffer-atpt (&optional arg) 
  "Employ actions of TRIM at things class of ALNUM residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'buffer 'ar-th-trim arg))

(defun ar-trim-left-alnum-in-buffer-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of ALNUM residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'buffer 'ar-th-trim-left arg))

(defun ar-trim-right-alnum-in-buffer-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of ALNUM residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'buffer 'ar-th-trim-right arg))

(defun ar-underscore-alnum-in-buffer-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of ALNUM residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'buffer 'ar-th-underscore arg))

(defun ar-whitespace-alnum-in-buffer-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of ALNUM residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'buffer 'ar-th-whitespace arg))

(defun ar-alnum-in-comment-atpt (&optional arg) 
  "Employ actions of  at things class of ALNUM residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'comment 'ar-th arg))

(defun ar-greaterangle-alnum-in-comment-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of ALNUM residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'comment 'ar-th-greaterangle arg))

(defun ar-lesserangle-alnum-in-comment-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of ALNUM residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'comment 'ar-th-lesserangle arg))

(defun ar-backslash-alnum-in-comment-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of ALNUM residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'comment 'ar-th-backslash arg))

(defun ar-colon-alnum-in-comment-atpt (&optional arg) 
  "Employ actions of COLON at things class of ALNUM residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'comment 'ar-th-colon arg))

(defun ar-beg-alnum-in-comment-atpt (&optional arg) 
  "Employ actions of BEG at things class of ALNUM residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'comment 'ar-th-beg arg))

(defun ar-blok-alnum-in-comment-atpt (&optional arg) 
  "Employ actions of BLOK at things class of ALNUM residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'comment 'ar-th-blok arg))

(defun ar-bounds-alnum-in-comment-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of ALNUM residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'comment 'ar-th-bounds arg))

(defun ar-brace-alnum-in-comment-atpt (&optional arg) 
  "Employ actions of BRACE at things class of ALNUM residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'comment 'ar-th-brace arg))

(defun ar-bracket-alnum-in-comment-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of ALNUM residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'comment 'ar-th-bracket arg))

(defun ar-commatize-alnum-in-comment-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of ALNUM residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'comment 'ar-th-commatize arg))

(defun ar-comment-alnum-in-comment-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of ALNUM residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'comment 'ar-th-comment arg))

(defun ar-dollar-alnum-in-comment-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of ALNUM residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'comment 'ar-th-dollar arg))

(defun ar-doublebackslash-alnum-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of ALNUM residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'comment 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-alnum-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of ALNUM residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'comment 'ar-th-doublebacktick arg))

(defun ar-doublequote-alnum-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of ALNUM residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'comment 'ar-th-doublequote arg))

(defun ar-doubleslash-alnum-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of ALNUM residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'comment 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-alnum-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of ALNUM residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'comment 'ar-th-doublebackslashparen arg))

(defun ar-end-alnum-in-comment-atpt (&optional arg) 
  "Employ actions of END at things class of ALNUM residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'comment 'ar-th-end arg))

(defun ar-escape-alnum-in-comment-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of ALNUM residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'comment 'ar-th-escape arg))

(defun ar-hide-alnum-in-comment-atpt (&optional arg) 
  "Employ actions of HIDE at things class of ALNUM residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'comment 'ar-th-hide arg))

(defun ar-hide-show-alnum-in-comment-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of ALNUM residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'comment 'ar-th-hide-show arg))

(defun ar-hyphen-alnum-in-comment-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of ALNUM residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'comment 'ar-th-hyphen arg))

(defun ar-kill-alnum-in-comment-atpt (&optional arg) 
  "Employ actions of KILL at things class of ALNUM residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'comment 'ar-th-kill arg))

(defun ar-leftrightsinglequote-alnum-in-comment-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of ALNUM residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'comment 'ar-th-leftrightsinglequote arg))

(defun ar-length-alnum-in-comment-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of ALNUM residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'comment 'ar-th-length arg))

(defun ar-parentize-alnum-in-comment-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of ALNUM residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'comment 'ar-th-parentize arg))

(defun ar-quote-alnum-in-comment-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of ALNUM residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'comment 'ar-th-quote arg))

(defun ar-separate-alnum-in-comment-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of ALNUM residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'comment 'ar-th-separate arg))

(defun ar-show-alnum-in-comment-atpt (&optional arg) 
  "Employ actions of SHOW at things class of ALNUM residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'comment 'ar-th-show arg))

(defun ar-singlequote-alnum-in-comment-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of ALNUM residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'comment 'ar-th-singlequote arg))

(defun ar-slash-alnum-in-comment-atpt (&optional arg) 
  "Employ actions of SLASH at things class of ALNUM residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'comment 'ar-th-slash arg))

(defun ar-star-alnum-in-comment-atpt (&optional arg) 
  "Employ actions of STAR at things class of ALNUM residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'comment 'ar-th-star arg))

(defun ar-slashparen-alnum-in-comment-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of ALNUM residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'comment 'ar-th-slashparen arg))

(defun ar-sort-alnum-in-comment-atpt (&optional arg) 
  "Employ actions of SORT at things class of ALNUM residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'comment 'ar-th-sort arg))

(defun ar-trim-alnum-in-comment-atpt (&optional arg) 
  "Employ actions of TRIM at things class of ALNUM residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'comment 'ar-th-trim arg))

(defun ar-trim-left-alnum-in-comment-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of ALNUM residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'comment 'ar-th-trim-left arg))

(defun ar-trim-right-alnum-in-comment-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of ALNUM residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'comment 'ar-th-trim-right arg))

(defun ar-underscore-alnum-in-comment-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of ALNUM residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'comment 'ar-th-underscore arg))

(defun ar-whitespace-alnum-in-comment-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of ALNUM residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'comment 'ar-th-whitespace arg))

(defun ar-alnum-in-csv-atpt (&optional arg) 
  "Employ actions of  at things class of ALNUM residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'csv 'ar-th arg))

(defun ar-greaterangle-alnum-in-csv-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of ALNUM residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'csv 'ar-th-greaterangle arg))

(defun ar-lesserangle-alnum-in-csv-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of ALNUM residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'csv 'ar-th-lesserangle arg))

(defun ar-backslash-alnum-in-csv-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of ALNUM residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'csv 'ar-th-backslash arg))

(defun ar-colon-alnum-in-csv-atpt (&optional arg) 
  "Employ actions of COLON at things class of ALNUM residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'csv 'ar-th-colon arg))

(defun ar-beg-alnum-in-csv-atpt (&optional arg) 
  "Employ actions of BEG at things class of ALNUM residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'csv 'ar-th-beg arg))

(defun ar-blok-alnum-in-csv-atpt (&optional arg) 
  "Employ actions of BLOK at things class of ALNUM residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'csv 'ar-th-blok arg))

(defun ar-bounds-alnum-in-csv-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of ALNUM residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'csv 'ar-th-bounds arg))

(defun ar-brace-alnum-in-csv-atpt (&optional arg) 
  "Employ actions of BRACE at things class of ALNUM residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'csv 'ar-th-brace arg))

(defun ar-bracket-alnum-in-csv-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of ALNUM residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'csv 'ar-th-bracket arg))

(defun ar-commatize-alnum-in-csv-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of ALNUM residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'csv 'ar-th-commatize arg))

(defun ar-comment-alnum-in-csv-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of ALNUM residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'csv 'ar-th-comment arg))

(defun ar-dollar-alnum-in-csv-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of ALNUM residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'csv 'ar-th-dollar arg))

(defun ar-doublebackslash-alnum-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of ALNUM residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'csv 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-alnum-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of ALNUM residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'csv 'ar-th-doublebacktick arg))

(defun ar-doublequote-alnum-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of ALNUM residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'csv 'ar-th-doublequote arg))

(defun ar-doubleslash-alnum-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of ALNUM residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'csv 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-alnum-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of ALNUM residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'csv 'ar-th-doublebackslashparen arg))

(defun ar-end-alnum-in-csv-atpt (&optional arg) 
  "Employ actions of END at things class of ALNUM residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'csv 'ar-th-end arg))

(defun ar-escape-alnum-in-csv-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of ALNUM residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'csv 'ar-th-escape arg))

(defun ar-hide-alnum-in-csv-atpt (&optional arg) 
  "Employ actions of HIDE at things class of ALNUM residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'csv 'ar-th-hide arg))

(defun ar-hide-show-alnum-in-csv-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of ALNUM residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'csv 'ar-th-hide-show arg))

(defun ar-hyphen-alnum-in-csv-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of ALNUM residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'csv 'ar-th-hyphen arg))

(defun ar-kill-alnum-in-csv-atpt (&optional arg) 
  "Employ actions of KILL at things class of ALNUM residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'csv 'ar-th-kill arg))

(defun ar-leftrightsinglequote-alnum-in-csv-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of ALNUM residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'csv 'ar-th-leftrightsinglequote arg))

(defun ar-length-alnum-in-csv-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of ALNUM residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'csv 'ar-th-length arg))

(defun ar-parentize-alnum-in-csv-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of ALNUM residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'csv 'ar-th-parentize arg))

(defun ar-quote-alnum-in-csv-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of ALNUM residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'csv 'ar-th-quote arg))

(defun ar-separate-alnum-in-csv-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of ALNUM residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'csv 'ar-th-separate arg))

(defun ar-show-alnum-in-csv-atpt (&optional arg) 
  "Employ actions of SHOW at things class of ALNUM residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'csv 'ar-th-show arg))

(defun ar-singlequote-alnum-in-csv-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of ALNUM residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'csv 'ar-th-singlequote arg))

(defun ar-slash-alnum-in-csv-atpt (&optional arg) 
  "Employ actions of SLASH at things class of ALNUM residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'csv 'ar-th-slash arg))

(defun ar-star-alnum-in-csv-atpt (&optional arg) 
  "Employ actions of STAR at things class of ALNUM residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'csv 'ar-th-star arg))

(defun ar-slashparen-alnum-in-csv-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of ALNUM residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'csv 'ar-th-slashparen arg))

(defun ar-sort-alnum-in-csv-atpt (&optional arg) 
  "Employ actions of SORT at things class of ALNUM residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'csv 'ar-th-sort arg))

(defun ar-trim-alnum-in-csv-atpt (&optional arg) 
  "Employ actions of TRIM at things class of ALNUM residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'csv 'ar-th-trim arg))

(defun ar-trim-left-alnum-in-csv-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of ALNUM residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'csv 'ar-th-trim-left arg))

(defun ar-trim-right-alnum-in-csv-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of ALNUM residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'csv 'ar-th-trim-right arg))

(defun ar-underscore-alnum-in-csv-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of ALNUM residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'csv 'ar-th-underscore arg))

(defun ar-whitespace-alnum-in-csv-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of ALNUM residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'csv 'ar-th-whitespace arg))

(defun ar-alnum-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of  at things class of ALNUM residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'filenamenondirectory 'ar-th arg))

(defun ar-greaterangle-alnum-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of ALNUM residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'filenamenondirectory 'ar-th-greaterangle arg))

(defun ar-lesserangle-alnum-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of ALNUM residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'filenamenondirectory 'ar-th-lesserangle arg))

(defun ar-backslash-alnum-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of ALNUM residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'filenamenondirectory 'ar-th-backslash arg))

(defun ar-colon-alnum-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of COLON at things class of ALNUM residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'filenamenondirectory 'ar-th-colon arg))

(defun ar-beg-alnum-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BEG at things class of ALNUM residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'filenamenondirectory 'ar-th-beg arg))

(defun ar-blok-alnum-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BLOK at things class of ALNUM residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'filenamenondirectory 'ar-th-blok arg))

(defun ar-bounds-alnum-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of ALNUM residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'filenamenondirectory 'ar-th-bounds arg))

(defun ar-brace-alnum-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BRACE at things class of ALNUM residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'filenamenondirectory 'ar-th-brace arg))

(defun ar-bracket-alnum-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of ALNUM residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'filenamenondirectory 'ar-th-bracket arg))

(defun ar-commatize-alnum-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of ALNUM residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'filenamenondirectory 'ar-th-commatize arg))

(defun ar-comment-alnum-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of ALNUM residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'filenamenondirectory 'ar-th-comment arg))

(defun ar-dollar-alnum-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of ALNUM residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'filenamenondirectory 'ar-th-dollar arg))

(defun ar-doublebackslash-alnum-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of ALNUM residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'filenamenondirectory 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-alnum-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of ALNUM residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'filenamenondirectory 'ar-th-doublebacktick arg))

(defun ar-doublequote-alnum-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of ALNUM residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'filenamenondirectory 'ar-th-doublequote arg))

(defun ar-doubleslash-alnum-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of ALNUM residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'filenamenondirectory 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-alnum-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of ALNUM residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'filenamenondirectory 'ar-th-doublebackslashparen arg))

(defun ar-end-alnum-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of END at things class of ALNUM residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'filenamenondirectory 'ar-th-end arg))

(defun ar-escape-alnum-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of ALNUM residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'filenamenondirectory 'ar-th-escape arg))

(defun ar-hide-alnum-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of HIDE at things class of ALNUM residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'filenamenondirectory 'ar-th-hide arg))

(defun ar-hide-show-alnum-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of ALNUM residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'filenamenondirectory 'ar-th-hide-show arg))

(defun ar-hyphen-alnum-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of ALNUM residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'filenamenondirectory 'ar-th-hyphen arg))

(defun ar-kill-alnum-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of KILL at things class of ALNUM residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'filenamenondirectory 'ar-th-kill arg))

(defun ar-leftrightsinglequote-alnum-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of ALNUM residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'filenamenondirectory 'ar-th-leftrightsinglequote arg))

(defun ar-length-alnum-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of ALNUM residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'filenamenondirectory 'ar-th-length arg))

(defun ar-parentize-alnum-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of ALNUM residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'filenamenondirectory 'ar-th-parentize arg))

(defun ar-quote-alnum-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of ALNUM residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'filenamenondirectory 'ar-th-quote arg))

(defun ar-separate-alnum-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of ALNUM residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'filenamenondirectory 'ar-th-separate arg))

(defun ar-show-alnum-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SHOW at things class of ALNUM residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'filenamenondirectory 'ar-th-show arg))

(defun ar-singlequote-alnum-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of ALNUM residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'filenamenondirectory 'ar-th-singlequote arg))

(defun ar-slash-alnum-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SLASH at things class of ALNUM residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'filenamenondirectory 'ar-th-slash arg))

(defun ar-star-alnum-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of STAR at things class of ALNUM residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'filenamenondirectory 'ar-th-star arg))

(defun ar-slashparen-alnum-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of ALNUM residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'filenamenondirectory 'ar-th-slashparen arg))

(defun ar-sort-alnum-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SORT at things class of ALNUM residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'filenamenondirectory 'ar-th-sort arg))

(defun ar-trim-alnum-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of TRIM at things class of ALNUM residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'filenamenondirectory 'ar-th-trim arg))

(defun ar-trim-left-alnum-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of ALNUM residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'filenamenondirectory 'ar-th-trim-left arg))

(defun ar-trim-right-alnum-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of ALNUM residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'filenamenondirectory 'ar-th-trim-right arg))

(defun ar-underscore-alnum-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of ALNUM residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'filenamenondirectory 'ar-th-underscore arg))

(defun ar-whitespace-alnum-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of ALNUM residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'filenamenondirectory 'ar-th-whitespace arg))

(defun ar-alnum-in-function-atpt (&optional arg) 
  "Employ actions of  at things class of ALNUM residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'function 'ar-th arg))

(defun ar-greaterangle-alnum-in-function-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of ALNUM residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'function 'ar-th-greaterangle arg))

(defun ar-lesserangle-alnum-in-function-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of ALNUM residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'function 'ar-th-lesserangle arg))

(defun ar-backslash-alnum-in-function-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of ALNUM residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'function 'ar-th-backslash arg))

(defun ar-colon-alnum-in-function-atpt (&optional arg) 
  "Employ actions of COLON at things class of ALNUM residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'function 'ar-th-colon arg))

(defun ar-beg-alnum-in-function-atpt (&optional arg) 
  "Employ actions of BEG at things class of ALNUM residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'function 'ar-th-beg arg))

(defun ar-blok-alnum-in-function-atpt (&optional arg) 
  "Employ actions of BLOK at things class of ALNUM residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'function 'ar-th-blok arg))

(defun ar-bounds-alnum-in-function-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of ALNUM residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'function 'ar-th-bounds arg))

(defun ar-brace-alnum-in-function-atpt (&optional arg) 
  "Employ actions of BRACE at things class of ALNUM residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'function 'ar-th-brace arg))

(defun ar-bracket-alnum-in-function-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of ALNUM residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'function 'ar-th-bracket arg))

(defun ar-commatize-alnum-in-function-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of ALNUM residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'function 'ar-th-commatize arg))

(defun ar-comment-alnum-in-function-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of ALNUM residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'function 'ar-th-comment arg))

(defun ar-dollar-alnum-in-function-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of ALNUM residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'function 'ar-th-dollar arg))

(defun ar-doublebackslash-alnum-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of ALNUM residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'function 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-alnum-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of ALNUM residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'function 'ar-th-doublebacktick arg))

(defun ar-doublequote-alnum-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of ALNUM residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'function 'ar-th-doublequote arg))

(defun ar-doubleslash-alnum-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of ALNUM residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'function 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-alnum-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of ALNUM residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'function 'ar-th-doublebackslashparen arg))

(defun ar-end-alnum-in-function-atpt (&optional arg) 
  "Employ actions of END at things class of ALNUM residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'function 'ar-th-end arg))

(defun ar-escape-alnum-in-function-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of ALNUM residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'function 'ar-th-escape arg))

(defun ar-hide-alnum-in-function-atpt (&optional arg) 
  "Employ actions of HIDE at things class of ALNUM residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'function 'ar-th-hide arg))

(defun ar-hide-show-alnum-in-function-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of ALNUM residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'function 'ar-th-hide-show arg))

(defun ar-hyphen-alnum-in-function-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of ALNUM residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'function 'ar-th-hyphen arg))

(defun ar-kill-alnum-in-function-atpt (&optional arg) 
  "Employ actions of KILL at things class of ALNUM residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'function 'ar-th-kill arg))

(defun ar-leftrightsinglequote-alnum-in-function-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of ALNUM residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'function 'ar-th-leftrightsinglequote arg))

(defun ar-length-alnum-in-function-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of ALNUM residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'function 'ar-th-length arg))

(defun ar-parentize-alnum-in-function-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of ALNUM residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'function 'ar-th-parentize arg))

(defun ar-quote-alnum-in-function-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of ALNUM residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'function 'ar-th-quote arg))

(defun ar-separate-alnum-in-function-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of ALNUM residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'function 'ar-th-separate arg))

(defun ar-show-alnum-in-function-atpt (&optional arg) 
  "Employ actions of SHOW at things class of ALNUM residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'function 'ar-th-show arg))

(defun ar-singlequote-alnum-in-function-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of ALNUM residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'function 'ar-th-singlequote arg))

(defun ar-slash-alnum-in-function-atpt (&optional arg) 
  "Employ actions of SLASH at things class of ALNUM residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'function 'ar-th-slash arg))

(defun ar-star-alnum-in-function-atpt (&optional arg) 
  "Employ actions of STAR at things class of ALNUM residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'function 'ar-th-star arg))

(defun ar-slashparen-alnum-in-function-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of ALNUM residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'function 'ar-th-slashparen arg))

(defun ar-sort-alnum-in-function-atpt (&optional arg) 
  "Employ actions of SORT at things class of ALNUM residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'function 'ar-th-sort arg))

(defun ar-trim-alnum-in-function-atpt (&optional arg) 
  "Employ actions of TRIM at things class of ALNUM residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'function 'ar-th-trim arg))

(defun ar-trim-left-alnum-in-function-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of ALNUM residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'function 'ar-th-trim-left arg))

(defun ar-trim-right-alnum-in-function-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of ALNUM residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'function 'ar-th-trim-right arg))

(defun ar-underscore-alnum-in-function-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of ALNUM residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'function 'ar-th-underscore arg))

(defun ar-whitespace-alnum-in-function-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of ALNUM residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'function 'ar-th-whitespace arg))

(defun ar-alnum-in-line-atpt (&optional arg) 
  "Employ actions of  at things class of ALNUM residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'line 'ar-th arg))

(defun ar-greaterangle-alnum-in-line-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of ALNUM residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'line 'ar-th-greaterangle arg))

(defun ar-lesserangle-alnum-in-line-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of ALNUM residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'line 'ar-th-lesserangle arg))

(defun ar-backslash-alnum-in-line-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of ALNUM residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'line 'ar-th-backslash arg))

(defun ar-colon-alnum-in-line-atpt (&optional arg) 
  "Employ actions of COLON at things class of ALNUM residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'line 'ar-th-colon arg))

(defun ar-beg-alnum-in-line-atpt (&optional arg) 
  "Employ actions of BEG at things class of ALNUM residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'line 'ar-th-beg arg))

(defun ar-blok-alnum-in-line-atpt (&optional arg) 
  "Employ actions of BLOK at things class of ALNUM residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'line 'ar-th-blok arg))

(defun ar-bounds-alnum-in-line-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of ALNUM residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'line 'ar-th-bounds arg))

(defun ar-brace-alnum-in-line-atpt (&optional arg) 
  "Employ actions of BRACE at things class of ALNUM residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'line 'ar-th-brace arg))

(defun ar-bracket-alnum-in-line-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of ALNUM residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'line 'ar-th-bracket arg))

(defun ar-commatize-alnum-in-line-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of ALNUM residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'line 'ar-th-commatize arg))

(defun ar-comment-alnum-in-line-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of ALNUM residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'line 'ar-th-comment arg))

(defun ar-dollar-alnum-in-line-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of ALNUM residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'line 'ar-th-dollar arg))

(defun ar-doublebackslash-alnum-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of ALNUM residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'line 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-alnum-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of ALNUM residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'line 'ar-th-doublebacktick arg))

(defun ar-doublequote-alnum-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of ALNUM residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'line 'ar-th-doublequote arg))

(defun ar-doubleslash-alnum-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of ALNUM residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'line 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-alnum-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of ALNUM residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'line 'ar-th-doublebackslashparen arg))

(defun ar-end-alnum-in-line-atpt (&optional arg) 
  "Employ actions of END at things class of ALNUM residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'line 'ar-th-end arg))

(defun ar-escape-alnum-in-line-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of ALNUM residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'line 'ar-th-escape arg))

(defun ar-hide-alnum-in-line-atpt (&optional arg) 
  "Employ actions of HIDE at things class of ALNUM residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'line 'ar-th-hide arg))

(defun ar-hide-show-alnum-in-line-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of ALNUM residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'line 'ar-th-hide-show arg))

(defun ar-hyphen-alnum-in-line-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of ALNUM residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'line 'ar-th-hyphen arg))

(defun ar-kill-alnum-in-line-atpt (&optional arg) 
  "Employ actions of KILL at things class of ALNUM residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'line 'ar-th-kill arg))

(defun ar-leftrightsinglequote-alnum-in-line-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of ALNUM residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'line 'ar-th-leftrightsinglequote arg))

(defun ar-length-alnum-in-line-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of ALNUM residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'line 'ar-th-length arg))

(defun ar-parentize-alnum-in-line-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of ALNUM residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'line 'ar-th-parentize arg))

(defun ar-quote-alnum-in-line-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of ALNUM residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'line 'ar-th-quote arg))

(defun ar-separate-alnum-in-line-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of ALNUM residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'line 'ar-th-separate arg))

(defun ar-show-alnum-in-line-atpt (&optional arg) 
  "Employ actions of SHOW at things class of ALNUM residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'line 'ar-th-show arg))

(defun ar-singlequote-alnum-in-line-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of ALNUM residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'line 'ar-th-singlequote arg))

(defun ar-slash-alnum-in-line-atpt (&optional arg) 
  "Employ actions of SLASH at things class of ALNUM residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'line 'ar-th-slash arg))

(defun ar-star-alnum-in-line-atpt (&optional arg) 
  "Employ actions of STAR at things class of ALNUM residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'line 'ar-th-star arg))

(defun ar-slashparen-alnum-in-line-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of ALNUM residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'line 'ar-th-slashparen arg))

(defun ar-sort-alnum-in-line-atpt (&optional arg) 
  "Employ actions of SORT at things class of ALNUM residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'line 'ar-th-sort arg))

(defun ar-trim-alnum-in-line-atpt (&optional arg) 
  "Employ actions of TRIM at things class of ALNUM residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'line 'ar-th-trim arg))

(defun ar-trim-left-alnum-in-line-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of ALNUM residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'line 'ar-th-trim-left arg))

(defun ar-trim-right-alnum-in-line-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of ALNUM residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'line 'ar-th-trim-right arg))

(defun ar-underscore-alnum-in-line-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of ALNUM residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'line 'ar-th-underscore arg))

(defun ar-whitespace-alnum-in-line-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of ALNUM residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'line 'ar-th-whitespace arg))

(defun ar-alnum-in-list-atpt (&optional arg) 
  "Employ actions of  at things class of ALNUM residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'list 'ar-th arg))

(defun ar-greaterangle-alnum-in-list-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of ALNUM residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'list 'ar-th-greaterangle arg))

(defun ar-lesserangle-alnum-in-list-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of ALNUM residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'list 'ar-th-lesserangle arg))

(defun ar-backslash-alnum-in-list-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of ALNUM residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'list 'ar-th-backslash arg))

(defun ar-colon-alnum-in-list-atpt (&optional arg) 
  "Employ actions of COLON at things class of ALNUM residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'list 'ar-th-colon arg))

(defun ar-beg-alnum-in-list-atpt (&optional arg) 
  "Employ actions of BEG at things class of ALNUM residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'list 'ar-th-beg arg))

(defun ar-blok-alnum-in-list-atpt (&optional arg) 
  "Employ actions of BLOK at things class of ALNUM residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'list 'ar-th-blok arg))

(defun ar-bounds-alnum-in-list-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of ALNUM residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'list 'ar-th-bounds arg))

(defun ar-brace-alnum-in-list-atpt (&optional arg) 
  "Employ actions of BRACE at things class of ALNUM residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'list 'ar-th-brace arg))

(defun ar-bracket-alnum-in-list-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of ALNUM residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'list 'ar-th-bracket arg))

(defun ar-commatize-alnum-in-list-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of ALNUM residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'list 'ar-th-commatize arg))

(defun ar-comment-alnum-in-list-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of ALNUM residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'list 'ar-th-comment arg))

(defun ar-dollar-alnum-in-list-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of ALNUM residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'list 'ar-th-dollar arg))

(defun ar-doublebackslash-alnum-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of ALNUM residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'list 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-alnum-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of ALNUM residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'list 'ar-th-doublebacktick arg))

(defun ar-doublequote-alnum-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of ALNUM residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'list 'ar-th-doublequote arg))

(defun ar-doubleslash-alnum-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of ALNUM residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'list 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-alnum-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of ALNUM residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'list 'ar-th-doublebackslashparen arg))

(defun ar-end-alnum-in-list-atpt (&optional arg) 
  "Employ actions of END at things class of ALNUM residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'list 'ar-th-end arg))

(defun ar-escape-alnum-in-list-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of ALNUM residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'list 'ar-th-escape arg))

(defun ar-hide-alnum-in-list-atpt (&optional arg) 
  "Employ actions of HIDE at things class of ALNUM residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'list 'ar-th-hide arg))

(defun ar-hide-show-alnum-in-list-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of ALNUM residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'list 'ar-th-hide-show arg))

(defun ar-hyphen-alnum-in-list-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of ALNUM residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'list 'ar-th-hyphen arg))

(defun ar-kill-alnum-in-list-atpt (&optional arg) 
  "Employ actions of KILL at things class of ALNUM residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'list 'ar-th-kill arg))

(defun ar-leftrightsinglequote-alnum-in-list-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of ALNUM residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'list 'ar-th-leftrightsinglequote arg))

(defun ar-length-alnum-in-list-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of ALNUM residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'list 'ar-th-length arg))

(defun ar-parentize-alnum-in-list-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of ALNUM residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'list 'ar-th-parentize arg))

(defun ar-quote-alnum-in-list-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of ALNUM residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'list 'ar-th-quote arg))

(defun ar-separate-alnum-in-list-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of ALNUM residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'list 'ar-th-separate arg))

(defun ar-show-alnum-in-list-atpt (&optional arg) 
  "Employ actions of SHOW at things class of ALNUM residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'list 'ar-th-show arg))

(defun ar-singlequote-alnum-in-list-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of ALNUM residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'list 'ar-th-singlequote arg))

(defun ar-slash-alnum-in-list-atpt (&optional arg) 
  "Employ actions of SLASH at things class of ALNUM residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'list 'ar-th-slash arg))

(defun ar-star-alnum-in-list-atpt (&optional arg) 
  "Employ actions of STAR at things class of ALNUM residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'list 'ar-th-star arg))

(defun ar-slashparen-alnum-in-list-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of ALNUM residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'list 'ar-th-slashparen arg))

(defun ar-sort-alnum-in-list-atpt (&optional arg) 
  "Employ actions of SORT at things class of ALNUM residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'list 'ar-th-sort arg))

(defun ar-trim-alnum-in-list-atpt (&optional arg) 
  "Employ actions of TRIM at things class of ALNUM residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'list 'ar-th-trim arg))

(defun ar-trim-left-alnum-in-list-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of ALNUM residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'list 'ar-th-trim-left arg))

(defun ar-trim-right-alnum-in-list-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of ALNUM residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'list 'ar-th-trim-right arg))

(defun ar-underscore-alnum-in-list-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of ALNUM residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'list 'ar-th-underscore arg))

(defun ar-whitespace-alnum-in-list-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of ALNUM residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'list 'ar-th-whitespace arg))

(defun ar-alnum-in-name-atpt (&optional arg) 
  "Employ actions of  at things class of ALNUM residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'name 'ar-th arg))

(defun ar-greaterangle-alnum-in-name-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of ALNUM residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'name 'ar-th-greaterangle arg))

(defun ar-lesserangle-alnum-in-name-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of ALNUM residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'name 'ar-th-lesserangle arg))

(defun ar-backslash-alnum-in-name-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of ALNUM residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'name 'ar-th-backslash arg))

(defun ar-colon-alnum-in-name-atpt (&optional arg) 
  "Employ actions of COLON at things class of ALNUM residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'name 'ar-th-colon arg))

(defun ar-beg-alnum-in-name-atpt (&optional arg) 
  "Employ actions of BEG at things class of ALNUM residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'name 'ar-th-beg arg))

(defun ar-blok-alnum-in-name-atpt (&optional arg) 
  "Employ actions of BLOK at things class of ALNUM residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'name 'ar-th-blok arg))

(defun ar-bounds-alnum-in-name-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of ALNUM residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'name 'ar-th-bounds arg))

(defun ar-brace-alnum-in-name-atpt (&optional arg) 
  "Employ actions of BRACE at things class of ALNUM residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'name 'ar-th-brace arg))

(defun ar-bracket-alnum-in-name-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of ALNUM residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'name 'ar-th-bracket arg))

(defun ar-commatize-alnum-in-name-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of ALNUM residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'name 'ar-th-commatize arg))

(defun ar-comment-alnum-in-name-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of ALNUM residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'name 'ar-th-comment arg))

(defun ar-dollar-alnum-in-name-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of ALNUM residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'name 'ar-th-dollar arg))

(defun ar-doublebackslash-alnum-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of ALNUM residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'name 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-alnum-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of ALNUM residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'name 'ar-th-doublebacktick arg))

(defun ar-doublequote-alnum-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of ALNUM residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'name 'ar-th-doublequote arg))

(defun ar-doubleslash-alnum-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of ALNUM residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'name 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-alnum-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of ALNUM residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'name 'ar-th-doublebackslashparen arg))

(defun ar-end-alnum-in-name-atpt (&optional arg) 
  "Employ actions of END at things class of ALNUM residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'name 'ar-th-end arg))

(defun ar-escape-alnum-in-name-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of ALNUM residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'name 'ar-th-escape arg))

(defun ar-hide-alnum-in-name-atpt (&optional arg) 
  "Employ actions of HIDE at things class of ALNUM residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'name 'ar-th-hide arg))

(defun ar-hide-show-alnum-in-name-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of ALNUM residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'name 'ar-th-hide-show arg))

(defun ar-hyphen-alnum-in-name-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of ALNUM residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'name 'ar-th-hyphen arg))

(defun ar-kill-alnum-in-name-atpt (&optional arg) 
  "Employ actions of KILL at things class of ALNUM residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'name 'ar-th-kill arg))

(defun ar-leftrightsinglequote-alnum-in-name-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of ALNUM residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'name 'ar-th-leftrightsinglequote arg))

(defun ar-length-alnum-in-name-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of ALNUM residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'name 'ar-th-length arg))

(defun ar-parentize-alnum-in-name-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of ALNUM residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'name 'ar-th-parentize arg))

(defun ar-quote-alnum-in-name-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of ALNUM residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'name 'ar-th-quote arg))

(defun ar-separate-alnum-in-name-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of ALNUM residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'name 'ar-th-separate arg))

(defun ar-show-alnum-in-name-atpt (&optional arg) 
  "Employ actions of SHOW at things class of ALNUM residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'name 'ar-th-show arg))

(defun ar-singlequote-alnum-in-name-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of ALNUM residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'name 'ar-th-singlequote arg))

(defun ar-slash-alnum-in-name-atpt (&optional arg) 
  "Employ actions of SLASH at things class of ALNUM residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'name 'ar-th-slash arg))

(defun ar-star-alnum-in-name-atpt (&optional arg) 
  "Employ actions of STAR at things class of ALNUM residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'name 'ar-th-star arg))

(defun ar-slashparen-alnum-in-name-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of ALNUM residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'name 'ar-th-slashparen arg))

(defun ar-sort-alnum-in-name-atpt (&optional arg) 
  "Employ actions of SORT at things class of ALNUM residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'name 'ar-th-sort arg))

(defun ar-trim-alnum-in-name-atpt (&optional arg) 
  "Employ actions of TRIM at things class of ALNUM residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'name 'ar-th-trim arg))

(defun ar-trim-left-alnum-in-name-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of ALNUM residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'name 'ar-th-trim-left arg))

(defun ar-trim-right-alnum-in-name-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of ALNUM residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'name 'ar-th-trim-right arg))

(defun ar-underscore-alnum-in-name-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of ALNUM residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'name 'ar-th-underscore arg))

(defun ar-whitespace-alnum-in-name-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of ALNUM residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'name 'ar-th-whitespace arg))

(defun ar-alnum-in-page-atpt (&optional arg) 
  "Employ actions of  at things class of ALNUM residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'page 'ar-th arg))

(defun ar-greaterangle-alnum-in-page-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of ALNUM residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'page 'ar-th-greaterangle arg))

(defun ar-lesserangle-alnum-in-page-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of ALNUM residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'page 'ar-th-lesserangle arg))

(defun ar-backslash-alnum-in-page-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of ALNUM residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'page 'ar-th-backslash arg))

(defun ar-colon-alnum-in-page-atpt (&optional arg) 
  "Employ actions of COLON at things class of ALNUM residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'page 'ar-th-colon arg))

(defun ar-beg-alnum-in-page-atpt (&optional arg) 
  "Employ actions of BEG at things class of ALNUM residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'page 'ar-th-beg arg))

(defun ar-blok-alnum-in-page-atpt (&optional arg) 
  "Employ actions of BLOK at things class of ALNUM residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'page 'ar-th-blok arg))

(defun ar-bounds-alnum-in-page-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of ALNUM residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'page 'ar-th-bounds arg))

(defun ar-brace-alnum-in-page-atpt (&optional arg) 
  "Employ actions of BRACE at things class of ALNUM residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'page 'ar-th-brace arg))

(defun ar-bracket-alnum-in-page-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of ALNUM residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'page 'ar-th-bracket arg))

(defun ar-commatize-alnum-in-page-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of ALNUM residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'page 'ar-th-commatize arg))

(defun ar-comment-alnum-in-page-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of ALNUM residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'page 'ar-th-comment arg))

(defun ar-dollar-alnum-in-page-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of ALNUM residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'page 'ar-th-dollar arg))

(defun ar-doublebackslash-alnum-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of ALNUM residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'page 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-alnum-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of ALNUM residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'page 'ar-th-doublebacktick arg))

(defun ar-doublequote-alnum-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of ALNUM residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'page 'ar-th-doublequote arg))

(defun ar-doubleslash-alnum-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of ALNUM residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'page 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-alnum-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of ALNUM residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'page 'ar-th-doublebackslashparen arg))

(defun ar-end-alnum-in-page-atpt (&optional arg) 
  "Employ actions of END at things class of ALNUM residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'page 'ar-th-end arg))

(defun ar-escape-alnum-in-page-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of ALNUM residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'page 'ar-th-escape arg))

(defun ar-hide-alnum-in-page-atpt (&optional arg) 
  "Employ actions of HIDE at things class of ALNUM residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'page 'ar-th-hide arg))

(defun ar-hide-show-alnum-in-page-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of ALNUM residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'page 'ar-th-hide-show arg))

(defun ar-hyphen-alnum-in-page-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of ALNUM residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'page 'ar-th-hyphen arg))

(defun ar-kill-alnum-in-page-atpt (&optional arg) 
  "Employ actions of KILL at things class of ALNUM residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'page 'ar-th-kill arg))

(defun ar-leftrightsinglequote-alnum-in-page-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of ALNUM residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'page 'ar-th-leftrightsinglequote arg))

(defun ar-length-alnum-in-page-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of ALNUM residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'page 'ar-th-length arg))

(defun ar-parentize-alnum-in-page-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of ALNUM residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'page 'ar-th-parentize arg))

(defun ar-quote-alnum-in-page-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of ALNUM residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'page 'ar-th-quote arg))

(defun ar-separate-alnum-in-page-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of ALNUM residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'page 'ar-th-separate arg))

(defun ar-show-alnum-in-page-atpt (&optional arg) 
  "Employ actions of SHOW at things class of ALNUM residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'page 'ar-th-show arg))

(defun ar-singlequote-alnum-in-page-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of ALNUM residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'page 'ar-th-singlequote arg))

(defun ar-slash-alnum-in-page-atpt (&optional arg) 
  "Employ actions of SLASH at things class of ALNUM residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'page 'ar-th-slash arg))

(defun ar-star-alnum-in-page-atpt (&optional arg) 
  "Employ actions of STAR at things class of ALNUM residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'page 'ar-th-star arg))

(defun ar-slashparen-alnum-in-page-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of ALNUM residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'page 'ar-th-slashparen arg))

(defun ar-sort-alnum-in-page-atpt (&optional arg) 
  "Employ actions of SORT at things class of ALNUM residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'page 'ar-th-sort arg))

(defun ar-trim-alnum-in-page-atpt (&optional arg) 
  "Employ actions of TRIM at things class of ALNUM residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'page 'ar-th-trim arg))

(defun ar-trim-left-alnum-in-page-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of ALNUM residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'page 'ar-th-trim-left arg))

(defun ar-trim-right-alnum-in-page-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of ALNUM residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'page 'ar-th-trim-right arg))

(defun ar-underscore-alnum-in-page-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of ALNUM residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'page 'ar-th-underscore arg))

(defun ar-whitespace-alnum-in-page-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of ALNUM residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'page 'ar-th-whitespace arg))

(defun ar-alnum-in-paragraph-atpt (&optional arg) 
  "Employ actions of  at things class of ALNUM residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'paragraph 'ar-th arg))

(defun ar-greaterangle-alnum-in-paragraph-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of ALNUM residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'paragraph 'ar-th-greaterangle arg))

(defun ar-lesserangle-alnum-in-paragraph-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of ALNUM residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'paragraph 'ar-th-lesserangle arg))

(defun ar-backslash-alnum-in-paragraph-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of ALNUM residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'paragraph 'ar-th-backslash arg))

(defun ar-colon-alnum-in-paragraph-atpt (&optional arg) 
  "Employ actions of COLON at things class of ALNUM residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'paragraph 'ar-th-colon arg))

(defun ar-beg-alnum-in-paragraph-atpt (&optional arg) 
  "Employ actions of BEG at things class of ALNUM residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'paragraph 'ar-th-beg arg))

(defun ar-blok-alnum-in-paragraph-atpt (&optional arg) 
  "Employ actions of BLOK at things class of ALNUM residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'paragraph 'ar-th-blok arg))

(defun ar-bounds-alnum-in-paragraph-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of ALNUM residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'paragraph 'ar-th-bounds arg))

(defun ar-brace-alnum-in-paragraph-atpt (&optional arg) 
  "Employ actions of BRACE at things class of ALNUM residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'paragraph 'ar-th-brace arg))

(defun ar-bracket-alnum-in-paragraph-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of ALNUM residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'paragraph 'ar-th-bracket arg))

(defun ar-commatize-alnum-in-paragraph-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of ALNUM residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'paragraph 'ar-th-commatize arg))

(defun ar-comment-alnum-in-paragraph-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of ALNUM residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'paragraph 'ar-th-comment arg))

(defun ar-dollar-alnum-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of ALNUM residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'paragraph 'ar-th-dollar arg))

(defun ar-doublebackslash-alnum-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of ALNUM residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'paragraph 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-alnum-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of ALNUM residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'paragraph 'ar-th-doublebacktick arg))

(defun ar-doublequote-alnum-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of ALNUM residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'paragraph 'ar-th-doublequote arg))

(defun ar-doubleslash-alnum-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of ALNUM residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'paragraph 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-alnum-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of ALNUM residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'paragraph 'ar-th-doublebackslashparen arg))

(defun ar-end-alnum-in-paragraph-atpt (&optional arg) 
  "Employ actions of END at things class of ALNUM residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'paragraph 'ar-th-end arg))

(defun ar-escape-alnum-in-paragraph-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of ALNUM residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'paragraph 'ar-th-escape arg))

(defun ar-hide-alnum-in-paragraph-atpt (&optional arg) 
  "Employ actions of HIDE at things class of ALNUM residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'paragraph 'ar-th-hide arg))

(defun ar-hide-show-alnum-in-paragraph-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of ALNUM residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'paragraph 'ar-th-hide-show arg))

(defun ar-hyphen-alnum-in-paragraph-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of ALNUM residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'paragraph 'ar-th-hyphen arg))

(defun ar-kill-alnum-in-paragraph-atpt (&optional arg) 
  "Employ actions of KILL at things class of ALNUM residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'paragraph 'ar-th-kill arg))

(defun ar-leftrightsinglequote-alnum-in-paragraph-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of ALNUM residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'paragraph 'ar-th-leftrightsinglequote arg))

(defun ar-length-alnum-in-paragraph-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of ALNUM residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'paragraph 'ar-th-length arg))

(defun ar-parentize-alnum-in-paragraph-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of ALNUM residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'paragraph 'ar-th-parentize arg))

(defun ar-quote-alnum-in-paragraph-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of ALNUM residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'paragraph 'ar-th-quote arg))

(defun ar-separate-alnum-in-paragraph-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of ALNUM residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'paragraph 'ar-th-separate arg))

(defun ar-show-alnum-in-paragraph-atpt (&optional arg) 
  "Employ actions of SHOW at things class of ALNUM residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'paragraph 'ar-th-show arg))

(defun ar-singlequote-alnum-in-paragraph-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of ALNUM residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'paragraph 'ar-th-singlequote arg))

(defun ar-slash-alnum-in-paragraph-atpt (&optional arg) 
  "Employ actions of SLASH at things class of ALNUM residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'paragraph 'ar-th-slash arg))

(defun ar-star-alnum-in-paragraph-atpt (&optional arg) 
  "Employ actions of STAR at things class of ALNUM residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'paragraph 'ar-th-star arg))

(defun ar-slashparen-alnum-in-paragraph-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of ALNUM residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'paragraph 'ar-th-slashparen arg))

(defun ar-sort-alnum-in-paragraph-atpt (&optional arg) 
  "Employ actions of SORT at things class of ALNUM residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'paragraph 'ar-th-sort arg))

(defun ar-trim-alnum-in-paragraph-atpt (&optional arg) 
  "Employ actions of TRIM at things class of ALNUM residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'paragraph 'ar-th-trim arg))

(defun ar-trim-left-alnum-in-paragraph-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of ALNUM residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'paragraph 'ar-th-trim-left arg))

(defun ar-trim-right-alnum-in-paragraph-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of ALNUM residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'paragraph 'ar-th-trim-right arg))

(defun ar-underscore-alnum-in-paragraph-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of ALNUM residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'paragraph 'ar-th-underscore arg))

(defun ar-whitespace-alnum-in-paragraph-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of ALNUM residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'paragraph 'ar-th-whitespace arg))

(defun ar-alnum-in-region-atpt (&optional arg) 
  "Employ actions of  at things class of ALNUM residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'region 'ar-th arg))

(defun ar-greaterangle-alnum-in-region-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of ALNUM residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'region 'ar-th-greaterangle arg))

(defun ar-lesserangle-alnum-in-region-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of ALNUM residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'region 'ar-th-lesserangle arg))

(defun ar-backslash-alnum-in-region-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of ALNUM residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'region 'ar-th-backslash arg))

(defun ar-colon-alnum-in-region-atpt (&optional arg) 
  "Employ actions of COLON at things class of ALNUM residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'region 'ar-th-colon arg))

(defun ar-beg-alnum-in-region-atpt (&optional arg) 
  "Employ actions of BEG at things class of ALNUM residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'region 'ar-th-beg arg))

(defun ar-blok-alnum-in-region-atpt (&optional arg) 
  "Employ actions of BLOK at things class of ALNUM residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'region 'ar-th-blok arg))

(defun ar-bounds-alnum-in-region-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of ALNUM residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'region 'ar-th-bounds arg))

(defun ar-brace-alnum-in-region-atpt (&optional arg) 
  "Employ actions of BRACE at things class of ALNUM residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'region 'ar-th-brace arg))

(defun ar-bracket-alnum-in-region-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of ALNUM residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'region 'ar-th-bracket arg))

(defun ar-commatize-alnum-in-region-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of ALNUM residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'region 'ar-th-commatize arg))

(defun ar-comment-alnum-in-region-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of ALNUM residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'region 'ar-th-comment arg))

(defun ar-dollar-alnum-in-region-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of ALNUM residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'region 'ar-th-dollar arg))

(defun ar-doublebackslash-alnum-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of ALNUM residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'region 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-alnum-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of ALNUM residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'region 'ar-th-doublebacktick arg))

(defun ar-doublequote-alnum-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of ALNUM residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'region 'ar-th-doublequote arg))

(defun ar-doubleslash-alnum-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of ALNUM residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'region 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-alnum-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of ALNUM residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'region 'ar-th-doublebackslashparen arg))

(defun ar-end-alnum-in-region-atpt (&optional arg) 
  "Employ actions of END at things class of ALNUM residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'region 'ar-th-end arg))

(defun ar-escape-alnum-in-region-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of ALNUM residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'region 'ar-th-escape arg))

(defun ar-hide-alnum-in-region-atpt (&optional arg) 
  "Employ actions of HIDE at things class of ALNUM residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'region 'ar-th-hide arg))

(defun ar-hide-show-alnum-in-region-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of ALNUM residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'region 'ar-th-hide-show arg))

(defun ar-hyphen-alnum-in-region-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of ALNUM residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'region 'ar-th-hyphen arg))

(defun ar-kill-alnum-in-region-atpt (&optional arg) 
  "Employ actions of KILL at things class of ALNUM residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'region 'ar-th-kill arg))

(defun ar-leftrightsinglequote-alnum-in-region-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of ALNUM residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'region 'ar-th-leftrightsinglequote arg))

(defun ar-length-alnum-in-region-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of ALNUM residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'region 'ar-th-length arg))

(defun ar-parentize-alnum-in-region-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of ALNUM residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'region 'ar-th-parentize arg))

(defun ar-quote-alnum-in-region-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of ALNUM residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'region 'ar-th-quote arg))

(defun ar-separate-alnum-in-region-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of ALNUM residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'region 'ar-th-separate arg))

(defun ar-show-alnum-in-region-atpt (&optional arg) 
  "Employ actions of SHOW at things class of ALNUM residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'region 'ar-th-show arg))

(defun ar-singlequote-alnum-in-region-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of ALNUM residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'region 'ar-th-singlequote arg))

(defun ar-slash-alnum-in-region-atpt (&optional arg) 
  "Employ actions of SLASH at things class of ALNUM residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'region 'ar-th-slash arg))

(defun ar-star-alnum-in-region-atpt (&optional arg) 
  "Employ actions of STAR at things class of ALNUM residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'region 'ar-th-star arg))

(defun ar-slashparen-alnum-in-region-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of ALNUM residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'region 'ar-th-slashparen arg))

(defun ar-sort-alnum-in-region-atpt (&optional arg) 
  "Employ actions of SORT at things class of ALNUM residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'region 'ar-th-sort arg))

(defun ar-trim-alnum-in-region-atpt (&optional arg) 
  "Employ actions of TRIM at things class of ALNUM residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'region 'ar-th-trim arg))

(defun ar-trim-left-alnum-in-region-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of ALNUM residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'region 'ar-th-trim-left arg))

(defun ar-trim-right-alnum-in-region-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of ALNUM residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'region 'ar-th-trim-right arg))

(defun ar-underscore-alnum-in-region-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of ALNUM residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'region 'ar-th-underscore arg))

(defun ar-whitespace-alnum-in-region-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of ALNUM residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'region 'ar-th-whitespace arg))

(defun ar-alnum-in-sentence-atpt (&optional arg) 
  "Employ actions of  at things class of ALNUM residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sentence 'ar-th arg))

(defun ar-greaterangle-alnum-in-sentence-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of ALNUM residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sentence 'ar-th-greaterangle arg))

(defun ar-lesserangle-alnum-in-sentence-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of ALNUM residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sentence 'ar-th-lesserangle arg))

(defun ar-backslash-alnum-in-sentence-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of ALNUM residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sentence 'ar-th-backslash arg))

(defun ar-colon-alnum-in-sentence-atpt (&optional arg) 
  "Employ actions of COLON at things class of ALNUM residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sentence 'ar-th-colon arg))

(defun ar-beg-alnum-in-sentence-atpt (&optional arg) 
  "Employ actions of BEG at things class of ALNUM residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sentence 'ar-th-beg arg))

(defun ar-blok-alnum-in-sentence-atpt (&optional arg) 
  "Employ actions of BLOK at things class of ALNUM residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sentence 'ar-th-blok arg))

(defun ar-bounds-alnum-in-sentence-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of ALNUM residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sentence 'ar-th-bounds arg))

(defun ar-brace-alnum-in-sentence-atpt (&optional arg) 
  "Employ actions of BRACE at things class of ALNUM residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sentence 'ar-th-brace arg))

(defun ar-bracket-alnum-in-sentence-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of ALNUM residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sentence 'ar-th-bracket arg))

(defun ar-commatize-alnum-in-sentence-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of ALNUM residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sentence 'ar-th-commatize arg))

(defun ar-comment-alnum-in-sentence-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of ALNUM residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sentence 'ar-th-comment arg))

(defun ar-dollar-alnum-in-sentence-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of ALNUM residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sentence 'ar-th-dollar arg))

(defun ar-doublebackslash-alnum-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of ALNUM residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sentence 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-alnum-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of ALNUM residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sentence 'ar-th-doublebacktick arg))

(defun ar-doublequote-alnum-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of ALNUM residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sentence 'ar-th-doublequote arg))

(defun ar-doubleslash-alnum-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of ALNUM residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sentence 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-alnum-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of ALNUM residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sentence 'ar-th-doublebackslashparen arg))

(defun ar-end-alnum-in-sentence-atpt (&optional arg) 
  "Employ actions of END at things class of ALNUM residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sentence 'ar-th-end arg))

(defun ar-escape-alnum-in-sentence-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of ALNUM residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sentence 'ar-th-escape arg))

(defun ar-hide-alnum-in-sentence-atpt (&optional arg) 
  "Employ actions of HIDE at things class of ALNUM residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sentence 'ar-th-hide arg))

(defun ar-hide-show-alnum-in-sentence-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of ALNUM residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sentence 'ar-th-hide-show arg))

(defun ar-hyphen-alnum-in-sentence-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of ALNUM residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sentence 'ar-th-hyphen arg))

(defun ar-kill-alnum-in-sentence-atpt (&optional arg) 
  "Employ actions of KILL at things class of ALNUM residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sentence 'ar-th-kill arg))

(defun ar-leftrightsinglequote-alnum-in-sentence-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of ALNUM residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sentence 'ar-th-leftrightsinglequote arg))

(defun ar-length-alnum-in-sentence-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of ALNUM residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sentence 'ar-th-length arg))

(defun ar-parentize-alnum-in-sentence-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of ALNUM residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sentence 'ar-th-parentize arg))

(defun ar-quote-alnum-in-sentence-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of ALNUM residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sentence 'ar-th-quote arg))

(defun ar-separate-alnum-in-sentence-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of ALNUM residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sentence 'ar-th-separate arg))

(defun ar-show-alnum-in-sentence-atpt (&optional arg) 
  "Employ actions of SHOW at things class of ALNUM residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sentence 'ar-th-show arg))

(defun ar-singlequote-alnum-in-sentence-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of ALNUM residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sentence 'ar-th-singlequote arg))

(defun ar-slash-alnum-in-sentence-atpt (&optional arg) 
  "Employ actions of SLASH at things class of ALNUM residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sentence 'ar-th-slash arg))

(defun ar-star-alnum-in-sentence-atpt (&optional arg) 
  "Employ actions of STAR at things class of ALNUM residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sentence 'ar-th-star arg))

(defun ar-slashparen-alnum-in-sentence-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of ALNUM residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sentence 'ar-th-slashparen arg))

(defun ar-sort-alnum-in-sentence-atpt (&optional arg) 
  "Employ actions of SORT at things class of ALNUM residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sentence 'ar-th-sort arg))

(defun ar-trim-alnum-in-sentence-atpt (&optional arg) 
  "Employ actions of TRIM at things class of ALNUM residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sentence 'ar-th-trim arg))

(defun ar-trim-left-alnum-in-sentence-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of ALNUM residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sentence 'ar-th-trim-left arg))

(defun ar-trim-right-alnum-in-sentence-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of ALNUM residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sentence 'ar-th-trim-right arg))

(defun ar-underscore-alnum-in-sentence-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of ALNUM residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sentence 'ar-th-underscore arg))

(defun ar-whitespace-alnum-in-sentence-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of ALNUM residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sentence 'ar-th-whitespace arg))

(defun ar-alnum-in-sexp-atpt (&optional arg) 
  "Employ actions of  at things class of ALNUM residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sexp 'ar-th arg))

(defun ar-greaterangle-alnum-in-sexp-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of ALNUM residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sexp 'ar-th-greaterangle arg))

(defun ar-lesserangle-alnum-in-sexp-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of ALNUM residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sexp 'ar-th-lesserangle arg))

(defun ar-backslash-alnum-in-sexp-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of ALNUM residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sexp 'ar-th-backslash arg))

(defun ar-colon-alnum-in-sexp-atpt (&optional arg) 
  "Employ actions of COLON at things class of ALNUM residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sexp 'ar-th-colon arg))

(defun ar-beg-alnum-in-sexp-atpt (&optional arg) 
  "Employ actions of BEG at things class of ALNUM residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sexp 'ar-th-beg arg))

(defun ar-blok-alnum-in-sexp-atpt (&optional arg) 
  "Employ actions of BLOK at things class of ALNUM residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sexp 'ar-th-blok arg))

(defun ar-bounds-alnum-in-sexp-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of ALNUM residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sexp 'ar-th-bounds arg))

(defun ar-brace-alnum-in-sexp-atpt (&optional arg) 
  "Employ actions of BRACE at things class of ALNUM residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sexp 'ar-th-brace arg))

(defun ar-bracket-alnum-in-sexp-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of ALNUM residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sexp 'ar-th-bracket arg))

(defun ar-commatize-alnum-in-sexp-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of ALNUM residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sexp 'ar-th-commatize arg))

(defun ar-comment-alnum-in-sexp-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of ALNUM residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sexp 'ar-th-comment arg))

(defun ar-dollar-alnum-in-sexp-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of ALNUM residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sexp 'ar-th-dollar arg))

(defun ar-doublebackslash-alnum-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of ALNUM residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sexp 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-alnum-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of ALNUM residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sexp 'ar-th-doublebacktick arg))

(defun ar-doublequote-alnum-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of ALNUM residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sexp 'ar-th-doublequote arg))

(defun ar-doubleslash-alnum-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of ALNUM residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sexp 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-alnum-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of ALNUM residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sexp 'ar-th-doublebackslashparen arg))

(defun ar-end-alnum-in-sexp-atpt (&optional arg) 
  "Employ actions of END at things class of ALNUM residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sexp 'ar-th-end arg))

(defun ar-escape-alnum-in-sexp-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of ALNUM residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sexp 'ar-th-escape arg))

(defun ar-hide-alnum-in-sexp-atpt (&optional arg) 
  "Employ actions of HIDE at things class of ALNUM residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sexp 'ar-th-hide arg))

(defun ar-hide-show-alnum-in-sexp-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of ALNUM residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sexp 'ar-th-hide-show arg))

(defun ar-hyphen-alnum-in-sexp-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of ALNUM residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sexp 'ar-th-hyphen arg))

(defun ar-kill-alnum-in-sexp-atpt (&optional arg) 
  "Employ actions of KILL at things class of ALNUM residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sexp 'ar-th-kill arg))

(defun ar-leftrightsinglequote-alnum-in-sexp-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of ALNUM residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sexp 'ar-th-leftrightsinglequote arg))

(defun ar-length-alnum-in-sexp-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of ALNUM residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sexp 'ar-th-length arg))

(defun ar-parentize-alnum-in-sexp-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of ALNUM residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sexp 'ar-th-parentize arg))

(defun ar-quote-alnum-in-sexp-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of ALNUM residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sexp 'ar-th-quote arg))

(defun ar-separate-alnum-in-sexp-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of ALNUM residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sexp 'ar-th-separate arg))

(defun ar-show-alnum-in-sexp-atpt (&optional arg) 
  "Employ actions of SHOW at things class of ALNUM residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sexp 'ar-th-show arg))

(defun ar-singlequote-alnum-in-sexp-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of ALNUM residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sexp 'ar-th-singlequote arg))

(defun ar-slash-alnum-in-sexp-atpt (&optional arg) 
  "Employ actions of SLASH at things class of ALNUM residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sexp 'ar-th-slash arg))

(defun ar-star-alnum-in-sexp-atpt (&optional arg) 
  "Employ actions of STAR at things class of ALNUM residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sexp 'ar-th-star arg))

(defun ar-slashparen-alnum-in-sexp-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of ALNUM residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sexp 'ar-th-slashparen arg))

(defun ar-sort-alnum-in-sexp-atpt (&optional arg) 
  "Employ actions of SORT at things class of ALNUM residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sexp 'ar-th-sort arg))

(defun ar-trim-alnum-in-sexp-atpt (&optional arg) 
  "Employ actions of TRIM at things class of ALNUM residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sexp 'ar-th-trim arg))

(defun ar-trim-left-alnum-in-sexp-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of ALNUM residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sexp 'ar-th-trim-left arg))

(defun ar-trim-right-alnum-in-sexp-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of ALNUM residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sexp 'ar-th-trim-right arg))

(defun ar-underscore-alnum-in-sexp-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of ALNUM residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sexp 'ar-th-underscore arg))

(defun ar-whitespace-alnum-in-sexp-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of ALNUM residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'sexp 'ar-th-whitespace arg))

(defun ar-alnum-in-shstruct-atpt (&optional arg) 
  "Employ actions of  at things class of ALNUM residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'shstruct 'ar-th arg))

(defun ar-greaterangle-alnum-in-shstruct-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of ALNUM residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'shstruct 'ar-th-greaterangle arg))

(defun ar-lesserangle-alnum-in-shstruct-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of ALNUM residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'shstruct 'ar-th-lesserangle arg))

(defun ar-backslash-alnum-in-shstruct-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of ALNUM residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'shstruct 'ar-th-backslash arg))

(defun ar-colon-alnum-in-shstruct-atpt (&optional arg) 
  "Employ actions of COLON at things class of ALNUM residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'shstruct 'ar-th-colon arg))

(defun ar-beg-alnum-in-shstruct-atpt (&optional arg) 
  "Employ actions of BEG at things class of ALNUM residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'shstruct 'ar-th-beg arg))

(defun ar-blok-alnum-in-shstruct-atpt (&optional arg) 
  "Employ actions of BLOK at things class of ALNUM residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'shstruct 'ar-th-blok arg))

(defun ar-bounds-alnum-in-shstruct-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of ALNUM residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'shstruct 'ar-th-bounds arg))

(defun ar-brace-alnum-in-shstruct-atpt (&optional arg) 
  "Employ actions of BRACE at things class of ALNUM residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'shstruct 'ar-th-brace arg))

(defun ar-bracket-alnum-in-shstruct-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of ALNUM residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'shstruct 'ar-th-bracket arg))

(defun ar-commatize-alnum-in-shstruct-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of ALNUM residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'shstruct 'ar-th-commatize arg))

(defun ar-comment-alnum-in-shstruct-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of ALNUM residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'shstruct 'ar-th-comment arg))

(defun ar-dollar-alnum-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of ALNUM residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'shstruct 'ar-th-dollar arg))

(defun ar-doublebackslash-alnum-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of ALNUM residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'shstruct 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-alnum-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of ALNUM residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'shstruct 'ar-th-doublebacktick arg))

(defun ar-doublequote-alnum-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of ALNUM residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'shstruct 'ar-th-doublequote arg))

(defun ar-doubleslash-alnum-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of ALNUM residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'shstruct 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-alnum-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of ALNUM residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'shstruct 'ar-th-doublebackslashparen arg))

(defun ar-end-alnum-in-shstruct-atpt (&optional arg) 
  "Employ actions of END at things class of ALNUM residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'shstruct 'ar-th-end arg))

(defun ar-escape-alnum-in-shstruct-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of ALNUM residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'shstruct 'ar-th-escape arg))

(defun ar-hide-alnum-in-shstruct-atpt (&optional arg) 
  "Employ actions of HIDE at things class of ALNUM residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'shstruct 'ar-th-hide arg))

(defun ar-hide-show-alnum-in-shstruct-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of ALNUM residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'shstruct 'ar-th-hide-show arg))

(defun ar-hyphen-alnum-in-shstruct-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of ALNUM residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'shstruct 'ar-th-hyphen arg))

(defun ar-kill-alnum-in-shstruct-atpt (&optional arg) 
  "Employ actions of KILL at things class of ALNUM residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'shstruct 'ar-th-kill arg))

(defun ar-leftrightsinglequote-alnum-in-shstruct-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of ALNUM residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'shstruct 'ar-th-leftrightsinglequote arg))

(defun ar-length-alnum-in-shstruct-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of ALNUM residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'shstruct 'ar-th-length arg))

(defun ar-parentize-alnum-in-shstruct-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of ALNUM residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'shstruct 'ar-th-parentize arg))

(defun ar-quote-alnum-in-shstruct-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of ALNUM residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'shstruct 'ar-th-quote arg))

(defun ar-separate-alnum-in-shstruct-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of ALNUM residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'shstruct 'ar-th-separate arg))

(defun ar-show-alnum-in-shstruct-atpt (&optional arg) 
  "Employ actions of SHOW at things class of ALNUM residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'shstruct 'ar-th-show arg))

(defun ar-singlequote-alnum-in-shstruct-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of ALNUM residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'shstruct 'ar-th-singlequote arg))

(defun ar-slash-alnum-in-shstruct-atpt (&optional arg) 
  "Employ actions of SLASH at things class of ALNUM residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'shstruct 'ar-th-slash arg))

(defun ar-star-alnum-in-shstruct-atpt (&optional arg) 
  "Employ actions of STAR at things class of ALNUM residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'shstruct 'ar-th-star arg))

(defun ar-slashparen-alnum-in-shstruct-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of ALNUM residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'shstruct 'ar-th-slashparen arg))

(defun ar-sort-alnum-in-shstruct-atpt (&optional arg) 
  "Employ actions of SORT at things class of ALNUM residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'shstruct 'ar-th-sort arg))

(defun ar-trim-alnum-in-shstruct-atpt (&optional arg) 
  "Employ actions of TRIM at things class of ALNUM residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'shstruct 'ar-th-trim arg))

(defun ar-trim-left-alnum-in-shstruct-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of ALNUM residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'shstruct 'ar-th-trim-left arg))

(defun ar-trim-right-alnum-in-shstruct-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of ALNUM residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'shstruct 'ar-th-trim-right arg))

(defun ar-underscore-alnum-in-shstruct-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of ALNUM residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'shstruct 'ar-th-underscore arg))

(defun ar-whitespace-alnum-in-shstruct-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of ALNUM residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alnum 'shstruct 'ar-th-whitespace arg))

(defun ar-alpha-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of  at things class of ALPHA residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'greateranglednested 'ar-th arg))

(defun ar-greaterangle-alpha-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of ALPHA residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'greateranglednested 'ar-th-greaterangle arg))

(defun ar-lesserangle-alpha-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of ALPHA residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'greateranglednested 'ar-th-lesserangle arg))

(defun ar-backslash-alpha-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of ALPHA residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'greateranglednested 'ar-th-backslash arg))

(defun ar-colon-alpha-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of COLON at things class of ALPHA residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'greateranglednested 'ar-th-colon arg))

(defun ar-beg-alpha-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BEG at things class of ALPHA residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'greateranglednested 'ar-th-beg arg))

(defun ar-blok-alpha-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BLOK at things class of ALPHA residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'greateranglednested 'ar-th-blok arg))

(defun ar-bounds-alpha-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of ALPHA residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'greateranglednested 'ar-th-bounds arg))

(defun ar-brace-alpha-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BRACE at things class of ALPHA residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'greateranglednested 'ar-th-brace arg))

(defun ar-bracket-alpha-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of ALPHA residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'greateranglednested 'ar-th-bracket arg))

(defun ar-commatize-alpha-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of ALPHA residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'greateranglednested 'ar-th-commatize arg))

(defun ar-comment-alpha-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of ALPHA residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'greateranglednested 'ar-th-comment arg))

(defun ar-dollar-alpha-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of ALPHA residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'greateranglednested 'ar-th-dollar arg))

(defun ar-doublebackslash-alpha-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of ALPHA residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'greateranglednested 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-alpha-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of ALPHA residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'greateranglednested 'ar-th-doublebacktick arg))

(defun ar-doublequote-alpha-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of ALPHA residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'greateranglednested 'ar-th-doublequote arg))

(defun ar-doubleslash-alpha-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of ALPHA residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'greateranglednested 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-alpha-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of ALPHA residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'greateranglednested 'ar-th-doublebackslashparen arg))

(defun ar-end-alpha-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of END at things class of ALPHA residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'greateranglednested 'ar-th-end arg))

(defun ar-escape-alpha-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of ALPHA residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'greateranglednested 'ar-th-escape arg))

(defun ar-hide-alpha-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of HIDE at things class of ALPHA residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'greateranglednested 'ar-th-hide arg))

(defun ar-hide-show-alpha-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of ALPHA residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'greateranglednested 'ar-th-hide-show arg))

(defun ar-hyphen-alpha-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of ALPHA residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'greateranglednested 'ar-th-hyphen arg))

(defun ar-kill-alpha-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of KILL at things class of ALPHA residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'greateranglednested 'ar-th-kill arg))

(defun ar-leftrightsinglequote-alpha-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of ALPHA residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'greateranglednested 'ar-th-leftrightsinglequote arg))

(defun ar-length-alpha-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of ALPHA residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'greateranglednested 'ar-th-length arg))

(defun ar-parentize-alpha-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of ALPHA residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'greateranglednested 'ar-th-parentize arg))

(defun ar-quote-alpha-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of ALPHA residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'greateranglednested 'ar-th-quote arg))

(defun ar-separate-alpha-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of ALPHA residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'greateranglednested 'ar-th-separate arg))

(defun ar-show-alpha-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SHOW at things class of ALPHA residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'greateranglednested 'ar-th-show arg))

(defun ar-singlequote-alpha-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of ALPHA residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'greateranglednested 'ar-th-singlequote arg))

(defun ar-slash-alpha-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SLASH at things class of ALPHA residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'greateranglednested 'ar-th-slash arg))

(defun ar-star-alpha-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of STAR at things class of ALPHA residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'greateranglednested 'ar-th-star arg))

(defun ar-slashparen-alpha-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of ALPHA residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'greateranglednested 'ar-th-slashparen arg))

(defun ar-sort-alpha-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SORT at things class of ALPHA residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'greateranglednested 'ar-th-sort arg))

(defun ar-trim-alpha-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of TRIM at things class of ALPHA residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'greateranglednested 'ar-th-trim arg))

(defun ar-trim-left-alpha-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of ALPHA residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'greateranglednested 'ar-th-trim-left arg))

(defun ar-trim-right-alpha-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of ALPHA residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'greateranglednested 'ar-th-trim-right arg))

(defun ar-underscore-alpha-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of ALPHA residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'greateranglednested 'ar-th-underscore arg))

(defun ar-whitespace-alpha-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of ALPHA residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'greateranglednested 'ar-th-whitespace arg))

(defun ar-alpha-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of  at things class of ALPHA residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'lesseranglednested 'ar-th arg))

(defun ar-greaterangle-alpha-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of ALPHA residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'lesseranglednested 'ar-th-greaterangle arg))

(defun ar-lesserangle-alpha-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of ALPHA residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'lesseranglednested 'ar-th-lesserangle arg))

(defun ar-backslash-alpha-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of ALPHA residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'lesseranglednested 'ar-th-backslash arg))

(defun ar-colon-alpha-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of COLON at things class of ALPHA residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'lesseranglednested 'ar-th-colon arg))

(defun ar-beg-alpha-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BEG at things class of ALPHA residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'lesseranglednested 'ar-th-beg arg))

(defun ar-blok-alpha-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BLOK at things class of ALPHA residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'lesseranglednested 'ar-th-blok arg))

(defun ar-bounds-alpha-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of ALPHA residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'lesseranglednested 'ar-th-bounds arg))

(defun ar-brace-alpha-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BRACE at things class of ALPHA residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'lesseranglednested 'ar-th-brace arg))

(defun ar-bracket-alpha-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of ALPHA residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'lesseranglednested 'ar-th-bracket arg))

(defun ar-commatize-alpha-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of ALPHA residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'lesseranglednested 'ar-th-commatize arg))

(defun ar-comment-alpha-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of ALPHA residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'lesseranglednested 'ar-th-comment arg))

(defun ar-dollar-alpha-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of ALPHA residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'lesseranglednested 'ar-th-dollar arg))

(defun ar-doublebackslash-alpha-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of ALPHA residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'lesseranglednested 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-alpha-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of ALPHA residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'lesseranglednested 'ar-th-doublebacktick arg))

(defun ar-doublequote-alpha-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of ALPHA residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'lesseranglednested 'ar-th-doublequote arg))

(defun ar-doubleslash-alpha-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of ALPHA residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'lesseranglednested 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-alpha-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of ALPHA residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'lesseranglednested 'ar-th-doublebackslashparen arg))

(defun ar-end-alpha-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of END at things class of ALPHA residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'lesseranglednested 'ar-th-end arg))

(defun ar-escape-alpha-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of ALPHA residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'lesseranglednested 'ar-th-escape arg))

(defun ar-hide-alpha-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of HIDE at things class of ALPHA residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'lesseranglednested 'ar-th-hide arg))

(defun ar-hide-show-alpha-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of ALPHA residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'lesseranglednested 'ar-th-hide-show arg))

(defun ar-hyphen-alpha-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of ALPHA residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'lesseranglednested 'ar-th-hyphen arg))

(defun ar-kill-alpha-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of KILL at things class of ALPHA residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'lesseranglednested 'ar-th-kill arg))

(defun ar-leftrightsinglequote-alpha-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of ALPHA residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'lesseranglednested 'ar-th-leftrightsinglequote arg))

(defun ar-length-alpha-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of ALPHA residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'lesseranglednested 'ar-th-length arg))

(defun ar-parentize-alpha-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of ALPHA residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'lesseranglednested 'ar-th-parentize arg))

(defun ar-quote-alpha-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of ALPHA residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'lesseranglednested 'ar-th-quote arg))

(defun ar-separate-alpha-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of ALPHA residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'lesseranglednested 'ar-th-separate arg))

(defun ar-show-alpha-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SHOW at things class of ALPHA residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'lesseranglednested 'ar-th-show arg))

(defun ar-singlequote-alpha-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of ALPHA residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'lesseranglednested 'ar-th-singlequote arg))

(defun ar-slash-alpha-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SLASH at things class of ALPHA residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'lesseranglednested 'ar-th-slash arg))

(defun ar-star-alpha-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of STAR at things class of ALPHA residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'lesseranglednested 'ar-th-star arg))

(defun ar-slashparen-alpha-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of ALPHA residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'lesseranglednested 'ar-th-slashparen arg))

(defun ar-sort-alpha-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SORT at things class of ALPHA residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'lesseranglednested 'ar-th-sort arg))

(defun ar-trim-alpha-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of TRIM at things class of ALPHA residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'lesseranglednested 'ar-th-trim arg))

(defun ar-trim-left-alpha-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of ALPHA residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'lesseranglednested 'ar-th-trim-left arg))

(defun ar-trim-right-alpha-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of ALPHA residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'lesseranglednested 'ar-th-trim-right arg))

(defun ar-underscore-alpha-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of ALPHA residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'lesseranglednested 'ar-th-underscore arg))

(defun ar-whitespace-alpha-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of ALPHA residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'lesseranglednested 'ar-th-whitespace arg))

(defun ar-alpha-in-buffer-atpt (&optional arg) 
  "Employ actions of  at things class of ALPHA residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'buffer 'ar-th arg))

(defun ar-greaterangle-alpha-in-buffer-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of ALPHA residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'buffer 'ar-th-greaterangle arg))

(defun ar-lesserangle-alpha-in-buffer-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of ALPHA residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'buffer 'ar-th-lesserangle arg))

(defun ar-backslash-alpha-in-buffer-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of ALPHA residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'buffer 'ar-th-backslash arg))

(defun ar-colon-alpha-in-buffer-atpt (&optional arg) 
  "Employ actions of COLON at things class of ALPHA residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'buffer 'ar-th-colon arg))

(defun ar-beg-alpha-in-buffer-atpt (&optional arg) 
  "Employ actions of BEG at things class of ALPHA residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'buffer 'ar-th-beg arg))

(defun ar-blok-alpha-in-buffer-atpt (&optional arg) 
  "Employ actions of BLOK at things class of ALPHA residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'buffer 'ar-th-blok arg))

(defun ar-bounds-alpha-in-buffer-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of ALPHA residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'buffer 'ar-th-bounds arg))

(defun ar-brace-alpha-in-buffer-atpt (&optional arg) 
  "Employ actions of BRACE at things class of ALPHA residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'buffer 'ar-th-brace arg))

(defun ar-bracket-alpha-in-buffer-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of ALPHA residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'buffer 'ar-th-bracket arg))

(defun ar-commatize-alpha-in-buffer-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of ALPHA residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'buffer 'ar-th-commatize arg))

(defun ar-comment-alpha-in-buffer-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of ALPHA residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'buffer 'ar-th-comment arg))

(defun ar-dollar-alpha-in-buffer-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of ALPHA residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'buffer 'ar-th-dollar arg))

(defun ar-doublebackslash-alpha-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of ALPHA residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'buffer 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-alpha-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of ALPHA residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'buffer 'ar-th-doublebacktick arg))

(defun ar-doublequote-alpha-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of ALPHA residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'buffer 'ar-th-doublequote arg))

(defun ar-doubleslash-alpha-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of ALPHA residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'buffer 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-alpha-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of ALPHA residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'buffer 'ar-th-doublebackslashparen arg))

(defun ar-end-alpha-in-buffer-atpt (&optional arg) 
  "Employ actions of END at things class of ALPHA residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'buffer 'ar-th-end arg))

(defun ar-escape-alpha-in-buffer-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of ALPHA residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'buffer 'ar-th-escape arg))

(defun ar-hide-alpha-in-buffer-atpt (&optional arg) 
  "Employ actions of HIDE at things class of ALPHA residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'buffer 'ar-th-hide arg))

(defun ar-hide-show-alpha-in-buffer-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of ALPHA residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'buffer 'ar-th-hide-show arg))

(defun ar-hyphen-alpha-in-buffer-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of ALPHA residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'buffer 'ar-th-hyphen arg))

(defun ar-kill-alpha-in-buffer-atpt (&optional arg) 
  "Employ actions of KILL at things class of ALPHA residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'buffer 'ar-th-kill arg))

(defun ar-leftrightsinglequote-alpha-in-buffer-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of ALPHA residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'buffer 'ar-th-leftrightsinglequote arg))

(defun ar-length-alpha-in-buffer-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of ALPHA residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'buffer 'ar-th-length arg))

(defun ar-parentize-alpha-in-buffer-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of ALPHA residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'buffer 'ar-th-parentize arg))

(defun ar-quote-alpha-in-buffer-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of ALPHA residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'buffer 'ar-th-quote arg))

(defun ar-separate-alpha-in-buffer-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of ALPHA residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'buffer 'ar-th-separate arg))

(defun ar-show-alpha-in-buffer-atpt (&optional arg) 
  "Employ actions of SHOW at things class of ALPHA residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'buffer 'ar-th-show arg))

(defun ar-singlequote-alpha-in-buffer-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of ALPHA residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'buffer 'ar-th-singlequote arg))

(defun ar-slash-alpha-in-buffer-atpt (&optional arg) 
  "Employ actions of SLASH at things class of ALPHA residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'buffer 'ar-th-slash arg))

(defun ar-star-alpha-in-buffer-atpt (&optional arg) 
  "Employ actions of STAR at things class of ALPHA residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'buffer 'ar-th-star arg))

(defun ar-slashparen-alpha-in-buffer-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of ALPHA residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'buffer 'ar-th-slashparen arg))

(defun ar-sort-alpha-in-buffer-atpt (&optional arg) 
  "Employ actions of SORT at things class of ALPHA residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'buffer 'ar-th-sort arg))

(defun ar-trim-alpha-in-buffer-atpt (&optional arg) 
  "Employ actions of TRIM at things class of ALPHA residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'buffer 'ar-th-trim arg))

(defun ar-trim-left-alpha-in-buffer-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of ALPHA residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'buffer 'ar-th-trim-left arg))

(defun ar-trim-right-alpha-in-buffer-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of ALPHA residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'buffer 'ar-th-trim-right arg))

(defun ar-underscore-alpha-in-buffer-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of ALPHA residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'buffer 'ar-th-underscore arg))

(defun ar-whitespace-alpha-in-buffer-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of ALPHA residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'buffer 'ar-th-whitespace arg))

(defun ar-alpha-in-comment-atpt (&optional arg) 
  "Employ actions of  at things class of ALPHA residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'comment 'ar-th arg))

(defun ar-greaterangle-alpha-in-comment-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of ALPHA residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'comment 'ar-th-greaterangle arg))

(defun ar-lesserangle-alpha-in-comment-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of ALPHA residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'comment 'ar-th-lesserangle arg))

(defun ar-backslash-alpha-in-comment-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of ALPHA residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'comment 'ar-th-backslash arg))

(defun ar-colon-alpha-in-comment-atpt (&optional arg) 
  "Employ actions of COLON at things class of ALPHA residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'comment 'ar-th-colon arg))

(defun ar-beg-alpha-in-comment-atpt (&optional arg) 
  "Employ actions of BEG at things class of ALPHA residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'comment 'ar-th-beg arg))

(defun ar-blok-alpha-in-comment-atpt (&optional arg) 
  "Employ actions of BLOK at things class of ALPHA residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'comment 'ar-th-blok arg))

(defun ar-bounds-alpha-in-comment-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of ALPHA residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'comment 'ar-th-bounds arg))

(defun ar-brace-alpha-in-comment-atpt (&optional arg) 
  "Employ actions of BRACE at things class of ALPHA residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'comment 'ar-th-brace arg))

(defun ar-bracket-alpha-in-comment-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of ALPHA residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'comment 'ar-th-bracket arg))

(defun ar-commatize-alpha-in-comment-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of ALPHA residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'comment 'ar-th-commatize arg))

(defun ar-comment-alpha-in-comment-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of ALPHA residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'comment 'ar-th-comment arg))

(defun ar-dollar-alpha-in-comment-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of ALPHA residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'comment 'ar-th-dollar arg))

(defun ar-doublebackslash-alpha-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of ALPHA residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'comment 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-alpha-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of ALPHA residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'comment 'ar-th-doublebacktick arg))

(defun ar-doublequote-alpha-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of ALPHA residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'comment 'ar-th-doublequote arg))

(defun ar-doubleslash-alpha-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of ALPHA residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'comment 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-alpha-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of ALPHA residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'comment 'ar-th-doublebackslashparen arg))

(defun ar-end-alpha-in-comment-atpt (&optional arg) 
  "Employ actions of END at things class of ALPHA residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'comment 'ar-th-end arg))

(defun ar-escape-alpha-in-comment-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of ALPHA residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'comment 'ar-th-escape arg))

(defun ar-hide-alpha-in-comment-atpt (&optional arg) 
  "Employ actions of HIDE at things class of ALPHA residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'comment 'ar-th-hide arg))

(defun ar-hide-show-alpha-in-comment-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of ALPHA residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'comment 'ar-th-hide-show arg))

(defun ar-hyphen-alpha-in-comment-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of ALPHA residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'comment 'ar-th-hyphen arg))

(defun ar-kill-alpha-in-comment-atpt (&optional arg) 
  "Employ actions of KILL at things class of ALPHA residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'comment 'ar-th-kill arg))

(defun ar-leftrightsinglequote-alpha-in-comment-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of ALPHA residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'comment 'ar-th-leftrightsinglequote arg))

(defun ar-length-alpha-in-comment-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of ALPHA residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'comment 'ar-th-length arg))

(defun ar-parentize-alpha-in-comment-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of ALPHA residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'comment 'ar-th-parentize arg))

(defun ar-quote-alpha-in-comment-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of ALPHA residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'comment 'ar-th-quote arg))

(defun ar-separate-alpha-in-comment-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of ALPHA residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'comment 'ar-th-separate arg))

(defun ar-show-alpha-in-comment-atpt (&optional arg) 
  "Employ actions of SHOW at things class of ALPHA residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'comment 'ar-th-show arg))

(defun ar-singlequote-alpha-in-comment-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of ALPHA residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'comment 'ar-th-singlequote arg))

(defun ar-slash-alpha-in-comment-atpt (&optional arg) 
  "Employ actions of SLASH at things class of ALPHA residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'comment 'ar-th-slash arg))

(defun ar-star-alpha-in-comment-atpt (&optional arg) 
  "Employ actions of STAR at things class of ALPHA residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'comment 'ar-th-star arg))

(defun ar-slashparen-alpha-in-comment-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of ALPHA residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'comment 'ar-th-slashparen arg))

(defun ar-sort-alpha-in-comment-atpt (&optional arg) 
  "Employ actions of SORT at things class of ALPHA residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'comment 'ar-th-sort arg))

(defun ar-trim-alpha-in-comment-atpt (&optional arg) 
  "Employ actions of TRIM at things class of ALPHA residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'comment 'ar-th-trim arg))

(defun ar-trim-left-alpha-in-comment-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of ALPHA residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'comment 'ar-th-trim-left arg))

(defun ar-trim-right-alpha-in-comment-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of ALPHA residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'comment 'ar-th-trim-right arg))

(defun ar-underscore-alpha-in-comment-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of ALPHA residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'comment 'ar-th-underscore arg))

(defun ar-whitespace-alpha-in-comment-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of ALPHA residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'comment 'ar-th-whitespace arg))

(defun ar-alpha-in-csv-atpt (&optional arg) 
  "Employ actions of  at things class of ALPHA residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'csv 'ar-th arg))

(defun ar-greaterangle-alpha-in-csv-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of ALPHA residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'csv 'ar-th-greaterangle arg))

(defun ar-lesserangle-alpha-in-csv-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of ALPHA residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'csv 'ar-th-lesserangle arg))

(defun ar-backslash-alpha-in-csv-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of ALPHA residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'csv 'ar-th-backslash arg))

(defun ar-colon-alpha-in-csv-atpt (&optional arg) 
  "Employ actions of COLON at things class of ALPHA residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'csv 'ar-th-colon arg))

(defun ar-beg-alpha-in-csv-atpt (&optional arg) 
  "Employ actions of BEG at things class of ALPHA residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'csv 'ar-th-beg arg))

(defun ar-blok-alpha-in-csv-atpt (&optional arg) 
  "Employ actions of BLOK at things class of ALPHA residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'csv 'ar-th-blok arg))

(defun ar-bounds-alpha-in-csv-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of ALPHA residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'csv 'ar-th-bounds arg))

(defun ar-brace-alpha-in-csv-atpt (&optional arg) 
  "Employ actions of BRACE at things class of ALPHA residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'csv 'ar-th-brace arg))

(defun ar-bracket-alpha-in-csv-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of ALPHA residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'csv 'ar-th-bracket arg))

(defun ar-commatize-alpha-in-csv-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of ALPHA residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'csv 'ar-th-commatize arg))

(defun ar-comment-alpha-in-csv-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of ALPHA residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'csv 'ar-th-comment arg))

(defun ar-dollar-alpha-in-csv-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of ALPHA residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'csv 'ar-th-dollar arg))

(defun ar-doublebackslash-alpha-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of ALPHA residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'csv 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-alpha-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of ALPHA residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'csv 'ar-th-doublebacktick arg))

(defun ar-doublequote-alpha-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of ALPHA residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'csv 'ar-th-doublequote arg))

(defun ar-doubleslash-alpha-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of ALPHA residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'csv 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-alpha-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of ALPHA residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'csv 'ar-th-doublebackslashparen arg))

(defun ar-end-alpha-in-csv-atpt (&optional arg) 
  "Employ actions of END at things class of ALPHA residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'csv 'ar-th-end arg))

(defun ar-escape-alpha-in-csv-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of ALPHA residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'csv 'ar-th-escape arg))

(defun ar-hide-alpha-in-csv-atpt (&optional arg) 
  "Employ actions of HIDE at things class of ALPHA residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'csv 'ar-th-hide arg))

(defun ar-hide-show-alpha-in-csv-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of ALPHA residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'csv 'ar-th-hide-show arg))

(defun ar-hyphen-alpha-in-csv-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of ALPHA residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'csv 'ar-th-hyphen arg))

(defun ar-kill-alpha-in-csv-atpt (&optional arg) 
  "Employ actions of KILL at things class of ALPHA residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'csv 'ar-th-kill arg))

(defun ar-leftrightsinglequote-alpha-in-csv-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of ALPHA residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'csv 'ar-th-leftrightsinglequote arg))

(defun ar-length-alpha-in-csv-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of ALPHA residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'csv 'ar-th-length arg))

(defun ar-parentize-alpha-in-csv-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of ALPHA residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'csv 'ar-th-parentize arg))

(defun ar-quote-alpha-in-csv-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of ALPHA residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'csv 'ar-th-quote arg))

(defun ar-separate-alpha-in-csv-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of ALPHA residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'csv 'ar-th-separate arg))

(defun ar-show-alpha-in-csv-atpt (&optional arg) 
  "Employ actions of SHOW at things class of ALPHA residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'csv 'ar-th-show arg))

(defun ar-singlequote-alpha-in-csv-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of ALPHA residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'csv 'ar-th-singlequote arg))

(defun ar-slash-alpha-in-csv-atpt (&optional arg) 
  "Employ actions of SLASH at things class of ALPHA residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'csv 'ar-th-slash arg))

(defun ar-star-alpha-in-csv-atpt (&optional arg) 
  "Employ actions of STAR at things class of ALPHA residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'csv 'ar-th-star arg))

(defun ar-slashparen-alpha-in-csv-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of ALPHA residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'csv 'ar-th-slashparen arg))

(defun ar-sort-alpha-in-csv-atpt (&optional arg) 
  "Employ actions of SORT at things class of ALPHA residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'csv 'ar-th-sort arg))

(defun ar-trim-alpha-in-csv-atpt (&optional arg) 
  "Employ actions of TRIM at things class of ALPHA residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'csv 'ar-th-trim arg))

(defun ar-trim-left-alpha-in-csv-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of ALPHA residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'csv 'ar-th-trim-left arg))

(defun ar-trim-right-alpha-in-csv-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of ALPHA residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'csv 'ar-th-trim-right arg))

(defun ar-underscore-alpha-in-csv-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of ALPHA residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'csv 'ar-th-underscore arg))

(defun ar-whitespace-alpha-in-csv-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of ALPHA residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'csv 'ar-th-whitespace arg))

(defun ar-alpha-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of  at things class of ALPHA residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'filenamenondirectory 'ar-th arg))

(defun ar-greaterangle-alpha-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of ALPHA residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'filenamenondirectory 'ar-th-greaterangle arg))

(defun ar-lesserangle-alpha-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of ALPHA residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'filenamenondirectory 'ar-th-lesserangle arg))

(defun ar-backslash-alpha-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of ALPHA residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'filenamenondirectory 'ar-th-backslash arg))

(defun ar-colon-alpha-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of COLON at things class of ALPHA residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'filenamenondirectory 'ar-th-colon arg))

(defun ar-beg-alpha-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BEG at things class of ALPHA residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'filenamenondirectory 'ar-th-beg arg))

(defun ar-blok-alpha-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BLOK at things class of ALPHA residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'filenamenondirectory 'ar-th-blok arg))

(defun ar-bounds-alpha-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of ALPHA residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'filenamenondirectory 'ar-th-bounds arg))

(defun ar-brace-alpha-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BRACE at things class of ALPHA residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'filenamenondirectory 'ar-th-brace arg))

(defun ar-bracket-alpha-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of ALPHA residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'filenamenondirectory 'ar-th-bracket arg))

(defun ar-commatize-alpha-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of ALPHA residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'filenamenondirectory 'ar-th-commatize arg))

(defun ar-comment-alpha-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of ALPHA residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'filenamenondirectory 'ar-th-comment arg))

(defun ar-dollar-alpha-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of ALPHA residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'filenamenondirectory 'ar-th-dollar arg))

(defun ar-doublebackslash-alpha-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of ALPHA residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'filenamenondirectory 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-alpha-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of ALPHA residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'filenamenondirectory 'ar-th-doublebacktick arg))

(defun ar-doublequote-alpha-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of ALPHA residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'filenamenondirectory 'ar-th-doublequote arg))

(defun ar-doubleslash-alpha-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of ALPHA residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'filenamenondirectory 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-alpha-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of ALPHA residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'filenamenondirectory 'ar-th-doublebackslashparen arg))

(defun ar-end-alpha-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of END at things class of ALPHA residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'filenamenondirectory 'ar-th-end arg))

(defun ar-escape-alpha-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of ALPHA residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'filenamenondirectory 'ar-th-escape arg))

(defun ar-hide-alpha-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of HIDE at things class of ALPHA residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'filenamenondirectory 'ar-th-hide arg))

(defun ar-hide-show-alpha-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of ALPHA residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'filenamenondirectory 'ar-th-hide-show arg))

(defun ar-hyphen-alpha-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of ALPHA residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'filenamenondirectory 'ar-th-hyphen arg))

(defun ar-kill-alpha-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of KILL at things class of ALPHA residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'filenamenondirectory 'ar-th-kill arg))

(defun ar-leftrightsinglequote-alpha-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of ALPHA residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'filenamenondirectory 'ar-th-leftrightsinglequote arg))

(defun ar-length-alpha-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of ALPHA residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'filenamenondirectory 'ar-th-length arg))

(defun ar-parentize-alpha-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of ALPHA residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'filenamenondirectory 'ar-th-parentize arg))

(defun ar-quote-alpha-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of ALPHA residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'filenamenondirectory 'ar-th-quote arg))

(defun ar-separate-alpha-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of ALPHA residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'filenamenondirectory 'ar-th-separate arg))

(defun ar-show-alpha-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SHOW at things class of ALPHA residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'filenamenondirectory 'ar-th-show arg))

(defun ar-singlequote-alpha-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of ALPHA residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'filenamenondirectory 'ar-th-singlequote arg))

(defun ar-slash-alpha-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SLASH at things class of ALPHA residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'filenamenondirectory 'ar-th-slash arg))

(defun ar-star-alpha-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of STAR at things class of ALPHA residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'filenamenondirectory 'ar-th-star arg))

(defun ar-slashparen-alpha-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of ALPHA residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'filenamenondirectory 'ar-th-slashparen arg))

(defun ar-sort-alpha-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SORT at things class of ALPHA residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'filenamenondirectory 'ar-th-sort arg))

(defun ar-trim-alpha-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of TRIM at things class of ALPHA residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'filenamenondirectory 'ar-th-trim arg))

(defun ar-trim-left-alpha-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of ALPHA residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'filenamenondirectory 'ar-th-trim-left arg))

(defun ar-trim-right-alpha-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of ALPHA residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'filenamenondirectory 'ar-th-trim-right arg))

(defun ar-underscore-alpha-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of ALPHA residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'filenamenondirectory 'ar-th-underscore arg))

(defun ar-whitespace-alpha-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of ALPHA residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'filenamenondirectory 'ar-th-whitespace arg))

(defun ar-alpha-in-function-atpt (&optional arg) 
  "Employ actions of  at things class of ALPHA residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'function 'ar-th arg))

(defun ar-greaterangle-alpha-in-function-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of ALPHA residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'function 'ar-th-greaterangle arg))

(defun ar-lesserangle-alpha-in-function-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of ALPHA residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'function 'ar-th-lesserangle arg))

(defun ar-backslash-alpha-in-function-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of ALPHA residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'function 'ar-th-backslash arg))

(defun ar-colon-alpha-in-function-atpt (&optional arg) 
  "Employ actions of COLON at things class of ALPHA residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'function 'ar-th-colon arg))

(defun ar-beg-alpha-in-function-atpt (&optional arg) 
  "Employ actions of BEG at things class of ALPHA residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'function 'ar-th-beg arg))

(defun ar-blok-alpha-in-function-atpt (&optional arg) 
  "Employ actions of BLOK at things class of ALPHA residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'function 'ar-th-blok arg))

(defun ar-bounds-alpha-in-function-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of ALPHA residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'function 'ar-th-bounds arg))

(defun ar-brace-alpha-in-function-atpt (&optional arg) 
  "Employ actions of BRACE at things class of ALPHA residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'function 'ar-th-brace arg))

(defun ar-bracket-alpha-in-function-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of ALPHA residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'function 'ar-th-bracket arg))

(defun ar-commatize-alpha-in-function-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of ALPHA residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'function 'ar-th-commatize arg))

(defun ar-comment-alpha-in-function-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of ALPHA residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'function 'ar-th-comment arg))

(defun ar-dollar-alpha-in-function-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of ALPHA residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'function 'ar-th-dollar arg))

(defun ar-doublebackslash-alpha-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of ALPHA residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'function 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-alpha-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of ALPHA residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'function 'ar-th-doublebacktick arg))

(defun ar-doublequote-alpha-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of ALPHA residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'function 'ar-th-doublequote arg))

(defun ar-doubleslash-alpha-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of ALPHA residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'function 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-alpha-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of ALPHA residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'function 'ar-th-doublebackslashparen arg))

(defun ar-end-alpha-in-function-atpt (&optional arg) 
  "Employ actions of END at things class of ALPHA residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'function 'ar-th-end arg))

(defun ar-escape-alpha-in-function-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of ALPHA residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'function 'ar-th-escape arg))

(defun ar-hide-alpha-in-function-atpt (&optional arg) 
  "Employ actions of HIDE at things class of ALPHA residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'function 'ar-th-hide arg))

(defun ar-hide-show-alpha-in-function-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of ALPHA residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'function 'ar-th-hide-show arg))

(defun ar-hyphen-alpha-in-function-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of ALPHA residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'function 'ar-th-hyphen arg))

(defun ar-kill-alpha-in-function-atpt (&optional arg) 
  "Employ actions of KILL at things class of ALPHA residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'function 'ar-th-kill arg))

(defun ar-leftrightsinglequote-alpha-in-function-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of ALPHA residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'function 'ar-th-leftrightsinglequote arg))

(defun ar-length-alpha-in-function-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of ALPHA residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'function 'ar-th-length arg))

(defun ar-parentize-alpha-in-function-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of ALPHA residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'function 'ar-th-parentize arg))

(defun ar-quote-alpha-in-function-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of ALPHA residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'function 'ar-th-quote arg))

(defun ar-separate-alpha-in-function-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of ALPHA residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'function 'ar-th-separate arg))

(defun ar-show-alpha-in-function-atpt (&optional arg) 
  "Employ actions of SHOW at things class of ALPHA residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'function 'ar-th-show arg))

(defun ar-singlequote-alpha-in-function-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of ALPHA residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'function 'ar-th-singlequote arg))

(defun ar-slash-alpha-in-function-atpt (&optional arg) 
  "Employ actions of SLASH at things class of ALPHA residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'function 'ar-th-slash arg))

(defun ar-star-alpha-in-function-atpt (&optional arg) 
  "Employ actions of STAR at things class of ALPHA residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'function 'ar-th-star arg))

(defun ar-slashparen-alpha-in-function-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of ALPHA residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'function 'ar-th-slashparen arg))

(defun ar-sort-alpha-in-function-atpt (&optional arg) 
  "Employ actions of SORT at things class of ALPHA residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'function 'ar-th-sort arg))

(defun ar-trim-alpha-in-function-atpt (&optional arg) 
  "Employ actions of TRIM at things class of ALPHA residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'function 'ar-th-trim arg))

(defun ar-trim-left-alpha-in-function-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of ALPHA residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'function 'ar-th-trim-left arg))

(defun ar-trim-right-alpha-in-function-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of ALPHA residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'function 'ar-th-trim-right arg))

(defun ar-underscore-alpha-in-function-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of ALPHA residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'function 'ar-th-underscore arg))

(defun ar-whitespace-alpha-in-function-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of ALPHA residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'function 'ar-th-whitespace arg))

(defun ar-alpha-in-line-atpt (&optional arg) 
  "Employ actions of  at things class of ALPHA residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'line 'ar-th arg))

(defun ar-greaterangle-alpha-in-line-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of ALPHA residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'line 'ar-th-greaterangle arg))

(defun ar-lesserangle-alpha-in-line-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of ALPHA residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'line 'ar-th-lesserangle arg))

(defun ar-backslash-alpha-in-line-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of ALPHA residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'line 'ar-th-backslash arg))

(defun ar-colon-alpha-in-line-atpt (&optional arg) 
  "Employ actions of COLON at things class of ALPHA residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'line 'ar-th-colon arg))

(defun ar-beg-alpha-in-line-atpt (&optional arg) 
  "Employ actions of BEG at things class of ALPHA residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'line 'ar-th-beg arg))

(defun ar-blok-alpha-in-line-atpt (&optional arg) 
  "Employ actions of BLOK at things class of ALPHA residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'line 'ar-th-blok arg))

(defun ar-bounds-alpha-in-line-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of ALPHA residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'line 'ar-th-bounds arg))

(defun ar-brace-alpha-in-line-atpt (&optional arg) 
  "Employ actions of BRACE at things class of ALPHA residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'line 'ar-th-brace arg))

(defun ar-bracket-alpha-in-line-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of ALPHA residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'line 'ar-th-bracket arg))

(defun ar-commatize-alpha-in-line-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of ALPHA residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'line 'ar-th-commatize arg))

(defun ar-comment-alpha-in-line-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of ALPHA residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'line 'ar-th-comment arg))

(defun ar-dollar-alpha-in-line-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of ALPHA residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'line 'ar-th-dollar arg))

(defun ar-doublebackslash-alpha-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of ALPHA residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'line 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-alpha-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of ALPHA residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'line 'ar-th-doublebacktick arg))

(defun ar-doublequote-alpha-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of ALPHA residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'line 'ar-th-doublequote arg))

(defun ar-doubleslash-alpha-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of ALPHA residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'line 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-alpha-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of ALPHA residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'line 'ar-th-doublebackslashparen arg))

(defun ar-end-alpha-in-line-atpt (&optional arg) 
  "Employ actions of END at things class of ALPHA residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'line 'ar-th-end arg))

(defun ar-escape-alpha-in-line-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of ALPHA residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'line 'ar-th-escape arg))

(defun ar-hide-alpha-in-line-atpt (&optional arg) 
  "Employ actions of HIDE at things class of ALPHA residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'line 'ar-th-hide arg))

(defun ar-hide-show-alpha-in-line-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of ALPHA residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'line 'ar-th-hide-show arg))

(defun ar-hyphen-alpha-in-line-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of ALPHA residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'line 'ar-th-hyphen arg))

(defun ar-kill-alpha-in-line-atpt (&optional arg) 
  "Employ actions of KILL at things class of ALPHA residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'line 'ar-th-kill arg))

(defun ar-leftrightsinglequote-alpha-in-line-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of ALPHA residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'line 'ar-th-leftrightsinglequote arg))

(defun ar-length-alpha-in-line-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of ALPHA residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'line 'ar-th-length arg))

(defun ar-parentize-alpha-in-line-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of ALPHA residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'line 'ar-th-parentize arg))

(defun ar-quote-alpha-in-line-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of ALPHA residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'line 'ar-th-quote arg))

(defun ar-separate-alpha-in-line-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of ALPHA residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'line 'ar-th-separate arg))

(defun ar-show-alpha-in-line-atpt (&optional arg) 
  "Employ actions of SHOW at things class of ALPHA residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'line 'ar-th-show arg))

(defun ar-singlequote-alpha-in-line-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of ALPHA residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'line 'ar-th-singlequote arg))

(defun ar-slash-alpha-in-line-atpt (&optional arg) 
  "Employ actions of SLASH at things class of ALPHA residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'line 'ar-th-slash arg))

(defun ar-star-alpha-in-line-atpt (&optional arg) 
  "Employ actions of STAR at things class of ALPHA residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'line 'ar-th-star arg))

(defun ar-slashparen-alpha-in-line-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of ALPHA residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'line 'ar-th-slashparen arg))

(defun ar-sort-alpha-in-line-atpt (&optional arg) 
  "Employ actions of SORT at things class of ALPHA residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'line 'ar-th-sort arg))

(defun ar-trim-alpha-in-line-atpt (&optional arg) 
  "Employ actions of TRIM at things class of ALPHA residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'line 'ar-th-trim arg))

(defun ar-trim-left-alpha-in-line-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of ALPHA residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'line 'ar-th-trim-left arg))

(defun ar-trim-right-alpha-in-line-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of ALPHA residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'line 'ar-th-trim-right arg))

(defun ar-underscore-alpha-in-line-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of ALPHA residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'line 'ar-th-underscore arg))

(defun ar-whitespace-alpha-in-line-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of ALPHA residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'line 'ar-th-whitespace arg))

(defun ar-alpha-in-list-atpt (&optional arg) 
  "Employ actions of  at things class of ALPHA residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'list 'ar-th arg))

(defun ar-greaterangle-alpha-in-list-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of ALPHA residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'list 'ar-th-greaterangle arg))

(defun ar-lesserangle-alpha-in-list-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of ALPHA residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'list 'ar-th-lesserangle arg))

(defun ar-backslash-alpha-in-list-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of ALPHA residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'list 'ar-th-backslash arg))

(defun ar-colon-alpha-in-list-atpt (&optional arg) 
  "Employ actions of COLON at things class of ALPHA residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'list 'ar-th-colon arg))

(defun ar-beg-alpha-in-list-atpt (&optional arg) 
  "Employ actions of BEG at things class of ALPHA residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'list 'ar-th-beg arg))

(defun ar-blok-alpha-in-list-atpt (&optional arg) 
  "Employ actions of BLOK at things class of ALPHA residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'list 'ar-th-blok arg))

(defun ar-bounds-alpha-in-list-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of ALPHA residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'list 'ar-th-bounds arg))

(defun ar-brace-alpha-in-list-atpt (&optional arg) 
  "Employ actions of BRACE at things class of ALPHA residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'list 'ar-th-brace arg))

(defun ar-bracket-alpha-in-list-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of ALPHA residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'list 'ar-th-bracket arg))

(defun ar-commatize-alpha-in-list-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of ALPHA residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'list 'ar-th-commatize arg))

(defun ar-comment-alpha-in-list-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of ALPHA residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'list 'ar-th-comment arg))

(defun ar-dollar-alpha-in-list-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of ALPHA residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'list 'ar-th-dollar arg))

(defun ar-doublebackslash-alpha-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of ALPHA residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'list 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-alpha-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of ALPHA residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'list 'ar-th-doublebacktick arg))

(defun ar-doublequote-alpha-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of ALPHA residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'list 'ar-th-doublequote arg))

(defun ar-doubleslash-alpha-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of ALPHA residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'list 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-alpha-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of ALPHA residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'list 'ar-th-doublebackslashparen arg))

(defun ar-end-alpha-in-list-atpt (&optional arg) 
  "Employ actions of END at things class of ALPHA residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'list 'ar-th-end arg))

(defun ar-escape-alpha-in-list-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of ALPHA residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'list 'ar-th-escape arg))

(defun ar-hide-alpha-in-list-atpt (&optional arg) 
  "Employ actions of HIDE at things class of ALPHA residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'list 'ar-th-hide arg))

(defun ar-hide-show-alpha-in-list-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of ALPHA residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'list 'ar-th-hide-show arg))

(defun ar-hyphen-alpha-in-list-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of ALPHA residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'list 'ar-th-hyphen arg))

(defun ar-kill-alpha-in-list-atpt (&optional arg) 
  "Employ actions of KILL at things class of ALPHA residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'list 'ar-th-kill arg))

(defun ar-leftrightsinglequote-alpha-in-list-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of ALPHA residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'list 'ar-th-leftrightsinglequote arg))

(defun ar-length-alpha-in-list-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of ALPHA residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'list 'ar-th-length arg))

(defun ar-parentize-alpha-in-list-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of ALPHA residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'list 'ar-th-parentize arg))

(defun ar-quote-alpha-in-list-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of ALPHA residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'list 'ar-th-quote arg))

(defun ar-separate-alpha-in-list-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of ALPHA residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'list 'ar-th-separate arg))

(defun ar-show-alpha-in-list-atpt (&optional arg) 
  "Employ actions of SHOW at things class of ALPHA residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'list 'ar-th-show arg))

(defun ar-singlequote-alpha-in-list-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of ALPHA residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'list 'ar-th-singlequote arg))

(defun ar-slash-alpha-in-list-atpt (&optional arg) 
  "Employ actions of SLASH at things class of ALPHA residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'list 'ar-th-slash arg))

(defun ar-star-alpha-in-list-atpt (&optional arg) 
  "Employ actions of STAR at things class of ALPHA residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'list 'ar-th-star arg))

(defun ar-slashparen-alpha-in-list-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of ALPHA residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'list 'ar-th-slashparen arg))

(defun ar-sort-alpha-in-list-atpt (&optional arg) 
  "Employ actions of SORT at things class of ALPHA residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'list 'ar-th-sort arg))

(defun ar-trim-alpha-in-list-atpt (&optional arg) 
  "Employ actions of TRIM at things class of ALPHA residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'list 'ar-th-trim arg))

(defun ar-trim-left-alpha-in-list-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of ALPHA residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'list 'ar-th-trim-left arg))

(defun ar-trim-right-alpha-in-list-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of ALPHA residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'list 'ar-th-trim-right arg))

(defun ar-underscore-alpha-in-list-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of ALPHA residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'list 'ar-th-underscore arg))

(defun ar-whitespace-alpha-in-list-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of ALPHA residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'list 'ar-th-whitespace arg))

(defun ar-alpha-in-name-atpt (&optional arg) 
  "Employ actions of  at things class of ALPHA residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'name 'ar-th arg))

(defun ar-greaterangle-alpha-in-name-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of ALPHA residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'name 'ar-th-greaterangle arg))

(defun ar-lesserangle-alpha-in-name-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of ALPHA residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'name 'ar-th-lesserangle arg))

(defun ar-backslash-alpha-in-name-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of ALPHA residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'name 'ar-th-backslash arg))

(defun ar-colon-alpha-in-name-atpt (&optional arg) 
  "Employ actions of COLON at things class of ALPHA residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'name 'ar-th-colon arg))

(defun ar-beg-alpha-in-name-atpt (&optional arg) 
  "Employ actions of BEG at things class of ALPHA residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'name 'ar-th-beg arg))

(defun ar-blok-alpha-in-name-atpt (&optional arg) 
  "Employ actions of BLOK at things class of ALPHA residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'name 'ar-th-blok arg))

(defun ar-bounds-alpha-in-name-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of ALPHA residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'name 'ar-th-bounds arg))

(defun ar-brace-alpha-in-name-atpt (&optional arg) 
  "Employ actions of BRACE at things class of ALPHA residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'name 'ar-th-brace arg))

(defun ar-bracket-alpha-in-name-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of ALPHA residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'name 'ar-th-bracket arg))

(defun ar-commatize-alpha-in-name-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of ALPHA residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'name 'ar-th-commatize arg))

(defun ar-comment-alpha-in-name-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of ALPHA residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'name 'ar-th-comment arg))

(defun ar-dollar-alpha-in-name-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of ALPHA residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'name 'ar-th-dollar arg))

(defun ar-doublebackslash-alpha-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of ALPHA residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'name 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-alpha-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of ALPHA residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'name 'ar-th-doublebacktick arg))

(defun ar-doublequote-alpha-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of ALPHA residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'name 'ar-th-doublequote arg))

(defun ar-doubleslash-alpha-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of ALPHA residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'name 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-alpha-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of ALPHA residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'name 'ar-th-doublebackslashparen arg))

(defun ar-end-alpha-in-name-atpt (&optional arg) 
  "Employ actions of END at things class of ALPHA residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'name 'ar-th-end arg))

(defun ar-escape-alpha-in-name-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of ALPHA residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'name 'ar-th-escape arg))

(defun ar-hide-alpha-in-name-atpt (&optional arg) 
  "Employ actions of HIDE at things class of ALPHA residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'name 'ar-th-hide arg))

(defun ar-hide-show-alpha-in-name-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of ALPHA residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'name 'ar-th-hide-show arg))

(defun ar-hyphen-alpha-in-name-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of ALPHA residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'name 'ar-th-hyphen arg))

(defun ar-kill-alpha-in-name-atpt (&optional arg) 
  "Employ actions of KILL at things class of ALPHA residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'name 'ar-th-kill arg))

(defun ar-leftrightsinglequote-alpha-in-name-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of ALPHA residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'name 'ar-th-leftrightsinglequote arg))

(defun ar-length-alpha-in-name-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of ALPHA residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'name 'ar-th-length arg))

(defun ar-parentize-alpha-in-name-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of ALPHA residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'name 'ar-th-parentize arg))

(defun ar-quote-alpha-in-name-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of ALPHA residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'name 'ar-th-quote arg))

(defun ar-separate-alpha-in-name-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of ALPHA residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'name 'ar-th-separate arg))

(defun ar-show-alpha-in-name-atpt (&optional arg) 
  "Employ actions of SHOW at things class of ALPHA residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'name 'ar-th-show arg))

(defun ar-singlequote-alpha-in-name-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of ALPHA residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'name 'ar-th-singlequote arg))

(defun ar-slash-alpha-in-name-atpt (&optional arg) 
  "Employ actions of SLASH at things class of ALPHA residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'name 'ar-th-slash arg))

(defun ar-star-alpha-in-name-atpt (&optional arg) 
  "Employ actions of STAR at things class of ALPHA residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'name 'ar-th-star arg))

(defun ar-slashparen-alpha-in-name-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of ALPHA residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'name 'ar-th-slashparen arg))

(defun ar-sort-alpha-in-name-atpt (&optional arg) 
  "Employ actions of SORT at things class of ALPHA residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'name 'ar-th-sort arg))

(defun ar-trim-alpha-in-name-atpt (&optional arg) 
  "Employ actions of TRIM at things class of ALPHA residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'name 'ar-th-trim arg))

(defun ar-trim-left-alpha-in-name-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of ALPHA residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'name 'ar-th-trim-left arg))

(defun ar-trim-right-alpha-in-name-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of ALPHA residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'name 'ar-th-trim-right arg))

(defun ar-underscore-alpha-in-name-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of ALPHA residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'name 'ar-th-underscore arg))

(defun ar-whitespace-alpha-in-name-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of ALPHA residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'name 'ar-th-whitespace arg))

(defun ar-alpha-in-page-atpt (&optional arg) 
  "Employ actions of  at things class of ALPHA residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'page 'ar-th arg))

(defun ar-greaterangle-alpha-in-page-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of ALPHA residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'page 'ar-th-greaterangle arg))

(defun ar-lesserangle-alpha-in-page-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of ALPHA residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'page 'ar-th-lesserangle arg))

(defun ar-backslash-alpha-in-page-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of ALPHA residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'page 'ar-th-backslash arg))

(defun ar-colon-alpha-in-page-atpt (&optional arg) 
  "Employ actions of COLON at things class of ALPHA residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'page 'ar-th-colon arg))

(defun ar-beg-alpha-in-page-atpt (&optional arg) 
  "Employ actions of BEG at things class of ALPHA residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'page 'ar-th-beg arg))

(defun ar-blok-alpha-in-page-atpt (&optional arg) 
  "Employ actions of BLOK at things class of ALPHA residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'page 'ar-th-blok arg))

(defun ar-bounds-alpha-in-page-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of ALPHA residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'page 'ar-th-bounds arg))

(defun ar-brace-alpha-in-page-atpt (&optional arg) 
  "Employ actions of BRACE at things class of ALPHA residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'page 'ar-th-brace arg))

(defun ar-bracket-alpha-in-page-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of ALPHA residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'page 'ar-th-bracket arg))

(defun ar-commatize-alpha-in-page-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of ALPHA residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'page 'ar-th-commatize arg))

(defun ar-comment-alpha-in-page-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of ALPHA residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'page 'ar-th-comment arg))

(defun ar-dollar-alpha-in-page-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of ALPHA residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'page 'ar-th-dollar arg))

(defun ar-doublebackslash-alpha-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of ALPHA residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'page 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-alpha-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of ALPHA residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'page 'ar-th-doublebacktick arg))

(defun ar-doublequote-alpha-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of ALPHA residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'page 'ar-th-doublequote arg))

(defun ar-doubleslash-alpha-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of ALPHA residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'page 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-alpha-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of ALPHA residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'page 'ar-th-doublebackslashparen arg))

(defun ar-end-alpha-in-page-atpt (&optional arg) 
  "Employ actions of END at things class of ALPHA residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'page 'ar-th-end arg))

(defun ar-escape-alpha-in-page-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of ALPHA residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'page 'ar-th-escape arg))

(defun ar-hide-alpha-in-page-atpt (&optional arg) 
  "Employ actions of HIDE at things class of ALPHA residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'page 'ar-th-hide arg))

(defun ar-hide-show-alpha-in-page-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of ALPHA residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'page 'ar-th-hide-show arg))

(defun ar-hyphen-alpha-in-page-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of ALPHA residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'page 'ar-th-hyphen arg))

(defun ar-kill-alpha-in-page-atpt (&optional arg) 
  "Employ actions of KILL at things class of ALPHA residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'page 'ar-th-kill arg))

(defun ar-leftrightsinglequote-alpha-in-page-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of ALPHA residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'page 'ar-th-leftrightsinglequote arg))

(defun ar-length-alpha-in-page-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of ALPHA residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'page 'ar-th-length arg))

(defun ar-parentize-alpha-in-page-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of ALPHA residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'page 'ar-th-parentize arg))

(defun ar-quote-alpha-in-page-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of ALPHA residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'page 'ar-th-quote arg))

(defun ar-separate-alpha-in-page-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of ALPHA residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'page 'ar-th-separate arg))

(defun ar-show-alpha-in-page-atpt (&optional arg) 
  "Employ actions of SHOW at things class of ALPHA residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'page 'ar-th-show arg))

(defun ar-singlequote-alpha-in-page-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of ALPHA residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'page 'ar-th-singlequote arg))

(defun ar-slash-alpha-in-page-atpt (&optional arg) 
  "Employ actions of SLASH at things class of ALPHA residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'page 'ar-th-slash arg))

(defun ar-star-alpha-in-page-atpt (&optional arg) 
  "Employ actions of STAR at things class of ALPHA residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'page 'ar-th-star arg))

(defun ar-slashparen-alpha-in-page-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of ALPHA residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'page 'ar-th-slashparen arg))

(defun ar-sort-alpha-in-page-atpt (&optional arg) 
  "Employ actions of SORT at things class of ALPHA residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'page 'ar-th-sort arg))

(defun ar-trim-alpha-in-page-atpt (&optional arg) 
  "Employ actions of TRIM at things class of ALPHA residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'page 'ar-th-trim arg))

(defun ar-trim-left-alpha-in-page-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of ALPHA residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'page 'ar-th-trim-left arg))

(defun ar-trim-right-alpha-in-page-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of ALPHA residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'page 'ar-th-trim-right arg))

(defun ar-underscore-alpha-in-page-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of ALPHA residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'page 'ar-th-underscore arg))

(defun ar-whitespace-alpha-in-page-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of ALPHA residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'page 'ar-th-whitespace arg))

(defun ar-alpha-in-paragraph-atpt (&optional arg) 
  "Employ actions of  at things class of ALPHA residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'paragraph 'ar-th arg))

(defun ar-greaterangle-alpha-in-paragraph-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of ALPHA residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'paragraph 'ar-th-greaterangle arg))

(defun ar-lesserangle-alpha-in-paragraph-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of ALPHA residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'paragraph 'ar-th-lesserangle arg))

(defun ar-backslash-alpha-in-paragraph-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of ALPHA residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'paragraph 'ar-th-backslash arg))

(defun ar-colon-alpha-in-paragraph-atpt (&optional arg) 
  "Employ actions of COLON at things class of ALPHA residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'paragraph 'ar-th-colon arg))

(defun ar-beg-alpha-in-paragraph-atpt (&optional arg) 
  "Employ actions of BEG at things class of ALPHA residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'paragraph 'ar-th-beg arg))

(defun ar-blok-alpha-in-paragraph-atpt (&optional arg) 
  "Employ actions of BLOK at things class of ALPHA residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'paragraph 'ar-th-blok arg))

(defun ar-bounds-alpha-in-paragraph-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of ALPHA residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'paragraph 'ar-th-bounds arg))

(defun ar-brace-alpha-in-paragraph-atpt (&optional arg) 
  "Employ actions of BRACE at things class of ALPHA residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'paragraph 'ar-th-brace arg))

(defun ar-bracket-alpha-in-paragraph-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of ALPHA residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'paragraph 'ar-th-bracket arg))

(defun ar-commatize-alpha-in-paragraph-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of ALPHA residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'paragraph 'ar-th-commatize arg))

(defun ar-comment-alpha-in-paragraph-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of ALPHA residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'paragraph 'ar-th-comment arg))

(defun ar-dollar-alpha-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of ALPHA residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'paragraph 'ar-th-dollar arg))

(defun ar-doublebackslash-alpha-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of ALPHA residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'paragraph 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-alpha-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of ALPHA residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'paragraph 'ar-th-doublebacktick arg))

(defun ar-doublequote-alpha-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of ALPHA residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'paragraph 'ar-th-doublequote arg))

(defun ar-doubleslash-alpha-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of ALPHA residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'paragraph 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-alpha-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of ALPHA residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'paragraph 'ar-th-doublebackslashparen arg))

(defun ar-end-alpha-in-paragraph-atpt (&optional arg) 
  "Employ actions of END at things class of ALPHA residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'paragraph 'ar-th-end arg))

(defun ar-escape-alpha-in-paragraph-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of ALPHA residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'paragraph 'ar-th-escape arg))

(defun ar-hide-alpha-in-paragraph-atpt (&optional arg) 
  "Employ actions of HIDE at things class of ALPHA residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'paragraph 'ar-th-hide arg))

(defun ar-hide-show-alpha-in-paragraph-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of ALPHA residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'paragraph 'ar-th-hide-show arg))

(defun ar-hyphen-alpha-in-paragraph-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of ALPHA residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'paragraph 'ar-th-hyphen arg))

(defun ar-kill-alpha-in-paragraph-atpt (&optional arg) 
  "Employ actions of KILL at things class of ALPHA residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'paragraph 'ar-th-kill arg))

(defun ar-leftrightsinglequote-alpha-in-paragraph-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of ALPHA residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'paragraph 'ar-th-leftrightsinglequote arg))

(defun ar-length-alpha-in-paragraph-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of ALPHA residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'paragraph 'ar-th-length arg))

(defun ar-parentize-alpha-in-paragraph-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of ALPHA residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'paragraph 'ar-th-parentize arg))

(defun ar-quote-alpha-in-paragraph-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of ALPHA residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'paragraph 'ar-th-quote arg))

(defun ar-separate-alpha-in-paragraph-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of ALPHA residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'paragraph 'ar-th-separate arg))

(defun ar-show-alpha-in-paragraph-atpt (&optional arg) 
  "Employ actions of SHOW at things class of ALPHA residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'paragraph 'ar-th-show arg))

(defun ar-singlequote-alpha-in-paragraph-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of ALPHA residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'paragraph 'ar-th-singlequote arg))

(defun ar-slash-alpha-in-paragraph-atpt (&optional arg) 
  "Employ actions of SLASH at things class of ALPHA residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'paragraph 'ar-th-slash arg))

(defun ar-star-alpha-in-paragraph-atpt (&optional arg) 
  "Employ actions of STAR at things class of ALPHA residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'paragraph 'ar-th-star arg))

(defun ar-slashparen-alpha-in-paragraph-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of ALPHA residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'paragraph 'ar-th-slashparen arg))

(defun ar-sort-alpha-in-paragraph-atpt (&optional arg) 
  "Employ actions of SORT at things class of ALPHA residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'paragraph 'ar-th-sort arg))

(defun ar-trim-alpha-in-paragraph-atpt (&optional arg) 
  "Employ actions of TRIM at things class of ALPHA residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'paragraph 'ar-th-trim arg))

(defun ar-trim-left-alpha-in-paragraph-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of ALPHA residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'paragraph 'ar-th-trim-left arg))

(defun ar-trim-right-alpha-in-paragraph-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of ALPHA residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'paragraph 'ar-th-trim-right arg))

(defun ar-underscore-alpha-in-paragraph-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of ALPHA residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'paragraph 'ar-th-underscore arg))

(defun ar-whitespace-alpha-in-paragraph-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of ALPHA residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'paragraph 'ar-th-whitespace arg))

(defun ar-alpha-in-region-atpt (&optional arg) 
  "Employ actions of  at things class of ALPHA residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'region 'ar-th arg))

(defun ar-greaterangle-alpha-in-region-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of ALPHA residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'region 'ar-th-greaterangle arg))

(defun ar-lesserangle-alpha-in-region-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of ALPHA residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'region 'ar-th-lesserangle arg))

(defun ar-backslash-alpha-in-region-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of ALPHA residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'region 'ar-th-backslash arg))

(defun ar-colon-alpha-in-region-atpt (&optional arg) 
  "Employ actions of COLON at things class of ALPHA residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'region 'ar-th-colon arg))

(defun ar-beg-alpha-in-region-atpt (&optional arg) 
  "Employ actions of BEG at things class of ALPHA residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'region 'ar-th-beg arg))

(defun ar-blok-alpha-in-region-atpt (&optional arg) 
  "Employ actions of BLOK at things class of ALPHA residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'region 'ar-th-blok arg))

(defun ar-bounds-alpha-in-region-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of ALPHA residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'region 'ar-th-bounds arg))

(defun ar-brace-alpha-in-region-atpt (&optional arg) 
  "Employ actions of BRACE at things class of ALPHA residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'region 'ar-th-brace arg))

(defun ar-bracket-alpha-in-region-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of ALPHA residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'region 'ar-th-bracket arg))

(defun ar-commatize-alpha-in-region-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of ALPHA residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'region 'ar-th-commatize arg))

(defun ar-comment-alpha-in-region-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of ALPHA residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'region 'ar-th-comment arg))

(defun ar-dollar-alpha-in-region-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of ALPHA residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'region 'ar-th-dollar arg))

(defun ar-doublebackslash-alpha-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of ALPHA residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'region 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-alpha-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of ALPHA residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'region 'ar-th-doublebacktick arg))

(defun ar-doublequote-alpha-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of ALPHA residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'region 'ar-th-doublequote arg))

(defun ar-doubleslash-alpha-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of ALPHA residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'region 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-alpha-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of ALPHA residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'region 'ar-th-doublebackslashparen arg))

(defun ar-end-alpha-in-region-atpt (&optional arg) 
  "Employ actions of END at things class of ALPHA residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'region 'ar-th-end arg))

(defun ar-escape-alpha-in-region-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of ALPHA residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'region 'ar-th-escape arg))

(defun ar-hide-alpha-in-region-atpt (&optional arg) 
  "Employ actions of HIDE at things class of ALPHA residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'region 'ar-th-hide arg))

(defun ar-hide-show-alpha-in-region-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of ALPHA residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'region 'ar-th-hide-show arg))

(defun ar-hyphen-alpha-in-region-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of ALPHA residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'region 'ar-th-hyphen arg))

(defun ar-kill-alpha-in-region-atpt (&optional arg) 
  "Employ actions of KILL at things class of ALPHA residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'region 'ar-th-kill arg))

(defun ar-leftrightsinglequote-alpha-in-region-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of ALPHA residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'region 'ar-th-leftrightsinglequote arg))

(defun ar-length-alpha-in-region-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of ALPHA residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'region 'ar-th-length arg))

(defun ar-parentize-alpha-in-region-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of ALPHA residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'region 'ar-th-parentize arg))

(defun ar-quote-alpha-in-region-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of ALPHA residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'region 'ar-th-quote arg))

(defun ar-separate-alpha-in-region-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of ALPHA residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'region 'ar-th-separate arg))

(defun ar-show-alpha-in-region-atpt (&optional arg) 
  "Employ actions of SHOW at things class of ALPHA residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'region 'ar-th-show arg))

(defun ar-singlequote-alpha-in-region-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of ALPHA residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'region 'ar-th-singlequote arg))

(defun ar-slash-alpha-in-region-atpt (&optional arg) 
  "Employ actions of SLASH at things class of ALPHA residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'region 'ar-th-slash arg))

(defun ar-star-alpha-in-region-atpt (&optional arg) 
  "Employ actions of STAR at things class of ALPHA residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'region 'ar-th-star arg))

(defun ar-slashparen-alpha-in-region-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of ALPHA residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'region 'ar-th-slashparen arg))

(defun ar-sort-alpha-in-region-atpt (&optional arg) 
  "Employ actions of SORT at things class of ALPHA residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'region 'ar-th-sort arg))

(defun ar-trim-alpha-in-region-atpt (&optional arg) 
  "Employ actions of TRIM at things class of ALPHA residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'region 'ar-th-trim arg))

(defun ar-trim-left-alpha-in-region-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of ALPHA residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'region 'ar-th-trim-left arg))

(defun ar-trim-right-alpha-in-region-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of ALPHA residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'region 'ar-th-trim-right arg))

(defun ar-underscore-alpha-in-region-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of ALPHA residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'region 'ar-th-underscore arg))

(defun ar-whitespace-alpha-in-region-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of ALPHA residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'region 'ar-th-whitespace arg))

(defun ar-alpha-in-sentence-atpt (&optional arg) 
  "Employ actions of  at things class of ALPHA residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sentence 'ar-th arg))

(defun ar-greaterangle-alpha-in-sentence-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of ALPHA residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sentence 'ar-th-greaterangle arg))

(defun ar-lesserangle-alpha-in-sentence-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of ALPHA residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sentence 'ar-th-lesserangle arg))

(defun ar-backslash-alpha-in-sentence-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of ALPHA residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sentence 'ar-th-backslash arg))

(defun ar-colon-alpha-in-sentence-atpt (&optional arg) 
  "Employ actions of COLON at things class of ALPHA residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sentence 'ar-th-colon arg))

(defun ar-beg-alpha-in-sentence-atpt (&optional arg) 
  "Employ actions of BEG at things class of ALPHA residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sentence 'ar-th-beg arg))

(defun ar-blok-alpha-in-sentence-atpt (&optional arg) 
  "Employ actions of BLOK at things class of ALPHA residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sentence 'ar-th-blok arg))

(defun ar-bounds-alpha-in-sentence-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of ALPHA residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sentence 'ar-th-bounds arg))

(defun ar-brace-alpha-in-sentence-atpt (&optional arg) 
  "Employ actions of BRACE at things class of ALPHA residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sentence 'ar-th-brace arg))

(defun ar-bracket-alpha-in-sentence-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of ALPHA residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sentence 'ar-th-bracket arg))

(defun ar-commatize-alpha-in-sentence-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of ALPHA residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sentence 'ar-th-commatize arg))

(defun ar-comment-alpha-in-sentence-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of ALPHA residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sentence 'ar-th-comment arg))

(defun ar-dollar-alpha-in-sentence-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of ALPHA residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sentence 'ar-th-dollar arg))

(defun ar-doublebackslash-alpha-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of ALPHA residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sentence 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-alpha-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of ALPHA residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sentence 'ar-th-doublebacktick arg))

(defun ar-doublequote-alpha-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of ALPHA residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sentence 'ar-th-doublequote arg))

(defun ar-doubleslash-alpha-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of ALPHA residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sentence 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-alpha-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of ALPHA residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sentence 'ar-th-doublebackslashparen arg))

(defun ar-end-alpha-in-sentence-atpt (&optional arg) 
  "Employ actions of END at things class of ALPHA residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sentence 'ar-th-end arg))

(defun ar-escape-alpha-in-sentence-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of ALPHA residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sentence 'ar-th-escape arg))

(defun ar-hide-alpha-in-sentence-atpt (&optional arg) 
  "Employ actions of HIDE at things class of ALPHA residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sentence 'ar-th-hide arg))

(defun ar-hide-show-alpha-in-sentence-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of ALPHA residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sentence 'ar-th-hide-show arg))

(defun ar-hyphen-alpha-in-sentence-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of ALPHA residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sentence 'ar-th-hyphen arg))

(defun ar-kill-alpha-in-sentence-atpt (&optional arg) 
  "Employ actions of KILL at things class of ALPHA residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sentence 'ar-th-kill arg))

(defun ar-leftrightsinglequote-alpha-in-sentence-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of ALPHA residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sentence 'ar-th-leftrightsinglequote arg))

(defun ar-length-alpha-in-sentence-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of ALPHA residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sentence 'ar-th-length arg))

(defun ar-parentize-alpha-in-sentence-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of ALPHA residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sentence 'ar-th-parentize arg))

(defun ar-quote-alpha-in-sentence-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of ALPHA residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sentence 'ar-th-quote arg))

(defun ar-separate-alpha-in-sentence-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of ALPHA residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sentence 'ar-th-separate arg))

(defun ar-show-alpha-in-sentence-atpt (&optional arg) 
  "Employ actions of SHOW at things class of ALPHA residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sentence 'ar-th-show arg))

(defun ar-singlequote-alpha-in-sentence-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of ALPHA residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sentence 'ar-th-singlequote arg))

(defun ar-slash-alpha-in-sentence-atpt (&optional arg) 
  "Employ actions of SLASH at things class of ALPHA residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sentence 'ar-th-slash arg))

(defun ar-star-alpha-in-sentence-atpt (&optional arg) 
  "Employ actions of STAR at things class of ALPHA residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sentence 'ar-th-star arg))

(defun ar-slashparen-alpha-in-sentence-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of ALPHA residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sentence 'ar-th-slashparen arg))

(defun ar-sort-alpha-in-sentence-atpt (&optional arg) 
  "Employ actions of SORT at things class of ALPHA residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sentence 'ar-th-sort arg))

(defun ar-trim-alpha-in-sentence-atpt (&optional arg) 
  "Employ actions of TRIM at things class of ALPHA residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sentence 'ar-th-trim arg))

(defun ar-trim-left-alpha-in-sentence-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of ALPHA residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sentence 'ar-th-trim-left arg))

(defun ar-trim-right-alpha-in-sentence-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of ALPHA residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sentence 'ar-th-trim-right arg))

(defun ar-underscore-alpha-in-sentence-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of ALPHA residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sentence 'ar-th-underscore arg))

(defun ar-whitespace-alpha-in-sentence-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of ALPHA residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sentence 'ar-th-whitespace arg))

(defun ar-alpha-in-sexp-atpt (&optional arg) 
  "Employ actions of  at things class of ALPHA residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sexp 'ar-th arg))

(defun ar-greaterangle-alpha-in-sexp-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of ALPHA residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sexp 'ar-th-greaterangle arg))

(defun ar-lesserangle-alpha-in-sexp-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of ALPHA residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sexp 'ar-th-lesserangle arg))

(defun ar-backslash-alpha-in-sexp-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of ALPHA residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sexp 'ar-th-backslash arg))

(defun ar-colon-alpha-in-sexp-atpt (&optional arg) 
  "Employ actions of COLON at things class of ALPHA residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sexp 'ar-th-colon arg))

(defun ar-beg-alpha-in-sexp-atpt (&optional arg) 
  "Employ actions of BEG at things class of ALPHA residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sexp 'ar-th-beg arg))

(defun ar-blok-alpha-in-sexp-atpt (&optional arg) 
  "Employ actions of BLOK at things class of ALPHA residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sexp 'ar-th-blok arg))

(defun ar-bounds-alpha-in-sexp-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of ALPHA residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sexp 'ar-th-bounds arg))

(defun ar-brace-alpha-in-sexp-atpt (&optional arg) 
  "Employ actions of BRACE at things class of ALPHA residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sexp 'ar-th-brace arg))

(defun ar-bracket-alpha-in-sexp-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of ALPHA residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sexp 'ar-th-bracket arg))

(defun ar-commatize-alpha-in-sexp-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of ALPHA residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sexp 'ar-th-commatize arg))

(defun ar-comment-alpha-in-sexp-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of ALPHA residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sexp 'ar-th-comment arg))

(defun ar-dollar-alpha-in-sexp-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of ALPHA residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sexp 'ar-th-dollar arg))

(defun ar-doublebackslash-alpha-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of ALPHA residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sexp 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-alpha-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of ALPHA residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sexp 'ar-th-doublebacktick arg))

(defun ar-doublequote-alpha-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of ALPHA residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sexp 'ar-th-doublequote arg))

(defun ar-doubleslash-alpha-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of ALPHA residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sexp 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-alpha-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of ALPHA residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sexp 'ar-th-doublebackslashparen arg))

(defun ar-end-alpha-in-sexp-atpt (&optional arg) 
  "Employ actions of END at things class of ALPHA residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sexp 'ar-th-end arg))

(defun ar-escape-alpha-in-sexp-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of ALPHA residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sexp 'ar-th-escape arg))

(defun ar-hide-alpha-in-sexp-atpt (&optional arg) 
  "Employ actions of HIDE at things class of ALPHA residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sexp 'ar-th-hide arg))

(defun ar-hide-show-alpha-in-sexp-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of ALPHA residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sexp 'ar-th-hide-show arg))

(defun ar-hyphen-alpha-in-sexp-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of ALPHA residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sexp 'ar-th-hyphen arg))

(defun ar-kill-alpha-in-sexp-atpt (&optional arg) 
  "Employ actions of KILL at things class of ALPHA residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sexp 'ar-th-kill arg))

(defun ar-leftrightsinglequote-alpha-in-sexp-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of ALPHA residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sexp 'ar-th-leftrightsinglequote arg))

(defun ar-length-alpha-in-sexp-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of ALPHA residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sexp 'ar-th-length arg))

(defun ar-parentize-alpha-in-sexp-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of ALPHA residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sexp 'ar-th-parentize arg))

(defun ar-quote-alpha-in-sexp-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of ALPHA residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sexp 'ar-th-quote arg))

(defun ar-separate-alpha-in-sexp-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of ALPHA residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sexp 'ar-th-separate arg))

(defun ar-show-alpha-in-sexp-atpt (&optional arg) 
  "Employ actions of SHOW at things class of ALPHA residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sexp 'ar-th-show arg))

(defun ar-singlequote-alpha-in-sexp-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of ALPHA residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sexp 'ar-th-singlequote arg))

(defun ar-slash-alpha-in-sexp-atpt (&optional arg) 
  "Employ actions of SLASH at things class of ALPHA residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sexp 'ar-th-slash arg))

(defun ar-star-alpha-in-sexp-atpt (&optional arg) 
  "Employ actions of STAR at things class of ALPHA residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sexp 'ar-th-star arg))

(defun ar-slashparen-alpha-in-sexp-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of ALPHA residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sexp 'ar-th-slashparen arg))

(defun ar-sort-alpha-in-sexp-atpt (&optional arg) 
  "Employ actions of SORT at things class of ALPHA residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sexp 'ar-th-sort arg))

(defun ar-trim-alpha-in-sexp-atpt (&optional arg) 
  "Employ actions of TRIM at things class of ALPHA residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sexp 'ar-th-trim arg))

(defun ar-trim-left-alpha-in-sexp-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of ALPHA residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sexp 'ar-th-trim-left arg))

(defun ar-trim-right-alpha-in-sexp-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of ALPHA residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sexp 'ar-th-trim-right arg))

(defun ar-underscore-alpha-in-sexp-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of ALPHA residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sexp 'ar-th-underscore arg))

(defun ar-whitespace-alpha-in-sexp-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of ALPHA residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'sexp 'ar-th-whitespace arg))

(defun ar-alpha-in-shstruct-atpt (&optional arg) 
  "Employ actions of  at things class of ALPHA residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'shstruct 'ar-th arg))

(defun ar-greaterangle-alpha-in-shstruct-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of ALPHA residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'shstruct 'ar-th-greaterangle arg))

(defun ar-lesserangle-alpha-in-shstruct-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of ALPHA residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'shstruct 'ar-th-lesserangle arg))

(defun ar-backslash-alpha-in-shstruct-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of ALPHA residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'shstruct 'ar-th-backslash arg))

(defun ar-colon-alpha-in-shstruct-atpt (&optional arg) 
  "Employ actions of COLON at things class of ALPHA residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'shstruct 'ar-th-colon arg))

(defun ar-beg-alpha-in-shstruct-atpt (&optional arg) 
  "Employ actions of BEG at things class of ALPHA residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'shstruct 'ar-th-beg arg))

(defun ar-blok-alpha-in-shstruct-atpt (&optional arg) 
  "Employ actions of BLOK at things class of ALPHA residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'shstruct 'ar-th-blok arg))

(defun ar-bounds-alpha-in-shstruct-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of ALPHA residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'shstruct 'ar-th-bounds arg))

(defun ar-brace-alpha-in-shstruct-atpt (&optional arg) 
  "Employ actions of BRACE at things class of ALPHA residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'shstruct 'ar-th-brace arg))

(defun ar-bracket-alpha-in-shstruct-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of ALPHA residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'shstruct 'ar-th-bracket arg))

(defun ar-commatize-alpha-in-shstruct-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of ALPHA residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'shstruct 'ar-th-commatize arg))

(defun ar-comment-alpha-in-shstruct-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of ALPHA residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'shstruct 'ar-th-comment arg))

(defun ar-dollar-alpha-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of ALPHA residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'shstruct 'ar-th-dollar arg))

(defun ar-doublebackslash-alpha-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of ALPHA residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'shstruct 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-alpha-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of ALPHA residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'shstruct 'ar-th-doublebacktick arg))

(defun ar-doublequote-alpha-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of ALPHA residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'shstruct 'ar-th-doublequote arg))

(defun ar-doubleslash-alpha-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of ALPHA residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'shstruct 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-alpha-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of ALPHA residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'shstruct 'ar-th-doublebackslashparen arg))

(defun ar-end-alpha-in-shstruct-atpt (&optional arg) 
  "Employ actions of END at things class of ALPHA residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'shstruct 'ar-th-end arg))

(defun ar-escape-alpha-in-shstruct-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of ALPHA residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'shstruct 'ar-th-escape arg))

(defun ar-hide-alpha-in-shstruct-atpt (&optional arg) 
  "Employ actions of HIDE at things class of ALPHA residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'shstruct 'ar-th-hide arg))

(defun ar-hide-show-alpha-in-shstruct-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of ALPHA residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'shstruct 'ar-th-hide-show arg))

(defun ar-hyphen-alpha-in-shstruct-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of ALPHA residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'shstruct 'ar-th-hyphen arg))

(defun ar-kill-alpha-in-shstruct-atpt (&optional arg) 
  "Employ actions of KILL at things class of ALPHA residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'shstruct 'ar-th-kill arg))

(defun ar-leftrightsinglequote-alpha-in-shstruct-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of ALPHA residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'shstruct 'ar-th-leftrightsinglequote arg))

(defun ar-length-alpha-in-shstruct-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of ALPHA residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'shstruct 'ar-th-length arg))

(defun ar-parentize-alpha-in-shstruct-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of ALPHA residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'shstruct 'ar-th-parentize arg))

(defun ar-quote-alpha-in-shstruct-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of ALPHA residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'shstruct 'ar-th-quote arg))

(defun ar-separate-alpha-in-shstruct-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of ALPHA residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'shstruct 'ar-th-separate arg))

(defun ar-show-alpha-in-shstruct-atpt (&optional arg) 
  "Employ actions of SHOW at things class of ALPHA residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'shstruct 'ar-th-show arg))

(defun ar-singlequote-alpha-in-shstruct-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of ALPHA residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'shstruct 'ar-th-singlequote arg))

(defun ar-slash-alpha-in-shstruct-atpt (&optional arg) 
  "Employ actions of SLASH at things class of ALPHA residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'shstruct 'ar-th-slash arg))

(defun ar-star-alpha-in-shstruct-atpt (&optional arg) 
  "Employ actions of STAR at things class of ALPHA residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'shstruct 'ar-th-star arg))

(defun ar-slashparen-alpha-in-shstruct-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of ALPHA residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'shstruct 'ar-th-slashparen arg))

(defun ar-sort-alpha-in-shstruct-atpt (&optional arg) 
  "Employ actions of SORT at things class of ALPHA residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'shstruct 'ar-th-sort arg))

(defun ar-trim-alpha-in-shstruct-atpt (&optional arg) 
  "Employ actions of TRIM at things class of ALPHA residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'shstruct 'ar-th-trim arg))

(defun ar-trim-left-alpha-in-shstruct-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of ALPHA residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'shstruct 'ar-th-trim-left arg))

(defun ar-trim-right-alpha-in-shstruct-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of ALPHA residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'shstruct 'ar-th-trim-right arg))

(defun ar-underscore-alpha-in-shstruct-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of ALPHA residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'shstruct 'ar-th-underscore arg))

(defun ar-whitespace-alpha-in-shstruct-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of ALPHA residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'alpha 'shstruct 'ar-th-whitespace arg))

(defun ar-ascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of  at things class of ASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'greateranglednested 'ar-th arg))

(defun ar-greaterangle-ascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of ASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'greateranglednested 'ar-th-greaterangle arg))

(defun ar-lesserangle-ascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of ASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'greateranglednested 'ar-th-lesserangle arg))

(defun ar-backslash-ascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of ASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'greateranglednested 'ar-th-backslash arg))

(defun ar-colon-ascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of COLON at things class of ASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'greateranglednested 'ar-th-colon arg))

(defun ar-beg-ascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BEG at things class of ASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'greateranglednested 'ar-th-beg arg))

(defun ar-blok-ascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BLOK at things class of ASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'greateranglednested 'ar-th-blok arg))

(defun ar-bounds-ascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of ASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'greateranglednested 'ar-th-bounds arg))

(defun ar-brace-ascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BRACE at things class of ASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'greateranglednested 'ar-th-brace arg))

(defun ar-bracket-ascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of ASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'greateranglednested 'ar-th-bracket arg))

(defun ar-commatize-ascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of ASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'greateranglednested 'ar-th-commatize arg))

(defun ar-comment-ascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of ASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'greateranglednested 'ar-th-comment arg))

(defun ar-dollar-ascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of ASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'greateranglednested 'ar-th-dollar arg))

(defun ar-doublebackslash-ascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of ASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'greateranglednested 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-ascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of ASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'greateranglednested 'ar-th-doublebacktick arg))

(defun ar-doublequote-ascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of ASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'greateranglednested 'ar-th-doublequote arg))

(defun ar-doubleslash-ascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of ASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'greateranglednested 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-ascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of ASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'greateranglednested 'ar-th-doublebackslashparen arg))

(defun ar-end-ascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of END at things class of ASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'greateranglednested 'ar-th-end arg))

(defun ar-escape-ascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of ASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'greateranglednested 'ar-th-escape arg))

(defun ar-hide-ascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of HIDE at things class of ASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'greateranglednested 'ar-th-hide arg))

(defun ar-hide-show-ascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of ASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'greateranglednested 'ar-th-hide-show arg))

(defun ar-hyphen-ascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of ASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'greateranglednested 'ar-th-hyphen arg))

(defun ar-kill-ascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of KILL at things class of ASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'greateranglednested 'ar-th-kill arg))

(defun ar-leftrightsinglequote-ascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of ASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'greateranglednested 'ar-th-leftrightsinglequote arg))

(defun ar-length-ascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of ASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'greateranglednested 'ar-th-length arg))

(defun ar-parentize-ascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of ASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'greateranglednested 'ar-th-parentize arg))

(defun ar-quote-ascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of ASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'greateranglednested 'ar-th-quote arg))

(defun ar-separate-ascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of ASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'greateranglednested 'ar-th-separate arg))

(defun ar-show-ascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SHOW at things class of ASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'greateranglednested 'ar-th-show arg))

(defun ar-singlequote-ascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of ASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'greateranglednested 'ar-th-singlequote arg))

(defun ar-slash-ascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SLASH at things class of ASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'greateranglednested 'ar-th-slash arg))

(defun ar-star-ascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of STAR at things class of ASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'greateranglednested 'ar-th-star arg))

(defun ar-slashparen-ascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of ASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'greateranglednested 'ar-th-slashparen arg))

(defun ar-sort-ascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SORT at things class of ASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'greateranglednested 'ar-th-sort arg))

(defun ar-trim-ascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of TRIM at things class of ASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'greateranglednested 'ar-th-trim arg))

(defun ar-trim-left-ascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of ASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'greateranglednested 'ar-th-trim-left arg))

(defun ar-trim-right-ascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of ASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'greateranglednested 'ar-th-trim-right arg))

(defun ar-underscore-ascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of ASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'greateranglednested 'ar-th-underscore arg))

(defun ar-whitespace-ascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of ASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'greateranglednested 'ar-th-whitespace arg))

(defun ar-ascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of  at things class of ASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'lesseranglednested 'ar-th arg))

(defun ar-greaterangle-ascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of ASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'lesseranglednested 'ar-th-greaterangle arg))

(defun ar-lesserangle-ascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of ASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'lesseranglednested 'ar-th-lesserangle arg))

(defun ar-backslash-ascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of ASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'lesseranglednested 'ar-th-backslash arg))

(defun ar-colon-ascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of COLON at things class of ASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'lesseranglednested 'ar-th-colon arg))

(defun ar-beg-ascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BEG at things class of ASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'lesseranglednested 'ar-th-beg arg))

(defun ar-blok-ascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BLOK at things class of ASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'lesseranglednested 'ar-th-blok arg))

(defun ar-bounds-ascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of ASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'lesseranglednested 'ar-th-bounds arg))

(defun ar-brace-ascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BRACE at things class of ASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'lesseranglednested 'ar-th-brace arg))

(defun ar-bracket-ascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of ASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'lesseranglednested 'ar-th-bracket arg))

(defun ar-commatize-ascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of ASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'lesseranglednested 'ar-th-commatize arg))

(defun ar-comment-ascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of ASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'lesseranglednested 'ar-th-comment arg))

(defun ar-dollar-ascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of ASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'lesseranglednested 'ar-th-dollar arg))

(defun ar-doublebackslash-ascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of ASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'lesseranglednested 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-ascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of ASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'lesseranglednested 'ar-th-doublebacktick arg))

(defun ar-doublequote-ascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of ASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'lesseranglednested 'ar-th-doublequote arg))

(defun ar-doubleslash-ascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of ASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'lesseranglednested 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-ascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of ASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'lesseranglednested 'ar-th-doublebackslashparen arg))

(defun ar-end-ascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of END at things class of ASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'lesseranglednested 'ar-th-end arg))

(defun ar-escape-ascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of ASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'lesseranglednested 'ar-th-escape arg))

(defun ar-hide-ascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of HIDE at things class of ASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'lesseranglednested 'ar-th-hide arg))

(defun ar-hide-show-ascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of ASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'lesseranglednested 'ar-th-hide-show arg))

(defun ar-hyphen-ascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of ASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'lesseranglednested 'ar-th-hyphen arg))

(defun ar-kill-ascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of KILL at things class of ASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'lesseranglednested 'ar-th-kill arg))

(defun ar-leftrightsinglequote-ascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of ASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'lesseranglednested 'ar-th-leftrightsinglequote arg))

(defun ar-length-ascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of ASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'lesseranglednested 'ar-th-length arg))

(defun ar-parentize-ascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of ASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'lesseranglednested 'ar-th-parentize arg))

(defun ar-quote-ascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of ASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'lesseranglednested 'ar-th-quote arg))

(defun ar-separate-ascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of ASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'lesseranglednested 'ar-th-separate arg))

(defun ar-show-ascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SHOW at things class of ASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'lesseranglednested 'ar-th-show arg))

(defun ar-singlequote-ascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of ASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'lesseranglednested 'ar-th-singlequote arg))

(defun ar-slash-ascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SLASH at things class of ASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'lesseranglednested 'ar-th-slash arg))

(defun ar-star-ascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of STAR at things class of ASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'lesseranglednested 'ar-th-star arg))

(defun ar-slashparen-ascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of ASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'lesseranglednested 'ar-th-slashparen arg))

(defun ar-sort-ascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SORT at things class of ASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'lesseranglednested 'ar-th-sort arg))

(defun ar-trim-ascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of TRIM at things class of ASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'lesseranglednested 'ar-th-trim arg))

(defun ar-trim-left-ascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of ASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'lesseranglednested 'ar-th-trim-left arg))

(defun ar-trim-right-ascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of ASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'lesseranglednested 'ar-th-trim-right arg))

(defun ar-underscore-ascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of ASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'lesseranglednested 'ar-th-underscore arg))

(defun ar-whitespace-ascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of ASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'lesseranglednested 'ar-th-whitespace arg))

(defun ar-ascii-in-buffer-atpt (&optional arg) 
  "Employ actions of  at things class of ASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'buffer 'ar-th arg))

(defun ar-greaterangle-ascii-in-buffer-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of ASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'buffer 'ar-th-greaterangle arg))

(defun ar-lesserangle-ascii-in-buffer-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of ASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'buffer 'ar-th-lesserangle arg))

(defun ar-backslash-ascii-in-buffer-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of ASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'buffer 'ar-th-backslash arg))

(defun ar-colon-ascii-in-buffer-atpt (&optional arg) 
  "Employ actions of COLON at things class of ASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'buffer 'ar-th-colon arg))

(defun ar-beg-ascii-in-buffer-atpt (&optional arg) 
  "Employ actions of BEG at things class of ASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'buffer 'ar-th-beg arg))

(defun ar-blok-ascii-in-buffer-atpt (&optional arg) 
  "Employ actions of BLOK at things class of ASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'buffer 'ar-th-blok arg))

(defun ar-bounds-ascii-in-buffer-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of ASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'buffer 'ar-th-bounds arg))

(defun ar-brace-ascii-in-buffer-atpt (&optional arg) 
  "Employ actions of BRACE at things class of ASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'buffer 'ar-th-brace arg))

(defun ar-bracket-ascii-in-buffer-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of ASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'buffer 'ar-th-bracket arg))

(defun ar-commatize-ascii-in-buffer-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of ASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'buffer 'ar-th-commatize arg))

(defun ar-comment-ascii-in-buffer-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of ASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'buffer 'ar-th-comment arg))

(defun ar-dollar-ascii-in-buffer-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of ASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'buffer 'ar-th-dollar arg))

(defun ar-doublebackslash-ascii-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of ASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'buffer 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-ascii-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of ASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'buffer 'ar-th-doublebacktick arg))

(defun ar-doublequote-ascii-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of ASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'buffer 'ar-th-doublequote arg))

(defun ar-doubleslash-ascii-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of ASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'buffer 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-ascii-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of ASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'buffer 'ar-th-doublebackslashparen arg))

(defun ar-end-ascii-in-buffer-atpt (&optional arg) 
  "Employ actions of END at things class of ASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'buffer 'ar-th-end arg))

(defun ar-escape-ascii-in-buffer-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of ASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'buffer 'ar-th-escape arg))

(defun ar-hide-ascii-in-buffer-atpt (&optional arg) 
  "Employ actions of HIDE at things class of ASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'buffer 'ar-th-hide arg))

(defun ar-hide-show-ascii-in-buffer-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of ASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'buffer 'ar-th-hide-show arg))

(defun ar-hyphen-ascii-in-buffer-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of ASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'buffer 'ar-th-hyphen arg))

(defun ar-kill-ascii-in-buffer-atpt (&optional arg) 
  "Employ actions of KILL at things class of ASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'buffer 'ar-th-kill arg))

(defun ar-leftrightsinglequote-ascii-in-buffer-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of ASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'buffer 'ar-th-leftrightsinglequote arg))

(defun ar-length-ascii-in-buffer-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of ASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'buffer 'ar-th-length arg))

(defun ar-parentize-ascii-in-buffer-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of ASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'buffer 'ar-th-parentize arg))

(defun ar-quote-ascii-in-buffer-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of ASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'buffer 'ar-th-quote arg))

(defun ar-separate-ascii-in-buffer-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of ASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'buffer 'ar-th-separate arg))

(defun ar-show-ascii-in-buffer-atpt (&optional arg) 
  "Employ actions of SHOW at things class of ASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'buffer 'ar-th-show arg))

(defun ar-singlequote-ascii-in-buffer-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of ASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'buffer 'ar-th-singlequote arg))

(defun ar-slash-ascii-in-buffer-atpt (&optional arg) 
  "Employ actions of SLASH at things class of ASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'buffer 'ar-th-slash arg))

(defun ar-star-ascii-in-buffer-atpt (&optional arg) 
  "Employ actions of STAR at things class of ASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'buffer 'ar-th-star arg))

(defun ar-slashparen-ascii-in-buffer-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of ASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'buffer 'ar-th-slashparen arg))

(defun ar-sort-ascii-in-buffer-atpt (&optional arg) 
  "Employ actions of SORT at things class of ASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'buffer 'ar-th-sort arg))

(defun ar-trim-ascii-in-buffer-atpt (&optional arg) 
  "Employ actions of TRIM at things class of ASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'buffer 'ar-th-trim arg))

(defun ar-trim-left-ascii-in-buffer-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of ASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'buffer 'ar-th-trim-left arg))

(defun ar-trim-right-ascii-in-buffer-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of ASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'buffer 'ar-th-trim-right arg))

(defun ar-underscore-ascii-in-buffer-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of ASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'buffer 'ar-th-underscore arg))

(defun ar-whitespace-ascii-in-buffer-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of ASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'buffer 'ar-th-whitespace arg))

(defun ar-ascii-in-comment-atpt (&optional arg) 
  "Employ actions of  at things class of ASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'comment 'ar-th arg))

(defun ar-greaterangle-ascii-in-comment-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of ASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'comment 'ar-th-greaterangle arg))

(defun ar-lesserangle-ascii-in-comment-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of ASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'comment 'ar-th-lesserangle arg))

(defun ar-backslash-ascii-in-comment-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of ASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'comment 'ar-th-backslash arg))

(defun ar-colon-ascii-in-comment-atpt (&optional arg) 
  "Employ actions of COLON at things class of ASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'comment 'ar-th-colon arg))

(defun ar-beg-ascii-in-comment-atpt (&optional arg) 
  "Employ actions of BEG at things class of ASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'comment 'ar-th-beg arg))

(defun ar-blok-ascii-in-comment-atpt (&optional arg) 
  "Employ actions of BLOK at things class of ASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'comment 'ar-th-blok arg))

(defun ar-bounds-ascii-in-comment-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of ASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'comment 'ar-th-bounds arg))

(defun ar-brace-ascii-in-comment-atpt (&optional arg) 
  "Employ actions of BRACE at things class of ASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'comment 'ar-th-brace arg))

(defun ar-bracket-ascii-in-comment-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of ASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'comment 'ar-th-bracket arg))

(defun ar-commatize-ascii-in-comment-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of ASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'comment 'ar-th-commatize arg))

(defun ar-comment-ascii-in-comment-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of ASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'comment 'ar-th-comment arg))

(defun ar-dollar-ascii-in-comment-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of ASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'comment 'ar-th-dollar arg))

(defun ar-doublebackslash-ascii-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of ASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'comment 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-ascii-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of ASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'comment 'ar-th-doublebacktick arg))

(defun ar-doublequote-ascii-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of ASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'comment 'ar-th-doublequote arg))

(defun ar-doubleslash-ascii-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of ASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'comment 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-ascii-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of ASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'comment 'ar-th-doublebackslashparen arg))

(defun ar-end-ascii-in-comment-atpt (&optional arg) 
  "Employ actions of END at things class of ASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'comment 'ar-th-end arg))

(defun ar-escape-ascii-in-comment-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of ASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'comment 'ar-th-escape arg))

(defun ar-hide-ascii-in-comment-atpt (&optional arg) 
  "Employ actions of HIDE at things class of ASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'comment 'ar-th-hide arg))

(defun ar-hide-show-ascii-in-comment-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of ASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'comment 'ar-th-hide-show arg))

(defun ar-hyphen-ascii-in-comment-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of ASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'comment 'ar-th-hyphen arg))

(defun ar-kill-ascii-in-comment-atpt (&optional arg) 
  "Employ actions of KILL at things class of ASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'comment 'ar-th-kill arg))

(defun ar-leftrightsinglequote-ascii-in-comment-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of ASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'comment 'ar-th-leftrightsinglequote arg))

(defun ar-length-ascii-in-comment-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of ASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'comment 'ar-th-length arg))

(defun ar-parentize-ascii-in-comment-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of ASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'comment 'ar-th-parentize arg))

(defun ar-quote-ascii-in-comment-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of ASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'comment 'ar-th-quote arg))

(defun ar-separate-ascii-in-comment-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of ASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'comment 'ar-th-separate arg))

(defun ar-show-ascii-in-comment-atpt (&optional arg) 
  "Employ actions of SHOW at things class of ASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'comment 'ar-th-show arg))

(defun ar-singlequote-ascii-in-comment-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of ASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'comment 'ar-th-singlequote arg))

(defun ar-slash-ascii-in-comment-atpt (&optional arg) 
  "Employ actions of SLASH at things class of ASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'comment 'ar-th-slash arg))

(defun ar-star-ascii-in-comment-atpt (&optional arg) 
  "Employ actions of STAR at things class of ASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'comment 'ar-th-star arg))

(defun ar-slashparen-ascii-in-comment-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of ASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'comment 'ar-th-slashparen arg))

(defun ar-sort-ascii-in-comment-atpt (&optional arg) 
  "Employ actions of SORT at things class of ASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'comment 'ar-th-sort arg))

(defun ar-trim-ascii-in-comment-atpt (&optional arg) 
  "Employ actions of TRIM at things class of ASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'comment 'ar-th-trim arg))

(defun ar-trim-left-ascii-in-comment-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of ASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'comment 'ar-th-trim-left arg))

(defun ar-trim-right-ascii-in-comment-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of ASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'comment 'ar-th-trim-right arg))

(defun ar-underscore-ascii-in-comment-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of ASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'comment 'ar-th-underscore arg))

(defun ar-whitespace-ascii-in-comment-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of ASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'comment 'ar-th-whitespace arg))

(defun ar-ascii-in-csv-atpt (&optional arg) 
  "Employ actions of  at things class of ASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'csv 'ar-th arg))

(defun ar-greaterangle-ascii-in-csv-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of ASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'csv 'ar-th-greaterangle arg))

(defun ar-lesserangle-ascii-in-csv-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of ASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'csv 'ar-th-lesserangle arg))

(defun ar-backslash-ascii-in-csv-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of ASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'csv 'ar-th-backslash arg))

(defun ar-colon-ascii-in-csv-atpt (&optional arg) 
  "Employ actions of COLON at things class of ASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'csv 'ar-th-colon arg))

(defun ar-beg-ascii-in-csv-atpt (&optional arg) 
  "Employ actions of BEG at things class of ASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'csv 'ar-th-beg arg))

(defun ar-blok-ascii-in-csv-atpt (&optional arg) 
  "Employ actions of BLOK at things class of ASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'csv 'ar-th-blok arg))

(defun ar-bounds-ascii-in-csv-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of ASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'csv 'ar-th-bounds arg))

(defun ar-brace-ascii-in-csv-atpt (&optional arg) 
  "Employ actions of BRACE at things class of ASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'csv 'ar-th-brace arg))

(defun ar-bracket-ascii-in-csv-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of ASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'csv 'ar-th-bracket arg))

(defun ar-commatize-ascii-in-csv-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of ASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'csv 'ar-th-commatize arg))

(defun ar-comment-ascii-in-csv-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of ASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'csv 'ar-th-comment arg))

(defun ar-dollar-ascii-in-csv-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of ASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'csv 'ar-th-dollar arg))

(defun ar-doublebackslash-ascii-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of ASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'csv 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-ascii-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of ASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'csv 'ar-th-doublebacktick arg))

(defun ar-doublequote-ascii-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of ASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'csv 'ar-th-doublequote arg))

(defun ar-doubleslash-ascii-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of ASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'csv 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-ascii-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of ASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'csv 'ar-th-doublebackslashparen arg))

(defun ar-end-ascii-in-csv-atpt (&optional arg) 
  "Employ actions of END at things class of ASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'csv 'ar-th-end arg))

(defun ar-escape-ascii-in-csv-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of ASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'csv 'ar-th-escape arg))

(defun ar-hide-ascii-in-csv-atpt (&optional arg) 
  "Employ actions of HIDE at things class of ASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'csv 'ar-th-hide arg))

(defun ar-hide-show-ascii-in-csv-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of ASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'csv 'ar-th-hide-show arg))

(defun ar-hyphen-ascii-in-csv-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of ASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'csv 'ar-th-hyphen arg))

(defun ar-kill-ascii-in-csv-atpt (&optional arg) 
  "Employ actions of KILL at things class of ASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'csv 'ar-th-kill arg))

(defun ar-leftrightsinglequote-ascii-in-csv-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of ASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'csv 'ar-th-leftrightsinglequote arg))

(defun ar-length-ascii-in-csv-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of ASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'csv 'ar-th-length arg))

(defun ar-parentize-ascii-in-csv-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of ASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'csv 'ar-th-parentize arg))

(defun ar-quote-ascii-in-csv-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of ASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'csv 'ar-th-quote arg))

(defun ar-separate-ascii-in-csv-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of ASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'csv 'ar-th-separate arg))

(defun ar-show-ascii-in-csv-atpt (&optional arg) 
  "Employ actions of SHOW at things class of ASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'csv 'ar-th-show arg))

(defun ar-singlequote-ascii-in-csv-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of ASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'csv 'ar-th-singlequote arg))

(defun ar-slash-ascii-in-csv-atpt (&optional arg) 
  "Employ actions of SLASH at things class of ASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'csv 'ar-th-slash arg))

(defun ar-star-ascii-in-csv-atpt (&optional arg) 
  "Employ actions of STAR at things class of ASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'csv 'ar-th-star arg))

(defun ar-slashparen-ascii-in-csv-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of ASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'csv 'ar-th-slashparen arg))

(defun ar-sort-ascii-in-csv-atpt (&optional arg) 
  "Employ actions of SORT at things class of ASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'csv 'ar-th-sort arg))

(defun ar-trim-ascii-in-csv-atpt (&optional arg) 
  "Employ actions of TRIM at things class of ASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'csv 'ar-th-trim arg))

(defun ar-trim-left-ascii-in-csv-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of ASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'csv 'ar-th-trim-left arg))

(defun ar-trim-right-ascii-in-csv-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of ASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'csv 'ar-th-trim-right arg))

(defun ar-underscore-ascii-in-csv-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of ASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'csv 'ar-th-underscore arg))

(defun ar-whitespace-ascii-in-csv-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of ASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'csv 'ar-th-whitespace arg))

(defun ar-ascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of  at things class of ASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'filenamenondirectory 'ar-th arg))

(defun ar-greaterangle-ascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of ASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'filenamenondirectory 'ar-th-greaterangle arg))

(defun ar-lesserangle-ascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of ASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'filenamenondirectory 'ar-th-lesserangle arg))

(defun ar-backslash-ascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of ASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'filenamenondirectory 'ar-th-backslash arg))

(defun ar-colon-ascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of COLON at things class of ASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'filenamenondirectory 'ar-th-colon arg))

(defun ar-beg-ascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BEG at things class of ASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'filenamenondirectory 'ar-th-beg arg))

(defun ar-blok-ascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BLOK at things class of ASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'filenamenondirectory 'ar-th-blok arg))

(defun ar-bounds-ascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of ASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'filenamenondirectory 'ar-th-bounds arg))

(defun ar-brace-ascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BRACE at things class of ASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'filenamenondirectory 'ar-th-brace arg))

(defun ar-bracket-ascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of ASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'filenamenondirectory 'ar-th-bracket arg))

(defun ar-commatize-ascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of ASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'filenamenondirectory 'ar-th-commatize arg))

(defun ar-comment-ascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of ASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'filenamenondirectory 'ar-th-comment arg))

(defun ar-dollar-ascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of ASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'filenamenondirectory 'ar-th-dollar arg))

(defun ar-doublebackslash-ascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of ASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'filenamenondirectory 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-ascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of ASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'filenamenondirectory 'ar-th-doublebacktick arg))

(defun ar-doublequote-ascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of ASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'filenamenondirectory 'ar-th-doublequote arg))

(defun ar-doubleslash-ascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of ASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'filenamenondirectory 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-ascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of ASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'filenamenondirectory 'ar-th-doublebackslashparen arg))

(defun ar-end-ascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of END at things class of ASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'filenamenondirectory 'ar-th-end arg))

(defun ar-escape-ascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of ASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'filenamenondirectory 'ar-th-escape arg))

(defun ar-hide-ascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of HIDE at things class of ASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'filenamenondirectory 'ar-th-hide arg))

(defun ar-hide-show-ascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of ASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'filenamenondirectory 'ar-th-hide-show arg))

(defun ar-hyphen-ascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of ASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'filenamenondirectory 'ar-th-hyphen arg))

(defun ar-kill-ascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of KILL at things class of ASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'filenamenondirectory 'ar-th-kill arg))

(defun ar-leftrightsinglequote-ascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of ASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'filenamenondirectory 'ar-th-leftrightsinglequote arg))

(defun ar-length-ascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of ASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'filenamenondirectory 'ar-th-length arg))

(defun ar-parentize-ascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of ASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'filenamenondirectory 'ar-th-parentize arg))

(defun ar-quote-ascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of ASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'filenamenondirectory 'ar-th-quote arg))

(defun ar-separate-ascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of ASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'filenamenondirectory 'ar-th-separate arg))

(defun ar-show-ascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SHOW at things class of ASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'filenamenondirectory 'ar-th-show arg))

(defun ar-singlequote-ascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of ASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'filenamenondirectory 'ar-th-singlequote arg))

(defun ar-slash-ascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SLASH at things class of ASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'filenamenondirectory 'ar-th-slash arg))

(defun ar-star-ascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of STAR at things class of ASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'filenamenondirectory 'ar-th-star arg))

(defun ar-slashparen-ascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of ASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'filenamenondirectory 'ar-th-slashparen arg))

(defun ar-sort-ascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SORT at things class of ASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'filenamenondirectory 'ar-th-sort arg))

(defun ar-trim-ascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of TRIM at things class of ASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'filenamenondirectory 'ar-th-trim arg))

(defun ar-trim-left-ascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of ASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'filenamenondirectory 'ar-th-trim-left arg))

(defun ar-trim-right-ascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of ASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'filenamenondirectory 'ar-th-trim-right arg))

(defun ar-underscore-ascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of ASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'filenamenondirectory 'ar-th-underscore arg))

(defun ar-whitespace-ascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of ASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'filenamenondirectory 'ar-th-whitespace arg))

(defun ar-ascii-in-function-atpt (&optional arg) 
  "Employ actions of  at things class of ASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'function 'ar-th arg))

(defun ar-greaterangle-ascii-in-function-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of ASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'function 'ar-th-greaterangle arg))

(defun ar-lesserangle-ascii-in-function-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of ASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'function 'ar-th-lesserangle arg))

(defun ar-backslash-ascii-in-function-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of ASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'function 'ar-th-backslash arg))

(defun ar-colon-ascii-in-function-atpt (&optional arg) 
  "Employ actions of COLON at things class of ASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'function 'ar-th-colon arg))

(defun ar-beg-ascii-in-function-atpt (&optional arg) 
  "Employ actions of BEG at things class of ASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'function 'ar-th-beg arg))

(defun ar-blok-ascii-in-function-atpt (&optional arg) 
  "Employ actions of BLOK at things class of ASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'function 'ar-th-blok arg))

(defun ar-bounds-ascii-in-function-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of ASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'function 'ar-th-bounds arg))

(defun ar-brace-ascii-in-function-atpt (&optional arg) 
  "Employ actions of BRACE at things class of ASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'function 'ar-th-brace arg))

(defun ar-bracket-ascii-in-function-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of ASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'function 'ar-th-bracket arg))

(defun ar-commatize-ascii-in-function-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of ASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'function 'ar-th-commatize arg))

(defun ar-comment-ascii-in-function-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of ASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'function 'ar-th-comment arg))

(defun ar-dollar-ascii-in-function-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of ASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'function 'ar-th-dollar arg))

(defun ar-doublebackslash-ascii-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of ASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'function 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-ascii-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of ASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'function 'ar-th-doublebacktick arg))

(defun ar-doublequote-ascii-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of ASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'function 'ar-th-doublequote arg))

(defun ar-doubleslash-ascii-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of ASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'function 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-ascii-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of ASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'function 'ar-th-doublebackslashparen arg))

(defun ar-end-ascii-in-function-atpt (&optional arg) 
  "Employ actions of END at things class of ASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'function 'ar-th-end arg))

(defun ar-escape-ascii-in-function-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of ASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'function 'ar-th-escape arg))

(defun ar-hide-ascii-in-function-atpt (&optional arg) 
  "Employ actions of HIDE at things class of ASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'function 'ar-th-hide arg))

(defun ar-hide-show-ascii-in-function-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of ASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'function 'ar-th-hide-show arg))

(defun ar-hyphen-ascii-in-function-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of ASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'function 'ar-th-hyphen arg))

(defun ar-kill-ascii-in-function-atpt (&optional arg) 
  "Employ actions of KILL at things class of ASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'function 'ar-th-kill arg))

(defun ar-leftrightsinglequote-ascii-in-function-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of ASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'function 'ar-th-leftrightsinglequote arg))

(defun ar-length-ascii-in-function-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of ASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'function 'ar-th-length arg))

(defun ar-parentize-ascii-in-function-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of ASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'function 'ar-th-parentize arg))

(defun ar-quote-ascii-in-function-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of ASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'function 'ar-th-quote arg))

(defun ar-separate-ascii-in-function-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of ASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'function 'ar-th-separate arg))

(defun ar-show-ascii-in-function-atpt (&optional arg) 
  "Employ actions of SHOW at things class of ASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'function 'ar-th-show arg))

(defun ar-singlequote-ascii-in-function-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of ASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'function 'ar-th-singlequote arg))

(defun ar-slash-ascii-in-function-atpt (&optional arg) 
  "Employ actions of SLASH at things class of ASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'function 'ar-th-slash arg))

(defun ar-star-ascii-in-function-atpt (&optional arg) 
  "Employ actions of STAR at things class of ASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'function 'ar-th-star arg))

(defun ar-slashparen-ascii-in-function-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of ASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'function 'ar-th-slashparen arg))

(defun ar-sort-ascii-in-function-atpt (&optional arg) 
  "Employ actions of SORT at things class of ASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'function 'ar-th-sort arg))

(defun ar-trim-ascii-in-function-atpt (&optional arg) 
  "Employ actions of TRIM at things class of ASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'function 'ar-th-trim arg))

(defun ar-trim-left-ascii-in-function-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of ASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'function 'ar-th-trim-left arg))

(defun ar-trim-right-ascii-in-function-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of ASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'function 'ar-th-trim-right arg))

(defun ar-underscore-ascii-in-function-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of ASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'function 'ar-th-underscore arg))

(defun ar-whitespace-ascii-in-function-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of ASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'function 'ar-th-whitespace arg))

(defun ar-ascii-in-line-atpt (&optional arg) 
  "Employ actions of  at things class of ASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'line 'ar-th arg))

(defun ar-greaterangle-ascii-in-line-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of ASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'line 'ar-th-greaterangle arg))

(defun ar-lesserangle-ascii-in-line-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of ASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'line 'ar-th-lesserangle arg))

(defun ar-backslash-ascii-in-line-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of ASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'line 'ar-th-backslash arg))

(defun ar-colon-ascii-in-line-atpt (&optional arg) 
  "Employ actions of COLON at things class of ASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'line 'ar-th-colon arg))

(defun ar-beg-ascii-in-line-atpt (&optional arg) 
  "Employ actions of BEG at things class of ASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'line 'ar-th-beg arg))

(defun ar-blok-ascii-in-line-atpt (&optional arg) 
  "Employ actions of BLOK at things class of ASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'line 'ar-th-blok arg))

(defun ar-bounds-ascii-in-line-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of ASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'line 'ar-th-bounds arg))

(defun ar-brace-ascii-in-line-atpt (&optional arg) 
  "Employ actions of BRACE at things class of ASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'line 'ar-th-brace arg))

(defun ar-bracket-ascii-in-line-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of ASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'line 'ar-th-bracket arg))

(defun ar-commatize-ascii-in-line-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of ASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'line 'ar-th-commatize arg))

(defun ar-comment-ascii-in-line-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of ASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'line 'ar-th-comment arg))

(defun ar-dollar-ascii-in-line-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of ASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'line 'ar-th-dollar arg))

(defun ar-doublebackslash-ascii-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of ASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'line 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-ascii-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of ASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'line 'ar-th-doublebacktick arg))

(defun ar-doublequote-ascii-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of ASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'line 'ar-th-doublequote arg))

(defun ar-doubleslash-ascii-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of ASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'line 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-ascii-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of ASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'line 'ar-th-doublebackslashparen arg))

(defun ar-end-ascii-in-line-atpt (&optional arg) 
  "Employ actions of END at things class of ASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'line 'ar-th-end arg))

(defun ar-escape-ascii-in-line-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of ASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'line 'ar-th-escape arg))

(defun ar-hide-ascii-in-line-atpt (&optional arg) 
  "Employ actions of HIDE at things class of ASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'line 'ar-th-hide arg))

(defun ar-hide-show-ascii-in-line-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of ASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'line 'ar-th-hide-show arg))

(defun ar-hyphen-ascii-in-line-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of ASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'line 'ar-th-hyphen arg))

(defun ar-kill-ascii-in-line-atpt (&optional arg) 
  "Employ actions of KILL at things class of ASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'line 'ar-th-kill arg))

(defun ar-leftrightsinglequote-ascii-in-line-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of ASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'line 'ar-th-leftrightsinglequote arg))

(defun ar-length-ascii-in-line-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of ASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'line 'ar-th-length arg))

(defun ar-parentize-ascii-in-line-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of ASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'line 'ar-th-parentize arg))

(defun ar-quote-ascii-in-line-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of ASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'line 'ar-th-quote arg))

(defun ar-separate-ascii-in-line-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of ASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'line 'ar-th-separate arg))

(defun ar-show-ascii-in-line-atpt (&optional arg) 
  "Employ actions of SHOW at things class of ASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'line 'ar-th-show arg))

(defun ar-singlequote-ascii-in-line-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of ASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'line 'ar-th-singlequote arg))

(defun ar-slash-ascii-in-line-atpt (&optional arg) 
  "Employ actions of SLASH at things class of ASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'line 'ar-th-slash arg))

(defun ar-star-ascii-in-line-atpt (&optional arg) 
  "Employ actions of STAR at things class of ASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'line 'ar-th-star arg))

(defun ar-slashparen-ascii-in-line-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of ASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'line 'ar-th-slashparen arg))

(defun ar-sort-ascii-in-line-atpt (&optional arg) 
  "Employ actions of SORT at things class of ASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'line 'ar-th-sort arg))

(defun ar-trim-ascii-in-line-atpt (&optional arg) 
  "Employ actions of TRIM at things class of ASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'line 'ar-th-trim arg))

(defun ar-trim-left-ascii-in-line-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of ASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'line 'ar-th-trim-left arg))

(defun ar-trim-right-ascii-in-line-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of ASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'line 'ar-th-trim-right arg))

(defun ar-underscore-ascii-in-line-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of ASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'line 'ar-th-underscore arg))

(defun ar-whitespace-ascii-in-line-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of ASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'line 'ar-th-whitespace arg))

(defun ar-ascii-in-list-atpt (&optional arg) 
  "Employ actions of  at things class of ASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'list 'ar-th arg))

(defun ar-greaterangle-ascii-in-list-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of ASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'list 'ar-th-greaterangle arg))

(defun ar-lesserangle-ascii-in-list-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of ASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'list 'ar-th-lesserangle arg))

(defun ar-backslash-ascii-in-list-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of ASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'list 'ar-th-backslash arg))

(defun ar-colon-ascii-in-list-atpt (&optional arg) 
  "Employ actions of COLON at things class of ASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'list 'ar-th-colon arg))

(defun ar-beg-ascii-in-list-atpt (&optional arg) 
  "Employ actions of BEG at things class of ASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'list 'ar-th-beg arg))

(defun ar-blok-ascii-in-list-atpt (&optional arg) 
  "Employ actions of BLOK at things class of ASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'list 'ar-th-blok arg))

(defun ar-bounds-ascii-in-list-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of ASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'list 'ar-th-bounds arg))

(defun ar-brace-ascii-in-list-atpt (&optional arg) 
  "Employ actions of BRACE at things class of ASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'list 'ar-th-brace arg))

(defun ar-bracket-ascii-in-list-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of ASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'list 'ar-th-bracket arg))

(defun ar-commatize-ascii-in-list-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of ASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'list 'ar-th-commatize arg))

(defun ar-comment-ascii-in-list-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of ASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'list 'ar-th-comment arg))

(defun ar-dollar-ascii-in-list-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of ASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'list 'ar-th-dollar arg))

(defun ar-doublebackslash-ascii-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of ASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'list 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-ascii-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of ASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'list 'ar-th-doublebacktick arg))

(defun ar-doublequote-ascii-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of ASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'list 'ar-th-doublequote arg))

(defun ar-doubleslash-ascii-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of ASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'list 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-ascii-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of ASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'list 'ar-th-doublebackslashparen arg))

(defun ar-end-ascii-in-list-atpt (&optional arg) 
  "Employ actions of END at things class of ASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'list 'ar-th-end arg))

(defun ar-escape-ascii-in-list-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of ASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'list 'ar-th-escape arg))

(defun ar-hide-ascii-in-list-atpt (&optional arg) 
  "Employ actions of HIDE at things class of ASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'list 'ar-th-hide arg))

(defun ar-hide-show-ascii-in-list-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of ASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'list 'ar-th-hide-show arg))

(defun ar-hyphen-ascii-in-list-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of ASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'list 'ar-th-hyphen arg))

(defun ar-kill-ascii-in-list-atpt (&optional arg) 
  "Employ actions of KILL at things class of ASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'list 'ar-th-kill arg))

(defun ar-leftrightsinglequote-ascii-in-list-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of ASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'list 'ar-th-leftrightsinglequote arg))

(defun ar-length-ascii-in-list-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of ASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'list 'ar-th-length arg))

(defun ar-parentize-ascii-in-list-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of ASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'list 'ar-th-parentize arg))

(defun ar-quote-ascii-in-list-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of ASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'list 'ar-th-quote arg))

(defun ar-separate-ascii-in-list-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of ASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'list 'ar-th-separate arg))

(defun ar-show-ascii-in-list-atpt (&optional arg) 
  "Employ actions of SHOW at things class of ASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'list 'ar-th-show arg))

(defun ar-singlequote-ascii-in-list-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of ASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'list 'ar-th-singlequote arg))

(defun ar-slash-ascii-in-list-atpt (&optional arg) 
  "Employ actions of SLASH at things class of ASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'list 'ar-th-slash arg))

(defun ar-star-ascii-in-list-atpt (&optional arg) 
  "Employ actions of STAR at things class of ASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'list 'ar-th-star arg))

(defun ar-slashparen-ascii-in-list-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of ASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'list 'ar-th-slashparen arg))

(defun ar-sort-ascii-in-list-atpt (&optional arg) 
  "Employ actions of SORT at things class of ASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'list 'ar-th-sort arg))

(defun ar-trim-ascii-in-list-atpt (&optional arg) 
  "Employ actions of TRIM at things class of ASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'list 'ar-th-trim arg))

(defun ar-trim-left-ascii-in-list-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of ASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'list 'ar-th-trim-left arg))

(defun ar-trim-right-ascii-in-list-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of ASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'list 'ar-th-trim-right arg))

(defun ar-underscore-ascii-in-list-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of ASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'list 'ar-th-underscore arg))

(defun ar-whitespace-ascii-in-list-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of ASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'list 'ar-th-whitespace arg))

(defun ar-ascii-in-name-atpt (&optional arg) 
  "Employ actions of  at things class of ASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'name 'ar-th arg))

(defun ar-greaterangle-ascii-in-name-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of ASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'name 'ar-th-greaterangle arg))

(defun ar-lesserangle-ascii-in-name-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of ASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'name 'ar-th-lesserangle arg))

(defun ar-backslash-ascii-in-name-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of ASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'name 'ar-th-backslash arg))

(defun ar-colon-ascii-in-name-atpt (&optional arg) 
  "Employ actions of COLON at things class of ASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'name 'ar-th-colon arg))

(defun ar-beg-ascii-in-name-atpt (&optional arg) 
  "Employ actions of BEG at things class of ASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'name 'ar-th-beg arg))

(defun ar-blok-ascii-in-name-atpt (&optional arg) 
  "Employ actions of BLOK at things class of ASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'name 'ar-th-blok arg))

(defun ar-bounds-ascii-in-name-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of ASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'name 'ar-th-bounds arg))

(defun ar-brace-ascii-in-name-atpt (&optional arg) 
  "Employ actions of BRACE at things class of ASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'name 'ar-th-brace arg))

(defun ar-bracket-ascii-in-name-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of ASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'name 'ar-th-bracket arg))

(defun ar-commatize-ascii-in-name-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of ASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'name 'ar-th-commatize arg))

(defun ar-comment-ascii-in-name-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of ASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'name 'ar-th-comment arg))

(defun ar-dollar-ascii-in-name-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of ASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'name 'ar-th-dollar arg))

(defun ar-doublebackslash-ascii-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of ASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'name 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-ascii-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of ASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'name 'ar-th-doublebacktick arg))

(defun ar-doublequote-ascii-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of ASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'name 'ar-th-doublequote arg))

(defun ar-doubleslash-ascii-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of ASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'name 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-ascii-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of ASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'name 'ar-th-doublebackslashparen arg))

(defun ar-end-ascii-in-name-atpt (&optional arg) 
  "Employ actions of END at things class of ASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'name 'ar-th-end arg))

(defun ar-escape-ascii-in-name-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of ASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'name 'ar-th-escape arg))

(defun ar-hide-ascii-in-name-atpt (&optional arg) 
  "Employ actions of HIDE at things class of ASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'name 'ar-th-hide arg))

(defun ar-hide-show-ascii-in-name-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of ASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'name 'ar-th-hide-show arg))

(defun ar-hyphen-ascii-in-name-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of ASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'name 'ar-th-hyphen arg))

(defun ar-kill-ascii-in-name-atpt (&optional arg) 
  "Employ actions of KILL at things class of ASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'name 'ar-th-kill arg))

(defun ar-leftrightsinglequote-ascii-in-name-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of ASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'name 'ar-th-leftrightsinglequote arg))

(defun ar-length-ascii-in-name-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of ASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'name 'ar-th-length arg))

(defun ar-parentize-ascii-in-name-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of ASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'name 'ar-th-parentize arg))

(defun ar-quote-ascii-in-name-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of ASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'name 'ar-th-quote arg))

(defun ar-separate-ascii-in-name-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of ASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'name 'ar-th-separate arg))

(defun ar-show-ascii-in-name-atpt (&optional arg) 
  "Employ actions of SHOW at things class of ASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'name 'ar-th-show arg))

(defun ar-singlequote-ascii-in-name-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of ASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'name 'ar-th-singlequote arg))

(defun ar-slash-ascii-in-name-atpt (&optional arg) 
  "Employ actions of SLASH at things class of ASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'name 'ar-th-slash arg))

(defun ar-star-ascii-in-name-atpt (&optional arg) 
  "Employ actions of STAR at things class of ASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'name 'ar-th-star arg))

(defun ar-slashparen-ascii-in-name-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of ASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'name 'ar-th-slashparen arg))

(defun ar-sort-ascii-in-name-atpt (&optional arg) 
  "Employ actions of SORT at things class of ASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'name 'ar-th-sort arg))

(defun ar-trim-ascii-in-name-atpt (&optional arg) 
  "Employ actions of TRIM at things class of ASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'name 'ar-th-trim arg))

(defun ar-trim-left-ascii-in-name-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of ASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'name 'ar-th-trim-left arg))

(defun ar-trim-right-ascii-in-name-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of ASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'name 'ar-th-trim-right arg))

(defun ar-underscore-ascii-in-name-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of ASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'name 'ar-th-underscore arg))

(defun ar-whitespace-ascii-in-name-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of ASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'name 'ar-th-whitespace arg))

(defun ar-ascii-in-page-atpt (&optional arg) 
  "Employ actions of  at things class of ASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'page 'ar-th arg))

(defun ar-greaterangle-ascii-in-page-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of ASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'page 'ar-th-greaterangle arg))

(defun ar-lesserangle-ascii-in-page-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of ASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'page 'ar-th-lesserangle arg))

(defun ar-backslash-ascii-in-page-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of ASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'page 'ar-th-backslash arg))

(defun ar-colon-ascii-in-page-atpt (&optional arg) 
  "Employ actions of COLON at things class of ASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'page 'ar-th-colon arg))

(defun ar-beg-ascii-in-page-atpt (&optional arg) 
  "Employ actions of BEG at things class of ASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'page 'ar-th-beg arg))

(defun ar-blok-ascii-in-page-atpt (&optional arg) 
  "Employ actions of BLOK at things class of ASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'page 'ar-th-blok arg))

(defun ar-bounds-ascii-in-page-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of ASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'page 'ar-th-bounds arg))

(defun ar-brace-ascii-in-page-atpt (&optional arg) 
  "Employ actions of BRACE at things class of ASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'page 'ar-th-brace arg))

(defun ar-bracket-ascii-in-page-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of ASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'page 'ar-th-bracket arg))

(defun ar-commatize-ascii-in-page-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of ASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'page 'ar-th-commatize arg))

(defun ar-comment-ascii-in-page-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of ASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'page 'ar-th-comment arg))

(defun ar-dollar-ascii-in-page-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of ASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'page 'ar-th-dollar arg))

(defun ar-doublebackslash-ascii-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of ASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'page 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-ascii-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of ASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'page 'ar-th-doublebacktick arg))

(defun ar-doublequote-ascii-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of ASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'page 'ar-th-doublequote arg))

(defun ar-doubleslash-ascii-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of ASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'page 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-ascii-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of ASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'page 'ar-th-doublebackslashparen arg))

(defun ar-end-ascii-in-page-atpt (&optional arg) 
  "Employ actions of END at things class of ASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'page 'ar-th-end arg))

(defun ar-escape-ascii-in-page-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of ASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'page 'ar-th-escape arg))

(defun ar-hide-ascii-in-page-atpt (&optional arg) 
  "Employ actions of HIDE at things class of ASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'page 'ar-th-hide arg))

(defun ar-hide-show-ascii-in-page-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of ASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'page 'ar-th-hide-show arg))

(defun ar-hyphen-ascii-in-page-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of ASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'page 'ar-th-hyphen arg))

(defun ar-kill-ascii-in-page-atpt (&optional arg) 
  "Employ actions of KILL at things class of ASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'page 'ar-th-kill arg))

(defun ar-leftrightsinglequote-ascii-in-page-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of ASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'page 'ar-th-leftrightsinglequote arg))

(defun ar-length-ascii-in-page-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of ASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'page 'ar-th-length arg))

(defun ar-parentize-ascii-in-page-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of ASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'page 'ar-th-parentize arg))

(defun ar-quote-ascii-in-page-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of ASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'page 'ar-th-quote arg))

(defun ar-separate-ascii-in-page-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of ASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'page 'ar-th-separate arg))

(defun ar-show-ascii-in-page-atpt (&optional arg) 
  "Employ actions of SHOW at things class of ASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'page 'ar-th-show arg))

(defun ar-singlequote-ascii-in-page-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of ASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'page 'ar-th-singlequote arg))

(defun ar-slash-ascii-in-page-atpt (&optional arg) 
  "Employ actions of SLASH at things class of ASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'page 'ar-th-slash arg))

(defun ar-star-ascii-in-page-atpt (&optional arg) 
  "Employ actions of STAR at things class of ASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'page 'ar-th-star arg))

(defun ar-slashparen-ascii-in-page-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of ASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'page 'ar-th-slashparen arg))

(defun ar-sort-ascii-in-page-atpt (&optional arg) 
  "Employ actions of SORT at things class of ASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'page 'ar-th-sort arg))

(defun ar-trim-ascii-in-page-atpt (&optional arg) 
  "Employ actions of TRIM at things class of ASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'page 'ar-th-trim arg))

(defun ar-trim-left-ascii-in-page-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of ASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'page 'ar-th-trim-left arg))

(defun ar-trim-right-ascii-in-page-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of ASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'page 'ar-th-trim-right arg))

(defun ar-underscore-ascii-in-page-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of ASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'page 'ar-th-underscore arg))

(defun ar-whitespace-ascii-in-page-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of ASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'page 'ar-th-whitespace arg))

(defun ar-ascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of  at things class of ASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'paragraph 'ar-th arg))

(defun ar-greaterangle-ascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of ASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'paragraph 'ar-th-greaterangle arg))

(defun ar-lesserangle-ascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of ASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'paragraph 'ar-th-lesserangle arg))

(defun ar-backslash-ascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of ASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'paragraph 'ar-th-backslash arg))

(defun ar-colon-ascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of COLON at things class of ASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'paragraph 'ar-th-colon arg))

(defun ar-beg-ascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of BEG at things class of ASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'paragraph 'ar-th-beg arg))

(defun ar-blok-ascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of BLOK at things class of ASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'paragraph 'ar-th-blok arg))

(defun ar-bounds-ascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of ASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'paragraph 'ar-th-bounds arg))

(defun ar-brace-ascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of BRACE at things class of ASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'paragraph 'ar-th-brace arg))

(defun ar-bracket-ascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of ASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'paragraph 'ar-th-bracket arg))

(defun ar-commatize-ascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of ASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'paragraph 'ar-th-commatize arg))

(defun ar-comment-ascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of ASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'paragraph 'ar-th-comment arg))

(defun ar-dollar-ascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of ASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'paragraph 'ar-th-dollar arg))

(defun ar-doublebackslash-ascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of ASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'paragraph 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-ascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of ASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'paragraph 'ar-th-doublebacktick arg))

(defun ar-doublequote-ascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of ASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'paragraph 'ar-th-doublequote arg))

(defun ar-doubleslash-ascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of ASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'paragraph 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-ascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of ASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'paragraph 'ar-th-doublebackslashparen arg))

(defun ar-end-ascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of END at things class of ASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'paragraph 'ar-th-end arg))

(defun ar-escape-ascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of ASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'paragraph 'ar-th-escape arg))

(defun ar-hide-ascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of HIDE at things class of ASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'paragraph 'ar-th-hide arg))

(defun ar-hide-show-ascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of ASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'paragraph 'ar-th-hide-show arg))

(defun ar-hyphen-ascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of ASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'paragraph 'ar-th-hyphen arg))

(defun ar-kill-ascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of KILL at things class of ASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'paragraph 'ar-th-kill arg))

(defun ar-leftrightsinglequote-ascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of ASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'paragraph 'ar-th-leftrightsinglequote arg))

(defun ar-length-ascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of ASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'paragraph 'ar-th-length arg))

(defun ar-parentize-ascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of ASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'paragraph 'ar-th-parentize arg))

(defun ar-quote-ascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of ASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'paragraph 'ar-th-quote arg))

(defun ar-separate-ascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of ASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'paragraph 'ar-th-separate arg))

(defun ar-show-ascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of SHOW at things class of ASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'paragraph 'ar-th-show arg))

(defun ar-singlequote-ascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of ASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'paragraph 'ar-th-singlequote arg))

(defun ar-slash-ascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of SLASH at things class of ASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'paragraph 'ar-th-slash arg))

(defun ar-star-ascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of STAR at things class of ASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'paragraph 'ar-th-star arg))

(defun ar-slashparen-ascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of ASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'paragraph 'ar-th-slashparen arg))

(defun ar-sort-ascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of SORT at things class of ASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'paragraph 'ar-th-sort arg))

(defun ar-trim-ascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of TRIM at things class of ASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'paragraph 'ar-th-trim arg))

(defun ar-trim-left-ascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of ASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'paragraph 'ar-th-trim-left arg))

(defun ar-trim-right-ascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of ASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'paragraph 'ar-th-trim-right arg))

(defun ar-underscore-ascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of ASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'paragraph 'ar-th-underscore arg))

(defun ar-whitespace-ascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of ASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'paragraph 'ar-th-whitespace arg))

(defun ar-ascii-in-region-atpt (&optional arg) 
  "Employ actions of  at things class of ASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'region 'ar-th arg))

(defun ar-greaterangle-ascii-in-region-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of ASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'region 'ar-th-greaterangle arg))

(defun ar-lesserangle-ascii-in-region-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of ASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'region 'ar-th-lesserangle arg))

(defun ar-backslash-ascii-in-region-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of ASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'region 'ar-th-backslash arg))

(defun ar-colon-ascii-in-region-atpt (&optional arg) 
  "Employ actions of COLON at things class of ASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'region 'ar-th-colon arg))

(defun ar-beg-ascii-in-region-atpt (&optional arg) 
  "Employ actions of BEG at things class of ASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'region 'ar-th-beg arg))

(defun ar-blok-ascii-in-region-atpt (&optional arg) 
  "Employ actions of BLOK at things class of ASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'region 'ar-th-blok arg))

(defun ar-bounds-ascii-in-region-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of ASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'region 'ar-th-bounds arg))

(defun ar-brace-ascii-in-region-atpt (&optional arg) 
  "Employ actions of BRACE at things class of ASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'region 'ar-th-brace arg))

(defun ar-bracket-ascii-in-region-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of ASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'region 'ar-th-bracket arg))

(defun ar-commatize-ascii-in-region-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of ASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'region 'ar-th-commatize arg))

(defun ar-comment-ascii-in-region-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of ASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'region 'ar-th-comment arg))

(defun ar-dollar-ascii-in-region-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of ASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'region 'ar-th-dollar arg))

(defun ar-doublebackslash-ascii-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of ASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'region 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-ascii-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of ASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'region 'ar-th-doublebacktick arg))

(defun ar-doublequote-ascii-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of ASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'region 'ar-th-doublequote arg))

(defun ar-doubleslash-ascii-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of ASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'region 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-ascii-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of ASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'region 'ar-th-doublebackslashparen arg))

(defun ar-end-ascii-in-region-atpt (&optional arg) 
  "Employ actions of END at things class of ASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'region 'ar-th-end arg))

(defun ar-escape-ascii-in-region-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of ASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'region 'ar-th-escape arg))

(defun ar-hide-ascii-in-region-atpt (&optional arg) 
  "Employ actions of HIDE at things class of ASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'region 'ar-th-hide arg))

(defun ar-hide-show-ascii-in-region-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of ASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'region 'ar-th-hide-show arg))

(defun ar-hyphen-ascii-in-region-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of ASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'region 'ar-th-hyphen arg))

(defun ar-kill-ascii-in-region-atpt (&optional arg) 
  "Employ actions of KILL at things class of ASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'region 'ar-th-kill arg))

(defun ar-leftrightsinglequote-ascii-in-region-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of ASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'region 'ar-th-leftrightsinglequote arg))

(defun ar-length-ascii-in-region-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of ASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'region 'ar-th-length arg))

(defun ar-parentize-ascii-in-region-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of ASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'region 'ar-th-parentize arg))

(defun ar-quote-ascii-in-region-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of ASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'region 'ar-th-quote arg))

(defun ar-separate-ascii-in-region-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of ASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'region 'ar-th-separate arg))

(defun ar-show-ascii-in-region-atpt (&optional arg) 
  "Employ actions of SHOW at things class of ASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'region 'ar-th-show arg))

(defun ar-singlequote-ascii-in-region-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of ASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'region 'ar-th-singlequote arg))

(defun ar-slash-ascii-in-region-atpt (&optional arg) 
  "Employ actions of SLASH at things class of ASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'region 'ar-th-slash arg))

(defun ar-star-ascii-in-region-atpt (&optional arg) 
  "Employ actions of STAR at things class of ASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'region 'ar-th-star arg))

(defun ar-slashparen-ascii-in-region-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of ASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'region 'ar-th-slashparen arg))

(defun ar-sort-ascii-in-region-atpt (&optional arg) 
  "Employ actions of SORT at things class of ASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'region 'ar-th-sort arg))

(defun ar-trim-ascii-in-region-atpt (&optional arg) 
  "Employ actions of TRIM at things class of ASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'region 'ar-th-trim arg))

(defun ar-trim-left-ascii-in-region-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of ASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'region 'ar-th-trim-left arg))

(defun ar-trim-right-ascii-in-region-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of ASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'region 'ar-th-trim-right arg))

(defun ar-underscore-ascii-in-region-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of ASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'region 'ar-th-underscore arg))

(defun ar-whitespace-ascii-in-region-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of ASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'region 'ar-th-whitespace arg))

(defun ar-ascii-in-sentence-atpt (&optional arg) 
  "Employ actions of  at things class of ASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sentence 'ar-th arg))

(defun ar-greaterangle-ascii-in-sentence-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of ASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sentence 'ar-th-greaterangle arg))

(defun ar-lesserangle-ascii-in-sentence-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of ASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sentence 'ar-th-lesserangle arg))

(defun ar-backslash-ascii-in-sentence-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of ASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sentence 'ar-th-backslash arg))

(defun ar-colon-ascii-in-sentence-atpt (&optional arg) 
  "Employ actions of COLON at things class of ASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sentence 'ar-th-colon arg))

(defun ar-beg-ascii-in-sentence-atpt (&optional arg) 
  "Employ actions of BEG at things class of ASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sentence 'ar-th-beg arg))

(defun ar-blok-ascii-in-sentence-atpt (&optional arg) 
  "Employ actions of BLOK at things class of ASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sentence 'ar-th-blok arg))

(defun ar-bounds-ascii-in-sentence-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of ASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sentence 'ar-th-bounds arg))

(defun ar-brace-ascii-in-sentence-atpt (&optional arg) 
  "Employ actions of BRACE at things class of ASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sentence 'ar-th-brace arg))

(defun ar-bracket-ascii-in-sentence-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of ASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sentence 'ar-th-bracket arg))

(defun ar-commatize-ascii-in-sentence-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of ASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sentence 'ar-th-commatize arg))

(defun ar-comment-ascii-in-sentence-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of ASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sentence 'ar-th-comment arg))

(defun ar-dollar-ascii-in-sentence-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of ASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sentence 'ar-th-dollar arg))

(defun ar-doublebackslash-ascii-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of ASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sentence 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-ascii-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of ASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sentence 'ar-th-doublebacktick arg))

(defun ar-doublequote-ascii-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of ASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sentence 'ar-th-doublequote arg))

(defun ar-doubleslash-ascii-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of ASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sentence 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-ascii-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of ASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sentence 'ar-th-doublebackslashparen arg))

(defun ar-end-ascii-in-sentence-atpt (&optional arg) 
  "Employ actions of END at things class of ASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sentence 'ar-th-end arg))

(defun ar-escape-ascii-in-sentence-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of ASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sentence 'ar-th-escape arg))

(defun ar-hide-ascii-in-sentence-atpt (&optional arg) 
  "Employ actions of HIDE at things class of ASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sentence 'ar-th-hide arg))

(defun ar-hide-show-ascii-in-sentence-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of ASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sentence 'ar-th-hide-show arg))

(defun ar-hyphen-ascii-in-sentence-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of ASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sentence 'ar-th-hyphen arg))

(defun ar-kill-ascii-in-sentence-atpt (&optional arg) 
  "Employ actions of KILL at things class of ASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sentence 'ar-th-kill arg))

(defun ar-leftrightsinglequote-ascii-in-sentence-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of ASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sentence 'ar-th-leftrightsinglequote arg))

(defun ar-length-ascii-in-sentence-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of ASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sentence 'ar-th-length arg))

(defun ar-parentize-ascii-in-sentence-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of ASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sentence 'ar-th-parentize arg))

(defun ar-quote-ascii-in-sentence-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of ASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sentence 'ar-th-quote arg))

(defun ar-separate-ascii-in-sentence-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of ASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sentence 'ar-th-separate arg))

(defun ar-show-ascii-in-sentence-atpt (&optional arg) 
  "Employ actions of SHOW at things class of ASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sentence 'ar-th-show arg))

(defun ar-singlequote-ascii-in-sentence-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of ASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sentence 'ar-th-singlequote arg))

(defun ar-slash-ascii-in-sentence-atpt (&optional arg) 
  "Employ actions of SLASH at things class of ASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sentence 'ar-th-slash arg))

(defun ar-star-ascii-in-sentence-atpt (&optional arg) 
  "Employ actions of STAR at things class of ASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sentence 'ar-th-star arg))

(defun ar-slashparen-ascii-in-sentence-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of ASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sentence 'ar-th-slashparen arg))

(defun ar-sort-ascii-in-sentence-atpt (&optional arg) 
  "Employ actions of SORT at things class of ASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sentence 'ar-th-sort arg))

(defun ar-trim-ascii-in-sentence-atpt (&optional arg) 
  "Employ actions of TRIM at things class of ASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sentence 'ar-th-trim arg))

(defun ar-trim-left-ascii-in-sentence-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of ASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sentence 'ar-th-trim-left arg))

(defun ar-trim-right-ascii-in-sentence-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of ASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sentence 'ar-th-trim-right arg))

(defun ar-underscore-ascii-in-sentence-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of ASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sentence 'ar-th-underscore arg))

(defun ar-whitespace-ascii-in-sentence-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of ASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sentence 'ar-th-whitespace arg))

(defun ar-ascii-in-sexp-atpt (&optional arg) 
  "Employ actions of  at things class of ASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sexp 'ar-th arg))

(defun ar-greaterangle-ascii-in-sexp-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of ASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sexp 'ar-th-greaterangle arg))

(defun ar-lesserangle-ascii-in-sexp-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of ASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sexp 'ar-th-lesserangle arg))

(defun ar-backslash-ascii-in-sexp-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of ASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sexp 'ar-th-backslash arg))

(defun ar-colon-ascii-in-sexp-atpt (&optional arg) 
  "Employ actions of COLON at things class of ASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sexp 'ar-th-colon arg))

(defun ar-beg-ascii-in-sexp-atpt (&optional arg) 
  "Employ actions of BEG at things class of ASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sexp 'ar-th-beg arg))

(defun ar-blok-ascii-in-sexp-atpt (&optional arg) 
  "Employ actions of BLOK at things class of ASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sexp 'ar-th-blok arg))

(defun ar-bounds-ascii-in-sexp-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of ASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sexp 'ar-th-bounds arg))

(defun ar-brace-ascii-in-sexp-atpt (&optional arg) 
  "Employ actions of BRACE at things class of ASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sexp 'ar-th-brace arg))

(defun ar-bracket-ascii-in-sexp-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of ASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sexp 'ar-th-bracket arg))

(defun ar-commatize-ascii-in-sexp-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of ASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sexp 'ar-th-commatize arg))

(defun ar-comment-ascii-in-sexp-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of ASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sexp 'ar-th-comment arg))

(defun ar-dollar-ascii-in-sexp-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of ASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sexp 'ar-th-dollar arg))

(defun ar-doublebackslash-ascii-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of ASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sexp 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-ascii-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of ASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sexp 'ar-th-doublebacktick arg))

(defun ar-doublequote-ascii-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of ASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sexp 'ar-th-doublequote arg))

(defun ar-doubleslash-ascii-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of ASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sexp 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-ascii-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of ASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sexp 'ar-th-doublebackslashparen arg))

(defun ar-end-ascii-in-sexp-atpt (&optional arg) 
  "Employ actions of END at things class of ASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sexp 'ar-th-end arg))

(defun ar-escape-ascii-in-sexp-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of ASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sexp 'ar-th-escape arg))

(defun ar-hide-ascii-in-sexp-atpt (&optional arg) 
  "Employ actions of HIDE at things class of ASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sexp 'ar-th-hide arg))

(defun ar-hide-show-ascii-in-sexp-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of ASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sexp 'ar-th-hide-show arg))

(defun ar-hyphen-ascii-in-sexp-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of ASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sexp 'ar-th-hyphen arg))

(defun ar-kill-ascii-in-sexp-atpt (&optional arg) 
  "Employ actions of KILL at things class of ASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sexp 'ar-th-kill arg))

(defun ar-leftrightsinglequote-ascii-in-sexp-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of ASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sexp 'ar-th-leftrightsinglequote arg))

(defun ar-length-ascii-in-sexp-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of ASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sexp 'ar-th-length arg))

(defun ar-parentize-ascii-in-sexp-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of ASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sexp 'ar-th-parentize arg))

(defun ar-quote-ascii-in-sexp-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of ASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sexp 'ar-th-quote arg))

(defun ar-separate-ascii-in-sexp-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of ASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sexp 'ar-th-separate arg))

(defun ar-show-ascii-in-sexp-atpt (&optional arg) 
  "Employ actions of SHOW at things class of ASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sexp 'ar-th-show arg))

(defun ar-singlequote-ascii-in-sexp-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of ASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sexp 'ar-th-singlequote arg))

(defun ar-slash-ascii-in-sexp-atpt (&optional arg) 
  "Employ actions of SLASH at things class of ASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sexp 'ar-th-slash arg))

(defun ar-star-ascii-in-sexp-atpt (&optional arg) 
  "Employ actions of STAR at things class of ASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sexp 'ar-th-star arg))

(defun ar-slashparen-ascii-in-sexp-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of ASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sexp 'ar-th-slashparen arg))

(defun ar-sort-ascii-in-sexp-atpt (&optional arg) 
  "Employ actions of SORT at things class of ASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sexp 'ar-th-sort arg))

(defun ar-trim-ascii-in-sexp-atpt (&optional arg) 
  "Employ actions of TRIM at things class of ASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sexp 'ar-th-trim arg))

(defun ar-trim-left-ascii-in-sexp-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of ASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sexp 'ar-th-trim-left arg))

(defun ar-trim-right-ascii-in-sexp-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of ASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sexp 'ar-th-trim-right arg))

(defun ar-underscore-ascii-in-sexp-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of ASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sexp 'ar-th-underscore arg))

(defun ar-whitespace-ascii-in-sexp-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of ASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'sexp 'ar-th-whitespace arg))

(defun ar-ascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of  at things class of ASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'shstruct 'ar-th arg))

(defun ar-greaterangle-ascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of ASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'shstruct 'ar-th-greaterangle arg))

(defun ar-lesserangle-ascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of ASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'shstruct 'ar-th-lesserangle arg))

(defun ar-backslash-ascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of ASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'shstruct 'ar-th-backslash arg))

(defun ar-colon-ascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of COLON at things class of ASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'shstruct 'ar-th-colon arg))

(defun ar-beg-ascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of BEG at things class of ASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'shstruct 'ar-th-beg arg))

(defun ar-blok-ascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of BLOK at things class of ASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'shstruct 'ar-th-blok arg))

(defun ar-bounds-ascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of ASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'shstruct 'ar-th-bounds arg))

(defun ar-brace-ascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of BRACE at things class of ASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'shstruct 'ar-th-brace arg))

(defun ar-bracket-ascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of ASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'shstruct 'ar-th-bracket arg))

(defun ar-commatize-ascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of ASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'shstruct 'ar-th-commatize arg))

(defun ar-comment-ascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of ASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'shstruct 'ar-th-comment arg))

(defun ar-dollar-ascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of ASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'shstruct 'ar-th-dollar arg))

(defun ar-doublebackslash-ascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of ASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'shstruct 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-ascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of ASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'shstruct 'ar-th-doublebacktick arg))

(defun ar-doublequote-ascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of ASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'shstruct 'ar-th-doublequote arg))

(defun ar-doubleslash-ascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of ASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'shstruct 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-ascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of ASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'shstruct 'ar-th-doublebackslashparen arg))

(defun ar-end-ascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of END at things class of ASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'shstruct 'ar-th-end arg))

(defun ar-escape-ascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of ASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'shstruct 'ar-th-escape arg))

(defun ar-hide-ascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of HIDE at things class of ASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'shstruct 'ar-th-hide arg))

(defun ar-hide-show-ascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of ASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'shstruct 'ar-th-hide-show arg))

(defun ar-hyphen-ascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of ASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'shstruct 'ar-th-hyphen arg))

(defun ar-kill-ascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of KILL at things class of ASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'shstruct 'ar-th-kill arg))

(defun ar-leftrightsinglequote-ascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of ASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'shstruct 'ar-th-leftrightsinglequote arg))

(defun ar-length-ascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of ASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'shstruct 'ar-th-length arg))

(defun ar-parentize-ascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of ASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'shstruct 'ar-th-parentize arg))

(defun ar-quote-ascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of ASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'shstruct 'ar-th-quote arg))

(defun ar-separate-ascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of ASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'shstruct 'ar-th-separate arg))

(defun ar-show-ascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of SHOW at things class of ASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'shstruct 'ar-th-show arg))

(defun ar-singlequote-ascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of ASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'shstruct 'ar-th-singlequote arg))

(defun ar-slash-ascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of SLASH at things class of ASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'shstruct 'ar-th-slash arg))

(defun ar-star-ascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of STAR at things class of ASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'shstruct 'ar-th-star arg))

(defun ar-slashparen-ascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of ASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'shstruct 'ar-th-slashparen arg))

(defun ar-sort-ascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of SORT at things class of ASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'shstruct 'ar-th-sort arg))

(defun ar-trim-ascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of TRIM at things class of ASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'shstruct 'ar-th-trim arg))

(defun ar-trim-left-ascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of ASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'shstruct 'ar-th-trim-left arg))

(defun ar-trim-right-ascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of ASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'shstruct 'ar-th-trim-right arg))

(defun ar-underscore-ascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of ASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'shstruct 'ar-th-underscore arg))

(defun ar-whitespace-ascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of ASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'ascii 'shstruct 'ar-th-whitespace arg))

(defun ar-blank-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of  at things class of BLANK residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'greateranglednested 'ar-th arg))

(defun ar-greaterangle-blank-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of BLANK residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'greateranglednested 'ar-th-greaterangle arg))

(defun ar-lesserangle-blank-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of BLANK residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'greateranglednested 'ar-th-lesserangle arg))

(defun ar-backslash-blank-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of BLANK residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'greateranglednested 'ar-th-backslash arg))

(defun ar-colon-blank-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of COLON at things class of BLANK residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'greateranglednested 'ar-th-colon arg))

(defun ar-beg-blank-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BEG at things class of BLANK residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'greateranglednested 'ar-th-beg arg))

(defun ar-blok-blank-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BLOK at things class of BLANK residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'greateranglednested 'ar-th-blok arg))

(defun ar-bounds-blank-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of BLANK residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'greateranglednested 'ar-th-bounds arg))

(defun ar-brace-blank-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BRACE at things class of BLANK residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'greateranglednested 'ar-th-brace arg))

(defun ar-bracket-blank-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of BLANK residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'greateranglednested 'ar-th-bracket arg))

(defun ar-commatize-blank-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of BLANK residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'greateranglednested 'ar-th-commatize arg))

(defun ar-comment-blank-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of BLANK residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'greateranglednested 'ar-th-comment arg))

(defun ar-dollar-blank-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of BLANK residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'greateranglednested 'ar-th-dollar arg))

(defun ar-doublebackslash-blank-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of BLANK residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'greateranglednested 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-blank-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of BLANK residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'greateranglednested 'ar-th-doublebacktick arg))

(defun ar-doublequote-blank-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of BLANK residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'greateranglednested 'ar-th-doublequote arg))

(defun ar-doubleslash-blank-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of BLANK residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'greateranglednested 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-blank-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of BLANK residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'greateranglednested 'ar-th-doublebackslashparen arg))

(defun ar-end-blank-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of END at things class of BLANK residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'greateranglednested 'ar-th-end arg))

(defun ar-escape-blank-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of BLANK residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'greateranglednested 'ar-th-escape arg))

(defun ar-hide-blank-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of HIDE at things class of BLANK residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'greateranglednested 'ar-th-hide arg))

(defun ar-hide-show-blank-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of BLANK residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'greateranglednested 'ar-th-hide-show arg))

(defun ar-hyphen-blank-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of BLANK residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'greateranglednested 'ar-th-hyphen arg))

(defun ar-kill-blank-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of KILL at things class of BLANK residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'greateranglednested 'ar-th-kill arg))

(defun ar-leftrightsinglequote-blank-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of BLANK residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'greateranglednested 'ar-th-leftrightsinglequote arg))

(defun ar-length-blank-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of BLANK residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'greateranglednested 'ar-th-length arg))

(defun ar-parentize-blank-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of BLANK residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'greateranglednested 'ar-th-parentize arg))

(defun ar-quote-blank-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of BLANK residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'greateranglednested 'ar-th-quote arg))

(defun ar-separate-blank-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of BLANK residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'greateranglednested 'ar-th-separate arg))

(defun ar-show-blank-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SHOW at things class of BLANK residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'greateranglednested 'ar-th-show arg))

(defun ar-singlequote-blank-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of BLANK residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'greateranglednested 'ar-th-singlequote arg))

(defun ar-slash-blank-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SLASH at things class of BLANK residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'greateranglednested 'ar-th-slash arg))

(defun ar-star-blank-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of STAR at things class of BLANK residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'greateranglednested 'ar-th-star arg))

(defun ar-slashparen-blank-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of BLANK residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'greateranglednested 'ar-th-slashparen arg))

(defun ar-sort-blank-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SORT at things class of BLANK residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'greateranglednested 'ar-th-sort arg))

(defun ar-trim-blank-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of TRIM at things class of BLANK residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'greateranglednested 'ar-th-trim arg))

(defun ar-trim-left-blank-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of BLANK residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'greateranglednested 'ar-th-trim-left arg))

(defun ar-trim-right-blank-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of BLANK residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'greateranglednested 'ar-th-trim-right arg))

(defun ar-underscore-blank-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of BLANK residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'greateranglednested 'ar-th-underscore arg))

(defun ar-whitespace-blank-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of BLANK residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'greateranglednested 'ar-th-whitespace arg))

(defun ar-blank-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of  at things class of BLANK residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'lesseranglednested 'ar-th arg))

(defun ar-greaterangle-blank-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of BLANK residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'lesseranglednested 'ar-th-greaterangle arg))

(defun ar-lesserangle-blank-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of BLANK residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'lesseranglednested 'ar-th-lesserangle arg))

(defun ar-backslash-blank-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of BLANK residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'lesseranglednested 'ar-th-backslash arg))

(defun ar-colon-blank-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of COLON at things class of BLANK residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'lesseranglednested 'ar-th-colon arg))

(defun ar-beg-blank-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BEG at things class of BLANK residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'lesseranglednested 'ar-th-beg arg))

(defun ar-blok-blank-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BLOK at things class of BLANK residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'lesseranglednested 'ar-th-blok arg))

(defun ar-bounds-blank-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of BLANK residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'lesseranglednested 'ar-th-bounds arg))

(defun ar-brace-blank-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BRACE at things class of BLANK residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'lesseranglednested 'ar-th-brace arg))

(defun ar-bracket-blank-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of BLANK residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'lesseranglednested 'ar-th-bracket arg))

(defun ar-commatize-blank-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of BLANK residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'lesseranglednested 'ar-th-commatize arg))

(defun ar-comment-blank-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of BLANK residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'lesseranglednested 'ar-th-comment arg))

(defun ar-dollar-blank-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of BLANK residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'lesseranglednested 'ar-th-dollar arg))

(defun ar-doublebackslash-blank-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of BLANK residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'lesseranglednested 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-blank-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of BLANK residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'lesseranglednested 'ar-th-doublebacktick arg))

(defun ar-doublequote-blank-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of BLANK residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'lesseranglednested 'ar-th-doublequote arg))

(defun ar-doubleslash-blank-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of BLANK residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'lesseranglednested 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-blank-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of BLANK residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'lesseranglednested 'ar-th-doublebackslashparen arg))

(defun ar-end-blank-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of END at things class of BLANK residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'lesseranglednested 'ar-th-end arg))

(defun ar-escape-blank-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of BLANK residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'lesseranglednested 'ar-th-escape arg))

(defun ar-hide-blank-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of HIDE at things class of BLANK residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'lesseranglednested 'ar-th-hide arg))

(defun ar-hide-show-blank-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of BLANK residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'lesseranglednested 'ar-th-hide-show arg))

(defun ar-hyphen-blank-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of BLANK residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'lesseranglednested 'ar-th-hyphen arg))

(defun ar-kill-blank-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of KILL at things class of BLANK residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'lesseranglednested 'ar-th-kill arg))

(defun ar-leftrightsinglequote-blank-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of BLANK residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'lesseranglednested 'ar-th-leftrightsinglequote arg))

(defun ar-length-blank-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of BLANK residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'lesseranglednested 'ar-th-length arg))

(defun ar-parentize-blank-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of BLANK residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'lesseranglednested 'ar-th-parentize arg))

(defun ar-quote-blank-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of BLANK residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'lesseranglednested 'ar-th-quote arg))

(defun ar-separate-blank-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of BLANK residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'lesseranglednested 'ar-th-separate arg))

(defun ar-show-blank-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SHOW at things class of BLANK residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'lesseranglednested 'ar-th-show arg))

(defun ar-singlequote-blank-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of BLANK residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'lesseranglednested 'ar-th-singlequote arg))

(defun ar-slash-blank-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SLASH at things class of BLANK residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'lesseranglednested 'ar-th-slash arg))

(defun ar-star-blank-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of STAR at things class of BLANK residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'lesseranglednested 'ar-th-star arg))

(defun ar-slashparen-blank-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of BLANK residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'lesseranglednested 'ar-th-slashparen arg))

(defun ar-sort-blank-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SORT at things class of BLANK residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'lesseranglednested 'ar-th-sort arg))

(defun ar-trim-blank-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of TRIM at things class of BLANK residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'lesseranglednested 'ar-th-trim arg))

(defun ar-trim-left-blank-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of BLANK residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'lesseranglednested 'ar-th-trim-left arg))

(defun ar-trim-right-blank-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of BLANK residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'lesseranglednested 'ar-th-trim-right arg))

(defun ar-underscore-blank-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of BLANK residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'lesseranglednested 'ar-th-underscore arg))

(defun ar-whitespace-blank-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of BLANK residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'lesseranglednested 'ar-th-whitespace arg))

(defun ar-blank-in-buffer-atpt (&optional arg) 
  "Employ actions of  at things class of BLANK residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'buffer 'ar-th arg))

(defun ar-greaterangle-blank-in-buffer-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of BLANK residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'buffer 'ar-th-greaterangle arg))

(defun ar-lesserangle-blank-in-buffer-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of BLANK residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'buffer 'ar-th-lesserangle arg))

(defun ar-backslash-blank-in-buffer-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of BLANK residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'buffer 'ar-th-backslash arg))

(defun ar-colon-blank-in-buffer-atpt (&optional arg) 
  "Employ actions of COLON at things class of BLANK residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'buffer 'ar-th-colon arg))

(defun ar-beg-blank-in-buffer-atpt (&optional arg) 
  "Employ actions of BEG at things class of BLANK residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'buffer 'ar-th-beg arg))

(defun ar-blok-blank-in-buffer-atpt (&optional arg) 
  "Employ actions of BLOK at things class of BLANK residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'buffer 'ar-th-blok arg))

(defun ar-bounds-blank-in-buffer-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of BLANK residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'buffer 'ar-th-bounds arg))

(defun ar-brace-blank-in-buffer-atpt (&optional arg) 
  "Employ actions of BRACE at things class of BLANK residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'buffer 'ar-th-brace arg))

(defun ar-bracket-blank-in-buffer-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of BLANK residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'buffer 'ar-th-bracket arg))

(defun ar-commatize-blank-in-buffer-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of BLANK residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'buffer 'ar-th-commatize arg))

(defun ar-comment-blank-in-buffer-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of BLANK residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'buffer 'ar-th-comment arg))

(defun ar-dollar-blank-in-buffer-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of BLANK residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'buffer 'ar-th-dollar arg))

(defun ar-doublebackslash-blank-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of BLANK residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'buffer 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-blank-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of BLANK residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'buffer 'ar-th-doublebacktick arg))

(defun ar-doublequote-blank-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of BLANK residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'buffer 'ar-th-doublequote arg))

(defun ar-doubleslash-blank-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of BLANK residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'buffer 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-blank-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of BLANK residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'buffer 'ar-th-doublebackslashparen arg))

(defun ar-end-blank-in-buffer-atpt (&optional arg) 
  "Employ actions of END at things class of BLANK residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'buffer 'ar-th-end arg))

(defun ar-escape-blank-in-buffer-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of BLANK residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'buffer 'ar-th-escape arg))

(defun ar-hide-blank-in-buffer-atpt (&optional arg) 
  "Employ actions of HIDE at things class of BLANK residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'buffer 'ar-th-hide arg))

(defun ar-hide-show-blank-in-buffer-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of BLANK residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'buffer 'ar-th-hide-show arg))

(defun ar-hyphen-blank-in-buffer-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of BLANK residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'buffer 'ar-th-hyphen arg))

(defun ar-kill-blank-in-buffer-atpt (&optional arg) 
  "Employ actions of KILL at things class of BLANK residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'buffer 'ar-th-kill arg))

(defun ar-leftrightsinglequote-blank-in-buffer-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of BLANK residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'buffer 'ar-th-leftrightsinglequote arg))

(defun ar-length-blank-in-buffer-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of BLANK residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'buffer 'ar-th-length arg))

(defun ar-parentize-blank-in-buffer-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of BLANK residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'buffer 'ar-th-parentize arg))

(defun ar-quote-blank-in-buffer-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of BLANK residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'buffer 'ar-th-quote arg))

(defun ar-separate-blank-in-buffer-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of BLANK residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'buffer 'ar-th-separate arg))

(defun ar-show-blank-in-buffer-atpt (&optional arg) 
  "Employ actions of SHOW at things class of BLANK residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'buffer 'ar-th-show arg))

(defun ar-singlequote-blank-in-buffer-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of BLANK residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'buffer 'ar-th-singlequote arg))

(defun ar-slash-blank-in-buffer-atpt (&optional arg) 
  "Employ actions of SLASH at things class of BLANK residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'buffer 'ar-th-slash arg))

(defun ar-star-blank-in-buffer-atpt (&optional arg) 
  "Employ actions of STAR at things class of BLANK residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'buffer 'ar-th-star arg))

(defun ar-slashparen-blank-in-buffer-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of BLANK residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'buffer 'ar-th-slashparen arg))

(defun ar-sort-blank-in-buffer-atpt (&optional arg) 
  "Employ actions of SORT at things class of BLANK residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'buffer 'ar-th-sort arg))

(defun ar-trim-blank-in-buffer-atpt (&optional arg) 
  "Employ actions of TRIM at things class of BLANK residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'buffer 'ar-th-trim arg))

(defun ar-trim-left-blank-in-buffer-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of BLANK residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'buffer 'ar-th-trim-left arg))

(defun ar-trim-right-blank-in-buffer-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of BLANK residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'buffer 'ar-th-trim-right arg))

(defun ar-underscore-blank-in-buffer-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of BLANK residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'buffer 'ar-th-underscore arg))

(defun ar-whitespace-blank-in-buffer-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of BLANK residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'buffer 'ar-th-whitespace arg))

(defun ar-blank-in-comment-atpt (&optional arg) 
  "Employ actions of  at things class of BLANK residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'comment 'ar-th arg))

(defun ar-greaterangle-blank-in-comment-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of BLANK residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'comment 'ar-th-greaterangle arg))

(defun ar-lesserangle-blank-in-comment-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of BLANK residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'comment 'ar-th-lesserangle arg))

(defun ar-backslash-blank-in-comment-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of BLANK residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'comment 'ar-th-backslash arg))

(defun ar-colon-blank-in-comment-atpt (&optional arg) 
  "Employ actions of COLON at things class of BLANK residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'comment 'ar-th-colon arg))

(defun ar-beg-blank-in-comment-atpt (&optional arg) 
  "Employ actions of BEG at things class of BLANK residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'comment 'ar-th-beg arg))

(defun ar-blok-blank-in-comment-atpt (&optional arg) 
  "Employ actions of BLOK at things class of BLANK residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'comment 'ar-th-blok arg))

(defun ar-bounds-blank-in-comment-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of BLANK residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'comment 'ar-th-bounds arg))

(defun ar-brace-blank-in-comment-atpt (&optional arg) 
  "Employ actions of BRACE at things class of BLANK residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'comment 'ar-th-brace arg))

(defun ar-bracket-blank-in-comment-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of BLANK residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'comment 'ar-th-bracket arg))

(defun ar-commatize-blank-in-comment-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of BLANK residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'comment 'ar-th-commatize arg))

(defun ar-comment-blank-in-comment-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of BLANK residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'comment 'ar-th-comment arg))

(defun ar-dollar-blank-in-comment-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of BLANK residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'comment 'ar-th-dollar arg))

(defun ar-doublebackslash-blank-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of BLANK residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'comment 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-blank-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of BLANK residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'comment 'ar-th-doublebacktick arg))

(defun ar-doublequote-blank-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of BLANK residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'comment 'ar-th-doublequote arg))

(defun ar-doubleslash-blank-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of BLANK residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'comment 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-blank-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of BLANK residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'comment 'ar-th-doublebackslashparen arg))

(defun ar-end-blank-in-comment-atpt (&optional arg) 
  "Employ actions of END at things class of BLANK residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'comment 'ar-th-end arg))

(defun ar-escape-blank-in-comment-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of BLANK residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'comment 'ar-th-escape arg))

(defun ar-hide-blank-in-comment-atpt (&optional arg) 
  "Employ actions of HIDE at things class of BLANK residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'comment 'ar-th-hide arg))

(defun ar-hide-show-blank-in-comment-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of BLANK residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'comment 'ar-th-hide-show arg))

(defun ar-hyphen-blank-in-comment-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of BLANK residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'comment 'ar-th-hyphen arg))

(defun ar-kill-blank-in-comment-atpt (&optional arg) 
  "Employ actions of KILL at things class of BLANK residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'comment 'ar-th-kill arg))

(defun ar-leftrightsinglequote-blank-in-comment-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of BLANK residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'comment 'ar-th-leftrightsinglequote arg))

(defun ar-length-blank-in-comment-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of BLANK residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'comment 'ar-th-length arg))

(defun ar-parentize-blank-in-comment-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of BLANK residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'comment 'ar-th-parentize arg))

(defun ar-quote-blank-in-comment-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of BLANK residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'comment 'ar-th-quote arg))

(defun ar-separate-blank-in-comment-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of BLANK residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'comment 'ar-th-separate arg))

(defun ar-show-blank-in-comment-atpt (&optional arg) 
  "Employ actions of SHOW at things class of BLANK residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'comment 'ar-th-show arg))

(defun ar-singlequote-blank-in-comment-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of BLANK residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'comment 'ar-th-singlequote arg))

(defun ar-slash-blank-in-comment-atpt (&optional arg) 
  "Employ actions of SLASH at things class of BLANK residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'comment 'ar-th-slash arg))

(defun ar-star-blank-in-comment-atpt (&optional arg) 
  "Employ actions of STAR at things class of BLANK residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'comment 'ar-th-star arg))

(defun ar-slashparen-blank-in-comment-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of BLANK residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'comment 'ar-th-slashparen arg))

(defun ar-sort-blank-in-comment-atpt (&optional arg) 
  "Employ actions of SORT at things class of BLANK residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'comment 'ar-th-sort arg))

(defun ar-trim-blank-in-comment-atpt (&optional arg) 
  "Employ actions of TRIM at things class of BLANK residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'comment 'ar-th-trim arg))

(defun ar-trim-left-blank-in-comment-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of BLANK residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'comment 'ar-th-trim-left arg))

(defun ar-trim-right-blank-in-comment-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of BLANK residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'comment 'ar-th-trim-right arg))

(defun ar-underscore-blank-in-comment-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of BLANK residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'comment 'ar-th-underscore arg))

(defun ar-whitespace-blank-in-comment-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of BLANK residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'comment 'ar-th-whitespace arg))

(defun ar-blank-in-csv-atpt (&optional arg) 
  "Employ actions of  at things class of BLANK residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'csv 'ar-th arg))

(defun ar-greaterangle-blank-in-csv-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of BLANK residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'csv 'ar-th-greaterangle arg))

(defun ar-lesserangle-blank-in-csv-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of BLANK residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'csv 'ar-th-lesserangle arg))

(defun ar-backslash-blank-in-csv-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of BLANK residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'csv 'ar-th-backslash arg))

(defun ar-colon-blank-in-csv-atpt (&optional arg) 
  "Employ actions of COLON at things class of BLANK residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'csv 'ar-th-colon arg))

(defun ar-beg-blank-in-csv-atpt (&optional arg) 
  "Employ actions of BEG at things class of BLANK residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'csv 'ar-th-beg arg))

(defun ar-blok-blank-in-csv-atpt (&optional arg) 
  "Employ actions of BLOK at things class of BLANK residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'csv 'ar-th-blok arg))

(defun ar-bounds-blank-in-csv-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of BLANK residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'csv 'ar-th-bounds arg))

(defun ar-brace-blank-in-csv-atpt (&optional arg) 
  "Employ actions of BRACE at things class of BLANK residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'csv 'ar-th-brace arg))

(defun ar-bracket-blank-in-csv-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of BLANK residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'csv 'ar-th-bracket arg))

(defun ar-commatize-blank-in-csv-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of BLANK residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'csv 'ar-th-commatize arg))

(defun ar-comment-blank-in-csv-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of BLANK residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'csv 'ar-th-comment arg))

(defun ar-dollar-blank-in-csv-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of BLANK residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'csv 'ar-th-dollar arg))

(defun ar-doublebackslash-blank-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of BLANK residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'csv 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-blank-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of BLANK residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'csv 'ar-th-doublebacktick arg))

(defun ar-doublequote-blank-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of BLANK residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'csv 'ar-th-doublequote arg))

(defun ar-doubleslash-blank-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of BLANK residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'csv 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-blank-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of BLANK residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'csv 'ar-th-doublebackslashparen arg))

(defun ar-end-blank-in-csv-atpt (&optional arg) 
  "Employ actions of END at things class of BLANK residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'csv 'ar-th-end arg))

(defun ar-escape-blank-in-csv-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of BLANK residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'csv 'ar-th-escape arg))

(defun ar-hide-blank-in-csv-atpt (&optional arg) 
  "Employ actions of HIDE at things class of BLANK residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'csv 'ar-th-hide arg))

(defun ar-hide-show-blank-in-csv-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of BLANK residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'csv 'ar-th-hide-show arg))

(defun ar-hyphen-blank-in-csv-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of BLANK residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'csv 'ar-th-hyphen arg))

(defun ar-kill-blank-in-csv-atpt (&optional arg) 
  "Employ actions of KILL at things class of BLANK residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'csv 'ar-th-kill arg))

(defun ar-leftrightsinglequote-blank-in-csv-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of BLANK residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'csv 'ar-th-leftrightsinglequote arg))

(defun ar-length-blank-in-csv-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of BLANK residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'csv 'ar-th-length arg))

(defun ar-parentize-blank-in-csv-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of BLANK residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'csv 'ar-th-parentize arg))

(defun ar-quote-blank-in-csv-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of BLANK residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'csv 'ar-th-quote arg))

(defun ar-separate-blank-in-csv-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of BLANK residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'csv 'ar-th-separate arg))

(defun ar-show-blank-in-csv-atpt (&optional arg) 
  "Employ actions of SHOW at things class of BLANK residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'csv 'ar-th-show arg))

(defun ar-singlequote-blank-in-csv-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of BLANK residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'csv 'ar-th-singlequote arg))

(defun ar-slash-blank-in-csv-atpt (&optional arg) 
  "Employ actions of SLASH at things class of BLANK residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'csv 'ar-th-slash arg))

(defun ar-star-blank-in-csv-atpt (&optional arg) 
  "Employ actions of STAR at things class of BLANK residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'csv 'ar-th-star arg))

(defun ar-slashparen-blank-in-csv-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of BLANK residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'csv 'ar-th-slashparen arg))

(defun ar-sort-blank-in-csv-atpt (&optional arg) 
  "Employ actions of SORT at things class of BLANK residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'csv 'ar-th-sort arg))

(defun ar-trim-blank-in-csv-atpt (&optional arg) 
  "Employ actions of TRIM at things class of BLANK residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'csv 'ar-th-trim arg))

(defun ar-trim-left-blank-in-csv-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of BLANK residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'csv 'ar-th-trim-left arg))

(defun ar-trim-right-blank-in-csv-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of BLANK residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'csv 'ar-th-trim-right arg))

(defun ar-underscore-blank-in-csv-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of BLANK residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'csv 'ar-th-underscore arg))

(defun ar-whitespace-blank-in-csv-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of BLANK residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'csv 'ar-th-whitespace arg))

(defun ar-blank-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of  at things class of BLANK residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'filenamenondirectory 'ar-th arg))

(defun ar-greaterangle-blank-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of BLANK residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'filenamenondirectory 'ar-th-greaterangle arg))

(defun ar-lesserangle-blank-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of BLANK residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'filenamenondirectory 'ar-th-lesserangle arg))

(defun ar-backslash-blank-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of BLANK residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'filenamenondirectory 'ar-th-backslash arg))

(defun ar-colon-blank-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of COLON at things class of BLANK residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'filenamenondirectory 'ar-th-colon arg))

(defun ar-beg-blank-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BEG at things class of BLANK residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'filenamenondirectory 'ar-th-beg arg))

(defun ar-blok-blank-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BLOK at things class of BLANK residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'filenamenondirectory 'ar-th-blok arg))

(defun ar-bounds-blank-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of BLANK residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'filenamenondirectory 'ar-th-bounds arg))

(defun ar-brace-blank-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BRACE at things class of BLANK residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'filenamenondirectory 'ar-th-brace arg))

(defun ar-bracket-blank-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of BLANK residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'filenamenondirectory 'ar-th-bracket arg))

(defun ar-commatize-blank-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of BLANK residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'filenamenondirectory 'ar-th-commatize arg))

(defun ar-comment-blank-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of BLANK residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'filenamenondirectory 'ar-th-comment arg))

(defun ar-dollar-blank-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of BLANK residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'filenamenondirectory 'ar-th-dollar arg))

(defun ar-doublebackslash-blank-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of BLANK residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'filenamenondirectory 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-blank-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of BLANK residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'filenamenondirectory 'ar-th-doublebacktick arg))

(defun ar-doublequote-blank-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of BLANK residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'filenamenondirectory 'ar-th-doublequote arg))

(defun ar-doubleslash-blank-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of BLANK residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'filenamenondirectory 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-blank-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of BLANK residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'filenamenondirectory 'ar-th-doublebackslashparen arg))

(defun ar-end-blank-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of END at things class of BLANK residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'filenamenondirectory 'ar-th-end arg))

(defun ar-escape-blank-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of BLANK residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'filenamenondirectory 'ar-th-escape arg))

(defun ar-hide-blank-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of HIDE at things class of BLANK residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'filenamenondirectory 'ar-th-hide arg))

(defun ar-hide-show-blank-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of BLANK residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'filenamenondirectory 'ar-th-hide-show arg))

(defun ar-hyphen-blank-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of BLANK residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'filenamenondirectory 'ar-th-hyphen arg))

(defun ar-kill-blank-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of KILL at things class of BLANK residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'filenamenondirectory 'ar-th-kill arg))

(defun ar-leftrightsinglequote-blank-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of BLANK residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'filenamenondirectory 'ar-th-leftrightsinglequote arg))

(defun ar-length-blank-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of BLANK residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'filenamenondirectory 'ar-th-length arg))

(defun ar-parentize-blank-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of BLANK residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'filenamenondirectory 'ar-th-parentize arg))

(defun ar-quote-blank-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of BLANK residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'filenamenondirectory 'ar-th-quote arg))

(defun ar-separate-blank-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of BLANK residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'filenamenondirectory 'ar-th-separate arg))

(defun ar-show-blank-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SHOW at things class of BLANK residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'filenamenondirectory 'ar-th-show arg))

(defun ar-singlequote-blank-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of BLANK residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'filenamenondirectory 'ar-th-singlequote arg))

(defun ar-slash-blank-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SLASH at things class of BLANK residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'filenamenondirectory 'ar-th-slash arg))

(defun ar-star-blank-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of STAR at things class of BLANK residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'filenamenondirectory 'ar-th-star arg))

(defun ar-slashparen-blank-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of BLANK residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'filenamenondirectory 'ar-th-slashparen arg))

(defun ar-sort-blank-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SORT at things class of BLANK residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'filenamenondirectory 'ar-th-sort arg))

(defun ar-trim-blank-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of TRIM at things class of BLANK residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'filenamenondirectory 'ar-th-trim arg))

(defun ar-trim-left-blank-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of BLANK residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'filenamenondirectory 'ar-th-trim-left arg))

(defun ar-trim-right-blank-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of BLANK residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'filenamenondirectory 'ar-th-trim-right arg))

(defun ar-underscore-blank-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of BLANK residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'filenamenondirectory 'ar-th-underscore arg))

(defun ar-whitespace-blank-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of BLANK residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'filenamenondirectory 'ar-th-whitespace arg))

(defun ar-blank-in-function-atpt (&optional arg) 
  "Employ actions of  at things class of BLANK residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'function 'ar-th arg))

(defun ar-greaterangle-blank-in-function-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of BLANK residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'function 'ar-th-greaterangle arg))

(defun ar-lesserangle-blank-in-function-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of BLANK residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'function 'ar-th-lesserangle arg))

(defun ar-backslash-blank-in-function-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of BLANK residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'function 'ar-th-backslash arg))

(defun ar-colon-blank-in-function-atpt (&optional arg) 
  "Employ actions of COLON at things class of BLANK residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'function 'ar-th-colon arg))

(defun ar-beg-blank-in-function-atpt (&optional arg) 
  "Employ actions of BEG at things class of BLANK residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'function 'ar-th-beg arg))

(defun ar-blok-blank-in-function-atpt (&optional arg) 
  "Employ actions of BLOK at things class of BLANK residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'function 'ar-th-blok arg))

(defun ar-bounds-blank-in-function-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of BLANK residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'function 'ar-th-bounds arg))

(defun ar-brace-blank-in-function-atpt (&optional arg) 
  "Employ actions of BRACE at things class of BLANK residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'function 'ar-th-brace arg))

(defun ar-bracket-blank-in-function-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of BLANK residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'function 'ar-th-bracket arg))

(defun ar-commatize-blank-in-function-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of BLANK residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'function 'ar-th-commatize arg))

(defun ar-comment-blank-in-function-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of BLANK residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'function 'ar-th-comment arg))

(defun ar-dollar-blank-in-function-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of BLANK residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'function 'ar-th-dollar arg))

(defun ar-doublebackslash-blank-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of BLANK residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'function 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-blank-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of BLANK residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'function 'ar-th-doublebacktick arg))

(defun ar-doublequote-blank-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of BLANK residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'function 'ar-th-doublequote arg))

(defun ar-doubleslash-blank-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of BLANK residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'function 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-blank-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of BLANK residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'function 'ar-th-doublebackslashparen arg))

(defun ar-end-blank-in-function-atpt (&optional arg) 
  "Employ actions of END at things class of BLANK residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'function 'ar-th-end arg))

(defun ar-escape-blank-in-function-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of BLANK residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'function 'ar-th-escape arg))

(defun ar-hide-blank-in-function-atpt (&optional arg) 
  "Employ actions of HIDE at things class of BLANK residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'function 'ar-th-hide arg))

(defun ar-hide-show-blank-in-function-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of BLANK residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'function 'ar-th-hide-show arg))

(defun ar-hyphen-blank-in-function-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of BLANK residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'function 'ar-th-hyphen arg))

(defun ar-kill-blank-in-function-atpt (&optional arg) 
  "Employ actions of KILL at things class of BLANK residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'function 'ar-th-kill arg))

(defun ar-leftrightsinglequote-blank-in-function-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of BLANK residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'function 'ar-th-leftrightsinglequote arg))

(defun ar-length-blank-in-function-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of BLANK residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'function 'ar-th-length arg))

(defun ar-parentize-blank-in-function-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of BLANK residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'function 'ar-th-parentize arg))

(defun ar-quote-blank-in-function-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of BLANK residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'function 'ar-th-quote arg))

(defun ar-separate-blank-in-function-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of BLANK residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'function 'ar-th-separate arg))

(defun ar-show-blank-in-function-atpt (&optional arg) 
  "Employ actions of SHOW at things class of BLANK residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'function 'ar-th-show arg))

(defun ar-singlequote-blank-in-function-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of BLANK residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'function 'ar-th-singlequote arg))

(defun ar-slash-blank-in-function-atpt (&optional arg) 
  "Employ actions of SLASH at things class of BLANK residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'function 'ar-th-slash arg))

(defun ar-star-blank-in-function-atpt (&optional arg) 
  "Employ actions of STAR at things class of BLANK residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'function 'ar-th-star arg))

(defun ar-slashparen-blank-in-function-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of BLANK residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'function 'ar-th-slashparen arg))

(defun ar-sort-blank-in-function-atpt (&optional arg) 
  "Employ actions of SORT at things class of BLANK residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'function 'ar-th-sort arg))

(defun ar-trim-blank-in-function-atpt (&optional arg) 
  "Employ actions of TRIM at things class of BLANK residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'function 'ar-th-trim arg))

(defun ar-trim-left-blank-in-function-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of BLANK residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'function 'ar-th-trim-left arg))

(defun ar-trim-right-blank-in-function-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of BLANK residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'function 'ar-th-trim-right arg))

(defun ar-underscore-blank-in-function-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of BLANK residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'function 'ar-th-underscore arg))

(defun ar-whitespace-blank-in-function-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of BLANK residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'function 'ar-th-whitespace arg))

(defun ar-blank-in-line-atpt (&optional arg) 
  "Employ actions of  at things class of BLANK residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'line 'ar-th arg))

(defun ar-greaterangle-blank-in-line-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of BLANK residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'line 'ar-th-greaterangle arg))

(defun ar-lesserangle-blank-in-line-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of BLANK residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'line 'ar-th-lesserangle arg))

(defun ar-backslash-blank-in-line-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of BLANK residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'line 'ar-th-backslash arg))

(defun ar-colon-blank-in-line-atpt (&optional arg) 
  "Employ actions of COLON at things class of BLANK residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'line 'ar-th-colon arg))

(defun ar-beg-blank-in-line-atpt (&optional arg) 
  "Employ actions of BEG at things class of BLANK residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'line 'ar-th-beg arg))

(defun ar-blok-blank-in-line-atpt (&optional arg) 
  "Employ actions of BLOK at things class of BLANK residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'line 'ar-th-blok arg))

(defun ar-bounds-blank-in-line-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of BLANK residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'line 'ar-th-bounds arg))

(defun ar-brace-blank-in-line-atpt (&optional arg) 
  "Employ actions of BRACE at things class of BLANK residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'line 'ar-th-brace arg))

(defun ar-bracket-blank-in-line-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of BLANK residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'line 'ar-th-bracket arg))

(defun ar-commatize-blank-in-line-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of BLANK residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'line 'ar-th-commatize arg))

(defun ar-comment-blank-in-line-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of BLANK residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'line 'ar-th-comment arg))

(defun ar-dollar-blank-in-line-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of BLANK residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'line 'ar-th-dollar arg))

(defun ar-doublebackslash-blank-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of BLANK residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'line 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-blank-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of BLANK residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'line 'ar-th-doublebacktick arg))

(defun ar-doublequote-blank-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of BLANK residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'line 'ar-th-doublequote arg))

(defun ar-doubleslash-blank-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of BLANK residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'line 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-blank-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of BLANK residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'line 'ar-th-doublebackslashparen arg))

(defun ar-end-blank-in-line-atpt (&optional arg) 
  "Employ actions of END at things class of BLANK residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'line 'ar-th-end arg))

(defun ar-escape-blank-in-line-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of BLANK residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'line 'ar-th-escape arg))

(defun ar-hide-blank-in-line-atpt (&optional arg) 
  "Employ actions of HIDE at things class of BLANK residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'line 'ar-th-hide arg))

(defun ar-hide-show-blank-in-line-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of BLANK residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'line 'ar-th-hide-show arg))

(defun ar-hyphen-blank-in-line-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of BLANK residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'line 'ar-th-hyphen arg))

(defun ar-kill-blank-in-line-atpt (&optional arg) 
  "Employ actions of KILL at things class of BLANK residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'line 'ar-th-kill arg))

(defun ar-leftrightsinglequote-blank-in-line-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of BLANK residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'line 'ar-th-leftrightsinglequote arg))

(defun ar-length-blank-in-line-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of BLANK residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'line 'ar-th-length arg))

(defun ar-parentize-blank-in-line-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of BLANK residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'line 'ar-th-parentize arg))

(defun ar-quote-blank-in-line-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of BLANK residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'line 'ar-th-quote arg))

(defun ar-separate-blank-in-line-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of BLANK residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'line 'ar-th-separate arg))

(defun ar-show-blank-in-line-atpt (&optional arg) 
  "Employ actions of SHOW at things class of BLANK residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'line 'ar-th-show arg))

(defun ar-singlequote-blank-in-line-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of BLANK residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'line 'ar-th-singlequote arg))

(defun ar-slash-blank-in-line-atpt (&optional arg) 
  "Employ actions of SLASH at things class of BLANK residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'line 'ar-th-slash arg))

(defun ar-star-blank-in-line-atpt (&optional arg) 
  "Employ actions of STAR at things class of BLANK residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'line 'ar-th-star arg))

(defun ar-slashparen-blank-in-line-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of BLANK residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'line 'ar-th-slashparen arg))

(defun ar-sort-blank-in-line-atpt (&optional arg) 
  "Employ actions of SORT at things class of BLANK residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'line 'ar-th-sort arg))

(defun ar-trim-blank-in-line-atpt (&optional arg) 
  "Employ actions of TRIM at things class of BLANK residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'line 'ar-th-trim arg))

(defun ar-trim-left-blank-in-line-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of BLANK residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'line 'ar-th-trim-left arg))

(defun ar-trim-right-blank-in-line-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of BLANK residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'line 'ar-th-trim-right arg))

(defun ar-underscore-blank-in-line-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of BLANK residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'line 'ar-th-underscore arg))

(defun ar-whitespace-blank-in-line-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of BLANK residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'line 'ar-th-whitespace arg))

(defun ar-blank-in-list-atpt (&optional arg) 
  "Employ actions of  at things class of BLANK residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'list 'ar-th arg))

(defun ar-greaterangle-blank-in-list-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of BLANK residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'list 'ar-th-greaterangle arg))

(defun ar-lesserangle-blank-in-list-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of BLANK residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'list 'ar-th-lesserangle arg))

(defun ar-backslash-blank-in-list-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of BLANK residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'list 'ar-th-backslash arg))

(defun ar-colon-blank-in-list-atpt (&optional arg) 
  "Employ actions of COLON at things class of BLANK residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'list 'ar-th-colon arg))

(defun ar-beg-blank-in-list-atpt (&optional arg) 
  "Employ actions of BEG at things class of BLANK residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'list 'ar-th-beg arg))

(defun ar-blok-blank-in-list-atpt (&optional arg) 
  "Employ actions of BLOK at things class of BLANK residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'list 'ar-th-blok arg))

(defun ar-bounds-blank-in-list-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of BLANK residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'list 'ar-th-bounds arg))

(defun ar-brace-blank-in-list-atpt (&optional arg) 
  "Employ actions of BRACE at things class of BLANK residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'list 'ar-th-brace arg))

(defun ar-bracket-blank-in-list-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of BLANK residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'list 'ar-th-bracket arg))

(defun ar-commatize-blank-in-list-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of BLANK residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'list 'ar-th-commatize arg))

(defun ar-comment-blank-in-list-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of BLANK residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'list 'ar-th-comment arg))

(defun ar-dollar-blank-in-list-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of BLANK residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'list 'ar-th-dollar arg))

(defun ar-doublebackslash-blank-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of BLANK residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'list 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-blank-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of BLANK residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'list 'ar-th-doublebacktick arg))

(defun ar-doublequote-blank-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of BLANK residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'list 'ar-th-doublequote arg))

(defun ar-doubleslash-blank-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of BLANK residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'list 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-blank-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of BLANK residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'list 'ar-th-doublebackslashparen arg))

(defun ar-end-blank-in-list-atpt (&optional arg) 
  "Employ actions of END at things class of BLANK residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'list 'ar-th-end arg))

(defun ar-escape-blank-in-list-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of BLANK residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'list 'ar-th-escape arg))

(defun ar-hide-blank-in-list-atpt (&optional arg) 
  "Employ actions of HIDE at things class of BLANK residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'list 'ar-th-hide arg))

(defun ar-hide-show-blank-in-list-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of BLANK residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'list 'ar-th-hide-show arg))

(defun ar-hyphen-blank-in-list-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of BLANK residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'list 'ar-th-hyphen arg))

(defun ar-kill-blank-in-list-atpt (&optional arg) 
  "Employ actions of KILL at things class of BLANK residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'list 'ar-th-kill arg))

(defun ar-leftrightsinglequote-blank-in-list-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of BLANK residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'list 'ar-th-leftrightsinglequote arg))

(defun ar-length-blank-in-list-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of BLANK residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'list 'ar-th-length arg))

(defun ar-parentize-blank-in-list-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of BLANK residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'list 'ar-th-parentize arg))

(defun ar-quote-blank-in-list-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of BLANK residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'list 'ar-th-quote arg))

(defun ar-separate-blank-in-list-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of BLANK residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'list 'ar-th-separate arg))

(defun ar-show-blank-in-list-atpt (&optional arg) 
  "Employ actions of SHOW at things class of BLANK residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'list 'ar-th-show arg))

(defun ar-singlequote-blank-in-list-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of BLANK residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'list 'ar-th-singlequote arg))

(defun ar-slash-blank-in-list-atpt (&optional arg) 
  "Employ actions of SLASH at things class of BLANK residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'list 'ar-th-slash arg))

(defun ar-star-blank-in-list-atpt (&optional arg) 
  "Employ actions of STAR at things class of BLANK residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'list 'ar-th-star arg))

(defun ar-slashparen-blank-in-list-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of BLANK residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'list 'ar-th-slashparen arg))

(defun ar-sort-blank-in-list-atpt (&optional arg) 
  "Employ actions of SORT at things class of BLANK residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'list 'ar-th-sort arg))

(defun ar-trim-blank-in-list-atpt (&optional arg) 
  "Employ actions of TRIM at things class of BLANK residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'list 'ar-th-trim arg))

(defun ar-trim-left-blank-in-list-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of BLANK residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'list 'ar-th-trim-left arg))

(defun ar-trim-right-blank-in-list-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of BLANK residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'list 'ar-th-trim-right arg))

(defun ar-underscore-blank-in-list-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of BLANK residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'list 'ar-th-underscore arg))

(defun ar-whitespace-blank-in-list-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of BLANK residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'list 'ar-th-whitespace arg))

(defun ar-blank-in-name-atpt (&optional arg) 
  "Employ actions of  at things class of BLANK residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'name 'ar-th arg))

(defun ar-greaterangle-blank-in-name-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of BLANK residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'name 'ar-th-greaterangle arg))

(defun ar-lesserangle-blank-in-name-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of BLANK residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'name 'ar-th-lesserangle arg))

(defun ar-backslash-blank-in-name-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of BLANK residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'name 'ar-th-backslash arg))

(defun ar-colon-blank-in-name-atpt (&optional arg) 
  "Employ actions of COLON at things class of BLANK residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'name 'ar-th-colon arg))

(defun ar-beg-blank-in-name-atpt (&optional arg) 
  "Employ actions of BEG at things class of BLANK residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'name 'ar-th-beg arg))

(defun ar-blok-blank-in-name-atpt (&optional arg) 
  "Employ actions of BLOK at things class of BLANK residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'name 'ar-th-blok arg))

(defun ar-bounds-blank-in-name-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of BLANK residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'name 'ar-th-bounds arg))

(defun ar-brace-blank-in-name-atpt (&optional arg) 
  "Employ actions of BRACE at things class of BLANK residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'name 'ar-th-brace arg))

(defun ar-bracket-blank-in-name-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of BLANK residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'name 'ar-th-bracket arg))

(defun ar-commatize-blank-in-name-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of BLANK residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'name 'ar-th-commatize arg))

(defun ar-comment-blank-in-name-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of BLANK residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'name 'ar-th-comment arg))

(defun ar-dollar-blank-in-name-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of BLANK residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'name 'ar-th-dollar arg))

(defun ar-doublebackslash-blank-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of BLANK residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'name 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-blank-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of BLANK residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'name 'ar-th-doublebacktick arg))

(defun ar-doublequote-blank-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of BLANK residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'name 'ar-th-doublequote arg))

(defun ar-doubleslash-blank-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of BLANK residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'name 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-blank-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of BLANK residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'name 'ar-th-doublebackslashparen arg))

(defun ar-end-blank-in-name-atpt (&optional arg) 
  "Employ actions of END at things class of BLANK residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'name 'ar-th-end arg))

(defun ar-escape-blank-in-name-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of BLANK residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'name 'ar-th-escape arg))

(defun ar-hide-blank-in-name-atpt (&optional arg) 
  "Employ actions of HIDE at things class of BLANK residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'name 'ar-th-hide arg))

(defun ar-hide-show-blank-in-name-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of BLANK residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'name 'ar-th-hide-show arg))

(defun ar-hyphen-blank-in-name-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of BLANK residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'name 'ar-th-hyphen arg))

(defun ar-kill-blank-in-name-atpt (&optional arg) 
  "Employ actions of KILL at things class of BLANK residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'name 'ar-th-kill arg))

(defun ar-leftrightsinglequote-blank-in-name-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of BLANK residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'name 'ar-th-leftrightsinglequote arg))

(defun ar-length-blank-in-name-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of BLANK residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'name 'ar-th-length arg))

(defun ar-parentize-blank-in-name-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of BLANK residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'name 'ar-th-parentize arg))

(defun ar-quote-blank-in-name-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of BLANK residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'name 'ar-th-quote arg))

(defun ar-separate-blank-in-name-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of BLANK residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'name 'ar-th-separate arg))

(defun ar-show-blank-in-name-atpt (&optional arg) 
  "Employ actions of SHOW at things class of BLANK residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'name 'ar-th-show arg))

(defun ar-singlequote-blank-in-name-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of BLANK residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'name 'ar-th-singlequote arg))

(defun ar-slash-blank-in-name-atpt (&optional arg) 
  "Employ actions of SLASH at things class of BLANK residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'name 'ar-th-slash arg))

(defun ar-star-blank-in-name-atpt (&optional arg) 
  "Employ actions of STAR at things class of BLANK residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'name 'ar-th-star arg))

(defun ar-slashparen-blank-in-name-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of BLANK residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'name 'ar-th-slashparen arg))

(defun ar-sort-blank-in-name-atpt (&optional arg) 
  "Employ actions of SORT at things class of BLANK residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'name 'ar-th-sort arg))

(defun ar-trim-blank-in-name-atpt (&optional arg) 
  "Employ actions of TRIM at things class of BLANK residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'name 'ar-th-trim arg))

(defun ar-trim-left-blank-in-name-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of BLANK residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'name 'ar-th-trim-left arg))

(defun ar-trim-right-blank-in-name-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of BLANK residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'name 'ar-th-trim-right arg))

(defun ar-underscore-blank-in-name-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of BLANK residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'name 'ar-th-underscore arg))

(defun ar-whitespace-blank-in-name-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of BLANK residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'name 'ar-th-whitespace arg))

(defun ar-blank-in-page-atpt (&optional arg) 
  "Employ actions of  at things class of BLANK residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'page 'ar-th arg))

(defun ar-greaterangle-blank-in-page-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of BLANK residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'page 'ar-th-greaterangle arg))

(defun ar-lesserangle-blank-in-page-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of BLANK residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'page 'ar-th-lesserangle arg))

(defun ar-backslash-blank-in-page-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of BLANK residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'page 'ar-th-backslash arg))

(defun ar-colon-blank-in-page-atpt (&optional arg) 
  "Employ actions of COLON at things class of BLANK residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'page 'ar-th-colon arg))

(defun ar-beg-blank-in-page-atpt (&optional arg) 
  "Employ actions of BEG at things class of BLANK residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'page 'ar-th-beg arg))

(defun ar-blok-blank-in-page-atpt (&optional arg) 
  "Employ actions of BLOK at things class of BLANK residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'page 'ar-th-blok arg))

(defun ar-bounds-blank-in-page-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of BLANK residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'page 'ar-th-bounds arg))

(defun ar-brace-blank-in-page-atpt (&optional arg) 
  "Employ actions of BRACE at things class of BLANK residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'page 'ar-th-brace arg))

(defun ar-bracket-blank-in-page-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of BLANK residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'page 'ar-th-bracket arg))

(defun ar-commatize-blank-in-page-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of BLANK residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'page 'ar-th-commatize arg))

(defun ar-comment-blank-in-page-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of BLANK residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'page 'ar-th-comment arg))

(defun ar-dollar-blank-in-page-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of BLANK residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'page 'ar-th-dollar arg))

(defun ar-doublebackslash-blank-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of BLANK residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'page 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-blank-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of BLANK residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'page 'ar-th-doublebacktick arg))

(defun ar-doublequote-blank-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of BLANK residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'page 'ar-th-doublequote arg))

(defun ar-doubleslash-blank-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of BLANK residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'page 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-blank-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of BLANK residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'page 'ar-th-doublebackslashparen arg))

(defun ar-end-blank-in-page-atpt (&optional arg) 
  "Employ actions of END at things class of BLANK residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'page 'ar-th-end arg))

(defun ar-escape-blank-in-page-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of BLANK residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'page 'ar-th-escape arg))

(defun ar-hide-blank-in-page-atpt (&optional arg) 
  "Employ actions of HIDE at things class of BLANK residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'page 'ar-th-hide arg))

(defun ar-hide-show-blank-in-page-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of BLANK residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'page 'ar-th-hide-show arg))

(defun ar-hyphen-blank-in-page-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of BLANK residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'page 'ar-th-hyphen arg))

(defun ar-kill-blank-in-page-atpt (&optional arg) 
  "Employ actions of KILL at things class of BLANK residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'page 'ar-th-kill arg))

(defun ar-leftrightsinglequote-blank-in-page-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of BLANK residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'page 'ar-th-leftrightsinglequote arg))

(defun ar-length-blank-in-page-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of BLANK residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'page 'ar-th-length arg))

(defun ar-parentize-blank-in-page-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of BLANK residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'page 'ar-th-parentize arg))

(defun ar-quote-blank-in-page-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of BLANK residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'page 'ar-th-quote arg))

(defun ar-separate-blank-in-page-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of BLANK residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'page 'ar-th-separate arg))

(defun ar-show-blank-in-page-atpt (&optional arg) 
  "Employ actions of SHOW at things class of BLANK residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'page 'ar-th-show arg))

(defun ar-singlequote-blank-in-page-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of BLANK residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'page 'ar-th-singlequote arg))

(defun ar-slash-blank-in-page-atpt (&optional arg) 
  "Employ actions of SLASH at things class of BLANK residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'page 'ar-th-slash arg))

(defun ar-star-blank-in-page-atpt (&optional arg) 
  "Employ actions of STAR at things class of BLANK residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'page 'ar-th-star arg))

(defun ar-slashparen-blank-in-page-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of BLANK residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'page 'ar-th-slashparen arg))

(defun ar-sort-blank-in-page-atpt (&optional arg) 
  "Employ actions of SORT at things class of BLANK residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'page 'ar-th-sort arg))

(defun ar-trim-blank-in-page-atpt (&optional arg) 
  "Employ actions of TRIM at things class of BLANK residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'page 'ar-th-trim arg))

(defun ar-trim-left-blank-in-page-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of BLANK residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'page 'ar-th-trim-left arg))

(defun ar-trim-right-blank-in-page-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of BLANK residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'page 'ar-th-trim-right arg))

(defun ar-underscore-blank-in-page-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of BLANK residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'page 'ar-th-underscore arg))

(defun ar-whitespace-blank-in-page-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of BLANK residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'page 'ar-th-whitespace arg))

(defun ar-blank-in-paragraph-atpt (&optional arg) 
  "Employ actions of  at things class of BLANK residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'paragraph 'ar-th arg))

(defun ar-greaterangle-blank-in-paragraph-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of BLANK residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'paragraph 'ar-th-greaterangle arg))

(defun ar-lesserangle-blank-in-paragraph-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of BLANK residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'paragraph 'ar-th-lesserangle arg))

(defun ar-backslash-blank-in-paragraph-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of BLANK residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'paragraph 'ar-th-backslash arg))

(defun ar-colon-blank-in-paragraph-atpt (&optional arg) 
  "Employ actions of COLON at things class of BLANK residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'paragraph 'ar-th-colon arg))

(defun ar-beg-blank-in-paragraph-atpt (&optional arg) 
  "Employ actions of BEG at things class of BLANK residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'paragraph 'ar-th-beg arg))

(defun ar-blok-blank-in-paragraph-atpt (&optional arg) 
  "Employ actions of BLOK at things class of BLANK residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'paragraph 'ar-th-blok arg))

(defun ar-bounds-blank-in-paragraph-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of BLANK residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'paragraph 'ar-th-bounds arg))

(defun ar-brace-blank-in-paragraph-atpt (&optional arg) 
  "Employ actions of BRACE at things class of BLANK residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'paragraph 'ar-th-brace arg))

(defun ar-bracket-blank-in-paragraph-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of BLANK residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'paragraph 'ar-th-bracket arg))

(defun ar-commatize-blank-in-paragraph-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of BLANK residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'paragraph 'ar-th-commatize arg))

(defun ar-comment-blank-in-paragraph-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of BLANK residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'paragraph 'ar-th-comment arg))

(defun ar-dollar-blank-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of BLANK residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'paragraph 'ar-th-dollar arg))

(defun ar-doublebackslash-blank-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of BLANK residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'paragraph 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-blank-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of BLANK residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'paragraph 'ar-th-doublebacktick arg))

(defun ar-doublequote-blank-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of BLANK residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'paragraph 'ar-th-doublequote arg))

(defun ar-doubleslash-blank-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of BLANK residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'paragraph 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-blank-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of BLANK residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'paragraph 'ar-th-doublebackslashparen arg))

(defun ar-end-blank-in-paragraph-atpt (&optional arg) 
  "Employ actions of END at things class of BLANK residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'paragraph 'ar-th-end arg))

(defun ar-escape-blank-in-paragraph-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of BLANK residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'paragraph 'ar-th-escape arg))

(defun ar-hide-blank-in-paragraph-atpt (&optional arg) 
  "Employ actions of HIDE at things class of BLANK residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'paragraph 'ar-th-hide arg))

(defun ar-hide-show-blank-in-paragraph-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of BLANK residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'paragraph 'ar-th-hide-show arg))

(defun ar-hyphen-blank-in-paragraph-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of BLANK residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'paragraph 'ar-th-hyphen arg))

(defun ar-kill-blank-in-paragraph-atpt (&optional arg) 
  "Employ actions of KILL at things class of BLANK residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'paragraph 'ar-th-kill arg))

(defun ar-leftrightsinglequote-blank-in-paragraph-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of BLANK residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'paragraph 'ar-th-leftrightsinglequote arg))

(defun ar-length-blank-in-paragraph-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of BLANK residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'paragraph 'ar-th-length arg))

(defun ar-parentize-blank-in-paragraph-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of BLANK residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'paragraph 'ar-th-parentize arg))

(defun ar-quote-blank-in-paragraph-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of BLANK residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'paragraph 'ar-th-quote arg))

(defun ar-separate-blank-in-paragraph-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of BLANK residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'paragraph 'ar-th-separate arg))

(defun ar-show-blank-in-paragraph-atpt (&optional arg) 
  "Employ actions of SHOW at things class of BLANK residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'paragraph 'ar-th-show arg))

(defun ar-singlequote-blank-in-paragraph-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of BLANK residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'paragraph 'ar-th-singlequote arg))

(defun ar-slash-blank-in-paragraph-atpt (&optional arg) 
  "Employ actions of SLASH at things class of BLANK residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'paragraph 'ar-th-slash arg))

(defun ar-star-blank-in-paragraph-atpt (&optional arg) 
  "Employ actions of STAR at things class of BLANK residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'paragraph 'ar-th-star arg))

(defun ar-slashparen-blank-in-paragraph-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of BLANK residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'paragraph 'ar-th-slashparen arg))

(defun ar-sort-blank-in-paragraph-atpt (&optional arg) 
  "Employ actions of SORT at things class of BLANK residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'paragraph 'ar-th-sort arg))

(defun ar-trim-blank-in-paragraph-atpt (&optional arg) 
  "Employ actions of TRIM at things class of BLANK residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'paragraph 'ar-th-trim arg))

(defun ar-trim-left-blank-in-paragraph-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of BLANK residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'paragraph 'ar-th-trim-left arg))

(defun ar-trim-right-blank-in-paragraph-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of BLANK residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'paragraph 'ar-th-trim-right arg))

(defun ar-underscore-blank-in-paragraph-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of BLANK residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'paragraph 'ar-th-underscore arg))

(defun ar-whitespace-blank-in-paragraph-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of BLANK residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'paragraph 'ar-th-whitespace arg))

(defun ar-blank-in-region-atpt (&optional arg) 
  "Employ actions of  at things class of BLANK residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'region 'ar-th arg))

(defun ar-greaterangle-blank-in-region-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of BLANK residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'region 'ar-th-greaterangle arg))

(defun ar-lesserangle-blank-in-region-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of BLANK residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'region 'ar-th-lesserangle arg))

(defun ar-backslash-blank-in-region-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of BLANK residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'region 'ar-th-backslash arg))

(defun ar-colon-blank-in-region-atpt (&optional arg) 
  "Employ actions of COLON at things class of BLANK residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'region 'ar-th-colon arg))

(defun ar-beg-blank-in-region-atpt (&optional arg) 
  "Employ actions of BEG at things class of BLANK residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'region 'ar-th-beg arg))

(defun ar-blok-blank-in-region-atpt (&optional arg) 
  "Employ actions of BLOK at things class of BLANK residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'region 'ar-th-blok arg))

(defun ar-bounds-blank-in-region-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of BLANK residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'region 'ar-th-bounds arg))

(defun ar-brace-blank-in-region-atpt (&optional arg) 
  "Employ actions of BRACE at things class of BLANK residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'region 'ar-th-brace arg))

(defun ar-bracket-blank-in-region-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of BLANK residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'region 'ar-th-bracket arg))

(defun ar-commatize-blank-in-region-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of BLANK residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'region 'ar-th-commatize arg))

(defun ar-comment-blank-in-region-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of BLANK residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'region 'ar-th-comment arg))

(defun ar-dollar-blank-in-region-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of BLANK residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'region 'ar-th-dollar arg))

(defun ar-doublebackslash-blank-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of BLANK residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'region 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-blank-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of BLANK residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'region 'ar-th-doublebacktick arg))

(defun ar-doublequote-blank-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of BLANK residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'region 'ar-th-doublequote arg))

(defun ar-doubleslash-blank-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of BLANK residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'region 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-blank-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of BLANK residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'region 'ar-th-doublebackslashparen arg))

(defun ar-end-blank-in-region-atpt (&optional arg) 
  "Employ actions of END at things class of BLANK residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'region 'ar-th-end arg))

(defun ar-escape-blank-in-region-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of BLANK residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'region 'ar-th-escape arg))

(defun ar-hide-blank-in-region-atpt (&optional arg) 
  "Employ actions of HIDE at things class of BLANK residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'region 'ar-th-hide arg))

(defun ar-hide-show-blank-in-region-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of BLANK residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'region 'ar-th-hide-show arg))

(defun ar-hyphen-blank-in-region-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of BLANK residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'region 'ar-th-hyphen arg))

(defun ar-kill-blank-in-region-atpt (&optional arg) 
  "Employ actions of KILL at things class of BLANK residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'region 'ar-th-kill arg))

(defun ar-leftrightsinglequote-blank-in-region-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of BLANK residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'region 'ar-th-leftrightsinglequote arg))

(defun ar-length-blank-in-region-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of BLANK residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'region 'ar-th-length arg))

(defun ar-parentize-blank-in-region-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of BLANK residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'region 'ar-th-parentize arg))

(defun ar-quote-blank-in-region-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of BLANK residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'region 'ar-th-quote arg))

(defun ar-separate-blank-in-region-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of BLANK residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'region 'ar-th-separate arg))

(defun ar-show-blank-in-region-atpt (&optional arg) 
  "Employ actions of SHOW at things class of BLANK residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'region 'ar-th-show arg))

(defun ar-singlequote-blank-in-region-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of BLANK residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'region 'ar-th-singlequote arg))

(defun ar-slash-blank-in-region-atpt (&optional arg) 
  "Employ actions of SLASH at things class of BLANK residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'region 'ar-th-slash arg))

(defun ar-star-blank-in-region-atpt (&optional arg) 
  "Employ actions of STAR at things class of BLANK residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'region 'ar-th-star arg))

(defun ar-slashparen-blank-in-region-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of BLANK residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'region 'ar-th-slashparen arg))

(defun ar-sort-blank-in-region-atpt (&optional arg) 
  "Employ actions of SORT at things class of BLANK residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'region 'ar-th-sort arg))

(defun ar-trim-blank-in-region-atpt (&optional arg) 
  "Employ actions of TRIM at things class of BLANK residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'region 'ar-th-trim arg))

(defun ar-trim-left-blank-in-region-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of BLANK residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'region 'ar-th-trim-left arg))

(defun ar-trim-right-blank-in-region-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of BLANK residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'region 'ar-th-trim-right arg))

(defun ar-underscore-blank-in-region-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of BLANK residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'region 'ar-th-underscore arg))

(defun ar-whitespace-blank-in-region-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of BLANK residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'region 'ar-th-whitespace arg))

(defun ar-blank-in-sentence-atpt (&optional arg) 
  "Employ actions of  at things class of BLANK residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sentence 'ar-th arg))

(defun ar-greaterangle-blank-in-sentence-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of BLANK residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sentence 'ar-th-greaterangle arg))

(defun ar-lesserangle-blank-in-sentence-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of BLANK residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sentence 'ar-th-lesserangle arg))

(defun ar-backslash-blank-in-sentence-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of BLANK residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sentence 'ar-th-backslash arg))

(defun ar-colon-blank-in-sentence-atpt (&optional arg) 
  "Employ actions of COLON at things class of BLANK residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sentence 'ar-th-colon arg))

(defun ar-beg-blank-in-sentence-atpt (&optional arg) 
  "Employ actions of BEG at things class of BLANK residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sentence 'ar-th-beg arg))

(defun ar-blok-blank-in-sentence-atpt (&optional arg) 
  "Employ actions of BLOK at things class of BLANK residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sentence 'ar-th-blok arg))

(defun ar-bounds-blank-in-sentence-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of BLANK residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sentence 'ar-th-bounds arg))

(defun ar-brace-blank-in-sentence-atpt (&optional arg) 
  "Employ actions of BRACE at things class of BLANK residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sentence 'ar-th-brace arg))

(defun ar-bracket-blank-in-sentence-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of BLANK residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sentence 'ar-th-bracket arg))

(defun ar-commatize-blank-in-sentence-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of BLANK residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sentence 'ar-th-commatize arg))

(defun ar-comment-blank-in-sentence-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of BLANK residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sentence 'ar-th-comment arg))

(defun ar-dollar-blank-in-sentence-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of BLANK residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sentence 'ar-th-dollar arg))

(defun ar-doublebackslash-blank-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of BLANK residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sentence 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-blank-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of BLANK residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sentence 'ar-th-doublebacktick arg))

(defun ar-doublequote-blank-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of BLANK residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sentence 'ar-th-doublequote arg))

(defun ar-doubleslash-blank-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of BLANK residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sentence 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-blank-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of BLANK residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sentence 'ar-th-doublebackslashparen arg))

(defun ar-end-blank-in-sentence-atpt (&optional arg) 
  "Employ actions of END at things class of BLANK residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sentence 'ar-th-end arg))

(defun ar-escape-blank-in-sentence-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of BLANK residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sentence 'ar-th-escape arg))

(defun ar-hide-blank-in-sentence-atpt (&optional arg) 
  "Employ actions of HIDE at things class of BLANK residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sentence 'ar-th-hide arg))

(defun ar-hide-show-blank-in-sentence-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of BLANK residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sentence 'ar-th-hide-show arg))

(defun ar-hyphen-blank-in-sentence-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of BLANK residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sentence 'ar-th-hyphen arg))

(defun ar-kill-blank-in-sentence-atpt (&optional arg) 
  "Employ actions of KILL at things class of BLANK residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sentence 'ar-th-kill arg))

(defun ar-leftrightsinglequote-blank-in-sentence-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of BLANK residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sentence 'ar-th-leftrightsinglequote arg))

(defun ar-length-blank-in-sentence-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of BLANK residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sentence 'ar-th-length arg))

(defun ar-parentize-blank-in-sentence-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of BLANK residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sentence 'ar-th-parentize arg))

(defun ar-quote-blank-in-sentence-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of BLANK residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sentence 'ar-th-quote arg))

(defun ar-separate-blank-in-sentence-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of BLANK residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sentence 'ar-th-separate arg))

(defun ar-show-blank-in-sentence-atpt (&optional arg) 
  "Employ actions of SHOW at things class of BLANK residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sentence 'ar-th-show arg))

(defun ar-singlequote-blank-in-sentence-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of BLANK residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sentence 'ar-th-singlequote arg))

(defun ar-slash-blank-in-sentence-atpt (&optional arg) 
  "Employ actions of SLASH at things class of BLANK residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sentence 'ar-th-slash arg))

(defun ar-star-blank-in-sentence-atpt (&optional arg) 
  "Employ actions of STAR at things class of BLANK residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sentence 'ar-th-star arg))

(defun ar-slashparen-blank-in-sentence-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of BLANK residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sentence 'ar-th-slashparen arg))

(defun ar-sort-blank-in-sentence-atpt (&optional arg) 
  "Employ actions of SORT at things class of BLANK residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sentence 'ar-th-sort arg))

(defun ar-trim-blank-in-sentence-atpt (&optional arg) 
  "Employ actions of TRIM at things class of BLANK residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sentence 'ar-th-trim arg))

(defun ar-trim-left-blank-in-sentence-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of BLANK residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sentence 'ar-th-trim-left arg))

(defun ar-trim-right-blank-in-sentence-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of BLANK residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sentence 'ar-th-trim-right arg))

(defun ar-underscore-blank-in-sentence-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of BLANK residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sentence 'ar-th-underscore arg))

(defun ar-whitespace-blank-in-sentence-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of BLANK residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sentence 'ar-th-whitespace arg))

(defun ar-blank-in-sexp-atpt (&optional arg) 
  "Employ actions of  at things class of BLANK residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sexp 'ar-th arg))

(defun ar-greaterangle-blank-in-sexp-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of BLANK residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sexp 'ar-th-greaterangle arg))

(defun ar-lesserangle-blank-in-sexp-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of BLANK residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sexp 'ar-th-lesserangle arg))

(defun ar-backslash-blank-in-sexp-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of BLANK residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sexp 'ar-th-backslash arg))

(defun ar-colon-blank-in-sexp-atpt (&optional arg) 
  "Employ actions of COLON at things class of BLANK residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sexp 'ar-th-colon arg))

(defun ar-beg-blank-in-sexp-atpt (&optional arg) 
  "Employ actions of BEG at things class of BLANK residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sexp 'ar-th-beg arg))

(defun ar-blok-blank-in-sexp-atpt (&optional arg) 
  "Employ actions of BLOK at things class of BLANK residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sexp 'ar-th-blok arg))

(defun ar-bounds-blank-in-sexp-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of BLANK residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sexp 'ar-th-bounds arg))

(defun ar-brace-blank-in-sexp-atpt (&optional arg) 
  "Employ actions of BRACE at things class of BLANK residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sexp 'ar-th-brace arg))

(defun ar-bracket-blank-in-sexp-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of BLANK residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sexp 'ar-th-bracket arg))

(defun ar-commatize-blank-in-sexp-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of BLANK residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sexp 'ar-th-commatize arg))

(defun ar-comment-blank-in-sexp-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of BLANK residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sexp 'ar-th-comment arg))

(defun ar-dollar-blank-in-sexp-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of BLANK residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sexp 'ar-th-dollar arg))

(defun ar-doublebackslash-blank-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of BLANK residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sexp 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-blank-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of BLANK residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sexp 'ar-th-doublebacktick arg))

(defun ar-doublequote-blank-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of BLANK residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sexp 'ar-th-doublequote arg))

(defun ar-doubleslash-blank-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of BLANK residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sexp 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-blank-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of BLANK residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sexp 'ar-th-doublebackslashparen arg))

(defun ar-end-blank-in-sexp-atpt (&optional arg) 
  "Employ actions of END at things class of BLANK residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sexp 'ar-th-end arg))

(defun ar-escape-blank-in-sexp-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of BLANK residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sexp 'ar-th-escape arg))

(defun ar-hide-blank-in-sexp-atpt (&optional arg) 
  "Employ actions of HIDE at things class of BLANK residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sexp 'ar-th-hide arg))

(defun ar-hide-show-blank-in-sexp-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of BLANK residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sexp 'ar-th-hide-show arg))

(defun ar-hyphen-blank-in-sexp-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of BLANK residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sexp 'ar-th-hyphen arg))

(defun ar-kill-blank-in-sexp-atpt (&optional arg) 
  "Employ actions of KILL at things class of BLANK residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sexp 'ar-th-kill arg))

(defun ar-leftrightsinglequote-blank-in-sexp-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of BLANK residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sexp 'ar-th-leftrightsinglequote arg))

(defun ar-length-blank-in-sexp-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of BLANK residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sexp 'ar-th-length arg))

(defun ar-parentize-blank-in-sexp-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of BLANK residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sexp 'ar-th-parentize arg))

(defun ar-quote-blank-in-sexp-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of BLANK residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sexp 'ar-th-quote arg))

(defun ar-separate-blank-in-sexp-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of BLANK residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sexp 'ar-th-separate arg))

(defun ar-show-blank-in-sexp-atpt (&optional arg) 
  "Employ actions of SHOW at things class of BLANK residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sexp 'ar-th-show arg))

(defun ar-singlequote-blank-in-sexp-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of BLANK residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sexp 'ar-th-singlequote arg))

(defun ar-slash-blank-in-sexp-atpt (&optional arg) 
  "Employ actions of SLASH at things class of BLANK residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sexp 'ar-th-slash arg))

(defun ar-star-blank-in-sexp-atpt (&optional arg) 
  "Employ actions of STAR at things class of BLANK residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sexp 'ar-th-star arg))

(defun ar-slashparen-blank-in-sexp-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of BLANK residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sexp 'ar-th-slashparen arg))

(defun ar-sort-blank-in-sexp-atpt (&optional arg) 
  "Employ actions of SORT at things class of BLANK residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sexp 'ar-th-sort arg))

(defun ar-trim-blank-in-sexp-atpt (&optional arg) 
  "Employ actions of TRIM at things class of BLANK residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sexp 'ar-th-trim arg))

(defun ar-trim-left-blank-in-sexp-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of BLANK residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sexp 'ar-th-trim-left arg))

(defun ar-trim-right-blank-in-sexp-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of BLANK residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sexp 'ar-th-trim-right arg))

(defun ar-underscore-blank-in-sexp-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of BLANK residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sexp 'ar-th-underscore arg))

(defun ar-whitespace-blank-in-sexp-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of BLANK residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'sexp 'ar-th-whitespace arg))

(defun ar-blank-in-shstruct-atpt (&optional arg) 
  "Employ actions of  at things class of BLANK residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'shstruct 'ar-th arg))

(defun ar-greaterangle-blank-in-shstruct-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of BLANK residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'shstruct 'ar-th-greaterangle arg))

(defun ar-lesserangle-blank-in-shstruct-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of BLANK residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'shstruct 'ar-th-lesserangle arg))

(defun ar-backslash-blank-in-shstruct-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of BLANK residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'shstruct 'ar-th-backslash arg))

(defun ar-colon-blank-in-shstruct-atpt (&optional arg) 
  "Employ actions of COLON at things class of BLANK residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'shstruct 'ar-th-colon arg))

(defun ar-beg-blank-in-shstruct-atpt (&optional arg) 
  "Employ actions of BEG at things class of BLANK residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'shstruct 'ar-th-beg arg))

(defun ar-blok-blank-in-shstruct-atpt (&optional arg) 
  "Employ actions of BLOK at things class of BLANK residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'shstruct 'ar-th-blok arg))

(defun ar-bounds-blank-in-shstruct-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of BLANK residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'shstruct 'ar-th-bounds arg))

(defun ar-brace-blank-in-shstruct-atpt (&optional arg) 
  "Employ actions of BRACE at things class of BLANK residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'shstruct 'ar-th-brace arg))

(defun ar-bracket-blank-in-shstruct-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of BLANK residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'shstruct 'ar-th-bracket arg))

(defun ar-commatize-blank-in-shstruct-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of BLANK residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'shstruct 'ar-th-commatize arg))

(defun ar-comment-blank-in-shstruct-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of BLANK residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'shstruct 'ar-th-comment arg))

(defun ar-dollar-blank-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of BLANK residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'shstruct 'ar-th-dollar arg))

(defun ar-doublebackslash-blank-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of BLANK residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'shstruct 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-blank-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of BLANK residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'shstruct 'ar-th-doublebacktick arg))

(defun ar-doublequote-blank-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of BLANK residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'shstruct 'ar-th-doublequote arg))

(defun ar-doubleslash-blank-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of BLANK residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'shstruct 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-blank-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of BLANK residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'shstruct 'ar-th-doublebackslashparen arg))

(defun ar-end-blank-in-shstruct-atpt (&optional arg) 
  "Employ actions of END at things class of BLANK residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'shstruct 'ar-th-end arg))

(defun ar-escape-blank-in-shstruct-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of BLANK residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'shstruct 'ar-th-escape arg))

(defun ar-hide-blank-in-shstruct-atpt (&optional arg) 
  "Employ actions of HIDE at things class of BLANK residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'shstruct 'ar-th-hide arg))

(defun ar-hide-show-blank-in-shstruct-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of BLANK residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'shstruct 'ar-th-hide-show arg))

(defun ar-hyphen-blank-in-shstruct-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of BLANK residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'shstruct 'ar-th-hyphen arg))

(defun ar-kill-blank-in-shstruct-atpt (&optional arg) 
  "Employ actions of KILL at things class of BLANK residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'shstruct 'ar-th-kill arg))

(defun ar-leftrightsinglequote-blank-in-shstruct-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of BLANK residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'shstruct 'ar-th-leftrightsinglequote arg))

(defun ar-length-blank-in-shstruct-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of BLANK residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'shstruct 'ar-th-length arg))

(defun ar-parentize-blank-in-shstruct-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of BLANK residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'shstruct 'ar-th-parentize arg))

(defun ar-quote-blank-in-shstruct-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of BLANK residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'shstruct 'ar-th-quote arg))

(defun ar-separate-blank-in-shstruct-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of BLANK residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'shstruct 'ar-th-separate arg))

(defun ar-show-blank-in-shstruct-atpt (&optional arg) 
  "Employ actions of SHOW at things class of BLANK residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'shstruct 'ar-th-show arg))

(defun ar-singlequote-blank-in-shstruct-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of BLANK residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'shstruct 'ar-th-singlequote arg))

(defun ar-slash-blank-in-shstruct-atpt (&optional arg) 
  "Employ actions of SLASH at things class of BLANK residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'shstruct 'ar-th-slash arg))

(defun ar-star-blank-in-shstruct-atpt (&optional arg) 
  "Employ actions of STAR at things class of BLANK residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'shstruct 'ar-th-star arg))

(defun ar-slashparen-blank-in-shstruct-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of BLANK residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'shstruct 'ar-th-slashparen arg))

(defun ar-sort-blank-in-shstruct-atpt (&optional arg) 
  "Employ actions of SORT at things class of BLANK residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'shstruct 'ar-th-sort arg))

(defun ar-trim-blank-in-shstruct-atpt (&optional arg) 
  "Employ actions of TRIM at things class of BLANK residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'shstruct 'ar-th-trim arg))

(defun ar-trim-left-blank-in-shstruct-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of BLANK residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'shstruct 'ar-th-trim-left arg))

(defun ar-trim-right-blank-in-shstruct-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of BLANK residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'shstruct 'ar-th-trim-right arg))

(defun ar-underscore-blank-in-shstruct-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of BLANK residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'shstruct 'ar-th-underscore arg))

(defun ar-whitespace-blank-in-shstruct-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of BLANK residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'blank 'shstruct 'ar-th-whitespace arg))

(defun ar-cntrl-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of  at things class of CNTRL residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'greateranglednested 'ar-th arg))

(defun ar-greaterangle-cntrl-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of CNTRL residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'greateranglednested 'ar-th-greaterangle arg))

(defun ar-lesserangle-cntrl-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of CNTRL residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'greateranglednested 'ar-th-lesserangle arg))

(defun ar-backslash-cntrl-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of CNTRL residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'greateranglednested 'ar-th-backslash arg))

(defun ar-colon-cntrl-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of COLON at things class of CNTRL residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'greateranglednested 'ar-th-colon arg))

(defun ar-beg-cntrl-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BEG at things class of CNTRL residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'greateranglednested 'ar-th-beg arg))

(defun ar-blok-cntrl-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BLOK at things class of CNTRL residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'greateranglednested 'ar-th-blok arg))

(defun ar-bounds-cntrl-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of CNTRL residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'greateranglednested 'ar-th-bounds arg))

(defun ar-brace-cntrl-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BRACE at things class of CNTRL residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'greateranglednested 'ar-th-brace arg))

(defun ar-bracket-cntrl-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of CNTRL residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'greateranglednested 'ar-th-bracket arg))

(defun ar-commatize-cntrl-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of CNTRL residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'greateranglednested 'ar-th-commatize arg))

(defun ar-comment-cntrl-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of CNTRL residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'greateranglednested 'ar-th-comment arg))

(defun ar-dollar-cntrl-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of CNTRL residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'greateranglednested 'ar-th-dollar arg))

(defun ar-doublebackslash-cntrl-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of CNTRL residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'greateranglednested 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-cntrl-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of CNTRL residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'greateranglednested 'ar-th-doublebacktick arg))

(defun ar-doublequote-cntrl-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of CNTRL residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'greateranglednested 'ar-th-doublequote arg))

(defun ar-doubleslash-cntrl-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of CNTRL residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'greateranglednested 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-cntrl-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of CNTRL residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'greateranglednested 'ar-th-doublebackslashparen arg))

(defun ar-end-cntrl-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of END at things class of CNTRL residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'greateranglednested 'ar-th-end arg))

(defun ar-escape-cntrl-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of CNTRL residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'greateranglednested 'ar-th-escape arg))

(defun ar-hide-cntrl-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of HIDE at things class of CNTRL residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'greateranglednested 'ar-th-hide arg))

(defun ar-hide-show-cntrl-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of CNTRL residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'greateranglednested 'ar-th-hide-show arg))

(defun ar-hyphen-cntrl-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of CNTRL residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'greateranglednested 'ar-th-hyphen arg))

(defun ar-kill-cntrl-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of KILL at things class of CNTRL residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'greateranglednested 'ar-th-kill arg))

(defun ar-leftrightsinglequote-cntrl-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of CNTRL residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'greateranglednested 'ar-th-leftrightsinglequote arg))

(defun ar-length-cntrl-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of CNTRL residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'greateranglednested 'ar-th-length arg))

(defun ar-parentize-cntrl-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of CNTRL residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'greateranglednested 'ar-th-parentize arg))

(defun ar-quote-cntrl-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of CNTRL residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'greateranglednested 'ar-th-quote arg))

(defun ar-separate-cntrl-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of CNTRL residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'greateranglednested 'ar-th-separate arg))

(defun ar-show-cntrl-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SHOW at things class of CNTRL residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'greateranglednested 'ar-th-show arg))

(defun ar-singlequote-cntrl-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of CNTRL residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'greateranglednested 'ar-th-singlequote arg))

(defun ar-slash-cntrl-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SLASH at things class of CNTRL residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'greateranglednested 'ar-th-slash arg))

(defun ar-star-cntrl-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of STAR at things class of CNTRL residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'greateranglednested 'ar-th-star arg))

(defun ar-slashparen-cntrl-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of CNTRL residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'greateranglednested 'ar-th-slashparen arg))

(defun ar-sort-cntrl-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SORT at things class of CNTRL residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'greateranglednested 'ar-th-sort arg))

(defun ar-trim-cntrl-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of TRIM at things class of CNTRL residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'greateranglednested 'ar-th-trim arg))

(defun ar-trim-left-cntrl-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of CNTRL residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'greateranglednested 'ar-th-trim-left arg))

(defun ar-trim-right-cntrl-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of CNTRL residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'greateranglednested 'ar-th-trim-right arg))

(defun ar-underscore-cntrl-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of CNTRL residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'greateranglednested 'ar-th-underscore arg))

(defun ar-whitespace-cntrl-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of CNTRL residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'greateranglednested 'ar-th-whitespace arg))

(defun ar-cntrl-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of  at things class of CNTRL residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'lesseranglednested 'ar-th arg))

(defun ar-greaterangle-cntrl-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of CNTRL residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'lesseranglednested 'ar-th-greaterangle arg))

(defun ar-lesserangle-cntrl-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of CNTRL residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'lesseranglednested 'ar-th-lesserangle arg))

(defun ar-backslash-cntrl-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of CNTRL residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'lesseranglednested 'ar-th-backslash arg))

(defun ar-colon-cntrl-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of COLON at things class of CNTRL residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'lesseranglednested 'ar-th-colon arg))

(defun ar-beg-cntrl-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BEG at things class of CNTRL residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'lesseranglednested 'ar-th-beg arg))

(defun ar-blok-cntrl-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BLOK at things class of CNTRL residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'lesseranglednested 'ar-th-blok arg))

(defun ar-bounds-cntrl-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of CNTRL residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'lesseranglednested 'ar-th-bounds arg))

(defun ar-brace-cntrl-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BRACE at things class of CNTRL residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'lesseranglednested 'ar-th-brace arg))

(defun ar-bracket-cntrl-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of CNTRL residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'lesseranglednested 'ar-th-bracket arg))

(defun ar-commatize-cntrl-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of CNTRL residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'lesseranglednested 'ar-th-commatize arg))

(defun ar-comment-cntrl-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of CNTRL residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'lesseranglednested 'ar-th-comment arg))

(defun ar-dollar-cntrl-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of CNTRL residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'lesseranglednested 'ar-th-dollar arg))

(defun ar-doublebackslash-cntrl-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of CNTRL residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'lesseranglednested 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-cntrl-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of CNTRL residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'lesseranglednested 'ar-th-doublebacktick arg))

(defun ar-doublequote-cntrl-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of CNTRL residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'lesseranglednested 'ar-th-doublequote arg))

(defun ar-doubleslash-cntrl-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of CNTRL residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'lesseranglednested 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-cntrl-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of CNTRL residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'lesseranglednested 'ar-th-doublebackslashparen arg))

(defun ar-end-cntrl-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of END at things class of CNTRL residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'lesseranglednested 'ar-th-end arg))

(defun ar-escape-cntrl-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of CNTRL residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'lesseranglednested 'ar-th-escape arg))

(defun ar-hide-cntrl-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of HIDE at things class of CNTRL residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'lesseranglednested 'ar-th-hide arg))

(defun ar-hide-show-cntrl-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of CNTRL residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'lesseranglednested 'ar-th-hide-show arg))

(defun ar-hyphen-cntrl-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of CNTRL residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'lesseranglednested 'ar-th-hyphen arg))

(defun ar-kill-cntrl-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of KILL at things class of CNTRL residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'lesseranglednested 'ar-th-kill arg))

(defun ar-leftrightsinglequote-cntrl-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of CNTRL residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'lesseranglednested 'ar-th-leftrightsinglequote arg))

(defun ar-length-cntrl-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of CNTRL residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'lesseranglednested 'ar-th-length arg))

(defun ar-parentize-cntrl-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of CNTRL residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'lesseranglednested 'ar-th-parentize arg))

(defun ar-quote-cntrl-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of CNTRL residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'lesseranglednested 'ar-th-quote arg))

(defun ar-separate-cntrl-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of CNTRL residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'lesseranglednested 'ar-th-separate arg))

(defun ar-show-cntrl-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SHOW at things class of CNTRL residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'lesseranglednested 'ar-th-show arg))

(defun ar-singlequote-cntrl-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of CNTRL residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'lesseranglednested 'ar-th-singlequote arg))

(defun ar-slash-cntrl-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SLASH at things class of CNTRL residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'lesseranglednested 'ar-th-slash arg))

(defun ar-star-cntrl-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of STAR at things class of CNTRL residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'lesseranglednested 'ar-th-star arg))

(defun ar-slashparen-cntrl-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of CNTRL residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'lesseranglednested 'ar-th-slashparen arg))

(defun ar-sort-cntrl-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SORT at things class of CNTRL residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'lesseranglednested 'ar-th-sort arg))

(defun ar-trim-cntrl-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of TRIM at things class of CNTRL residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'lesseranglednested 'ar-th-trim arg))

(defun ar-trim-left-cntrl-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of CNTRL residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'lesseranglednested 'ar-th-trim-left arg))

(defun ar-trim-right-cntrl-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of CNTRL residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'lesseranglednested 'ar-th-trim-right arg))

(defun ar-underscore-cntrl-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of CNTRL residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'lesseranglednested 'ar-th-underscore arg))

(defun ar-whitespace-cntrl-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of CNTRL residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'lesseranglednested 'ar-th-whitespace arg))

(defun ar-cntrl-in-buffer-atpt (&optional arg) 
  "Employ actions of  at things class of CNTRL residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'buffer 'ar-th arg))

(defun ar-greaterangle-cntrl-in-buffer-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of CNTRL residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'buffer 'ar-th-greaterangle arg))

(defun ar-lesserangle-cntrl-in-buffer-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of CNTRL residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'buffer 'ar-th-lesserangle arg))

(defun ar-backslash-cntrl-in-buffer-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of CNTRL residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'buffer 'ar-th-backslash arg))

(defun ar-colon-cntrl-in-buffer-atpt (&optional arg) 
  "Employ actions of COLON at things class of CNTRL residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'buffer 'ar-th-colon arg))

(defun ar-beg-cntrl-in-buffer-atpt (&optional arg) 
  "Employ actions of BEG at things class of CNTRL residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'buffer 'ar-th-beg arg))

(defun ar-blok-cntrl-in-buffer-atpt (&optional arg) 
  "Employ actions of BLOK at things class of CNTRL residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'buffer 'ar-th-blok arg))

(defun ar-bounds-cntrl-in-buffer-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of CNTRL residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'buffer 'ar-th-bounds arg))

(defun ar-brace-cntrl-in-buffer-atpt (&optional arg) 
  "Employ actions of BRACE at things class of CNTRL residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'buffer 'ar-th-brace arg))

(defun ar-bracket-cntrl-in-buffer-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of CNTRL residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'buffer 'ar-th-bracket arg))

(defun ar-commatize-cntrl-in-buffer-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of CNTRL residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'buffer 'ar-th-commatize arg))

(defun ar-comment-cntrl-in-buffer-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of CNTRL residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'buffer 'ar-th-comment arg))

(defun ar-dollar-cntrl-in-buffer-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of CNTRL residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'buffer 'ar-th-dollar arg))

(defun ar-doublebackslash-cntrl-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of CNTRL residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'buffer 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-cntrl-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of CNTRL residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'buffer 'ar-th-doublebacktick arg))

(defun ar-doublequote-cntrl-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of CNTRL residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'buffer 'ar-th-doublequote arg))

(defun ar-doubleslash-cntrl-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of CNTRL residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'buffer 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-cntrl-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of CNTRL residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'buffer 'ar-th-doublebackslashparen arg))

(defun ar-end-cntrl-in-buffer-atpt (&optional arg) 
  "Employ actions of END at things class of CNTRL residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'buffer 'ar-th-end arg))

(defun ar-escape-cntrl-in-buffer-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of CNTRL residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'buffer 'ar-th-escape arg))

(defun ar-hide-cntrl-in-buffer-atpt (&optional arg) 
  "Employ actions of HIDE at things class of CNTRL residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'buffer 'ar-th-hide arg))

(defun ar-hide-show-cntrl-in-buffer-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of CNTRL residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'buffer 'ar-th-hide-show arg))

(defun ar-hyphen-cntrl-in-buffer-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of CNTRL residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'buffer 'ar-th-hyphen arg))

(defun ar-kill-cntrl-in-buffer-atpt (&optional arg) 
  "Employ actions of KILL at things class of CNTRL residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'buffer 'ar-th-kill arg))

(defun ar-leftrightsinglequote-cntrl-in-buffer-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of CNTRL residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'buffer 'ar-th-leftrightsinglequote arg))

(defun ar-length-cntrl-in-buffer-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of CNTRL residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'buffer 'ar-th-length arg))

(defun ar-parentize-cntrl-in-buffer-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of CNTRL residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'buffer 'ar-th-parentize arg))

(defun ar-quote-cntrl-in-buffer-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of CNTRL residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'buffer 'ar-th-quote arg))

(defun ar-separate-cntrl-in-buffer-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of CNTRL residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'buffer 'ar-th-separate arg))

(defun ar-show-cntrl-in-buffer-atpt (&optional arg) 
  "Employ actions of SHOW at things class of CNTRL residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'buffer 'ar-th-show arg))

(defun ar-singlequote-cntrl-in-buffer-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of CNTRL residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'buffer 'ar-th-singlequote arg))

(defun ar-slash-cntrl-in-buffer-atpt (&optional arg) 
  "Employ actions of SLASH at things class of CNTRL residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'buffer 'ar-th-slash arg))

(defun ar-star-cntrl-in-buffer-atpt (&optional arg) 
  "Employ actions of STAR at things class of CNTRL residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'buffer 'ar-th-star arg))

(defun ar-slashparen-cntrl-in-buffer-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of CNTRL residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'buffer 'ar-th-slashparen arg))

(defun ar-sort-cntrl-in-buffer-atpt (&optional arg) 
  "Employ actions of SORT at things class of CNTRL residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'buffer 'ar-th-sort arg))

(defun ar-trim-cntrl-in-buffer-atpt (&optional arg) 
  "Employ actions of TRIM at things class of CNTRL residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'buffer 'ar-th-trim arg))

(defun ar-trim-left-cntrl-in-buffer-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of CNTRL residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'buffer 'ar-th-trim-left arg))

(defun ar-trim-right-cntrl-in-buffer-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of CNTRL residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'buffer 'ar-th-trim-right arg))

(defun ar-underscore-cntrl-in-buffer-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of CNTRL residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'buffer 'ar-th-underscore arg))

(defun ar-whitespace-cntrl-in-buffer-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of CNTRL residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'buffer 'ar-th-whitespace arg))

(defun ar-cntrl-in-comment-atpt (&optional arg) 
  "Employ actions of  at things class of CNTRL residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'comment 'ar-th arg))

(defun ar-greaterangle-cntrl-in-comment-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of CNTRL residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'comment 'ar-th-greaterangle arg))

(defun ar-lesserangle-cntrl-in-comment-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of CNTRL residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'comment 'ar-th-lesserangle arg))

(defun ar-backslash-cntrl-in-comment-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of CNTRL residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'comment 'ar-th-backslash arg))

(defun ar-colon-cntrl-in-comment-atpt (&optional arg) 
  "Employ actions of COLON at things class of CNTRL residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'comment 'ar-th-colon arg))

(defun ar-beg-cntrl-in-comment-atpt (&optional arg) 
  "Employ actions of BEG at things class of CNTRL residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'comment 'ar-th-beg arg))

(defun ar-blok-cntrl-in-comment-atpt (&optional arg) 
  "Employ actions of BLOK at things class of CNTRL residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'comment 'ar-th-blok arg))

(defun ar-bounds-cntrl-in-comment-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of CNTRL residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'comment 'ar-th-bounds arg))

(defun ar-brace-cntrl-in-comment-atpt (&optional arg) 
  "Employ actions of BRACE at things class of CNTRL residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'comment 'ar-th-brace arg))

(defun ar-bracket-cntrl-in-comment-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of CNTRL residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'comment 'ar-th-bracket arg))

(defun ar-commatize-cntrl-in-comment-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of CNTRL residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'comment 'ar-th-commatize arg))

(defun ar-comment-cntrl-in-comment-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of CNTRL residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'comment 'ar-th-comment arg))

(defun ar-dollar-cntrl-in-comment-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of CNTRL residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'comment 'ar-th-dollar arg))

(defun ar-doublebackslash-cntrl-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of CNTRL residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'comment 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-cntrl-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of CNTRL residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'comment 'ar-th-doublebacktick arg))

(defun ar-doublequote-cntrl-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of CNTRL residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'comment 'ar-th-doublequote arg))

(defun ar-doubleslash-cntrl-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of CNTRL residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'comment 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-cntrl-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of CNTRL residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'comment 'ar-th-doublebackslashparen arg))

(defun ar-end-cntrl-in-comment-atpt (&optional arg) 
  "Employ actions of END at things class of CNTRL residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'comment 'ar-th-end arg))

(defun ar-escape-cntrl-in-comment-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of CNTRL residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'comment 'ar-th-escape arg))

(defun ar-hide-cntrl-in-comment-atpt (&optional arg) 
  "Employ actions of HIDE at things class of CNTRL residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'comment 'ar-th-hide arg))

(defun ar-hide-show-cntrl-in-comment-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of CNTRL residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'comment 'ar-th-hide-show arg))

(defun ar-hyphen-cntrl-in-comment-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of CNTRL residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'comment 'ar-th-hyphen arg))

(defun ar-kill-cntrl-in-comment-atpt (&optional arg) 
  "Employ actions of KILL at things class of CNTRL residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'comment 'ar-th-kill arg))

(defun ar-leftrightsinglequote-cntrl-in-comment-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of CNTRL residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'comment 'ar-th-leftrightsinglequote arg))

(defun ar-length-cntrl-in-comment-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of CNTRL residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'comment 'ar-th-length arg))

(defun ar-parentize-cntrl-in-comment-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of CNTRL residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'comment 'ar-th-parentize arg))

(defun ar-quote-cntrl-in-comment-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of CNTRL residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'comment 'ar-th-quote arg))

(defun ar-separate-cntrl-in-comment-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of CNTRL residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'comment 'ar-th-separate arg))

(defun ar-show-cntrl-in-comment-atpt (&optional arg) 
  "Employ actions of SHOW at things class of CNTRL residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'comment 'ar-th-show arg))

(defun ar-singlequote-cntrl-in-comment-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of CNTRL residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'comment 'ar-th-singlequote arg))

(defun ar-slash-cntrl-in-comment-atpt (&optional arg) 
  "Employ actions of SLASH at things class of CNTRL residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'comment 'ar-th-slash arg))

(defun ar-star-cntrl-in-comment-atpt (&optional arg) 
  "Employ actions of STAR at things class of CNTRL residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'comment 'ar-th-star arg))

(defun ar-slashparen-cntrl-in-comment-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of CNTRL residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'comment 'ar-th-slashparen arg))

(defun ar-sort-cntrl-in-comment-atpt (&optional arg) 
  "Employ actions of SORT at things class of CNTRL residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'comment 'ar-th-sort arg))

(defun ar-trim-cntrl-in-comment-atpt (&optional arg) 
  "Employ actions of TRIM at things class of CNTRL residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'comment 'ar-th-trim arg))

(defun ar-trim-left-cntrl-in-comment-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of CNTRL residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'comment 'ar-th-trim-left arg))

(defun ar-trim-right-cntrl-in-comment-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of CNTRL residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'comment 'ar-th-trim-right arg))

(defun ar-underscore-cntrl-in-comment-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of CNTRL residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'comment 'ar-th-underscore arg))

(defun ar-whitespace-cntrl-in-comment-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of CNTRL residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'comment 'ar-th-whitespace arg))

(defun ar-cntrl-in-csv-atpt (&optional arg) 
  "Employ actions of  at things class of CNTRL residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'csv 'ar-th arg))

(defun ar-greaterangle-cntrl-in-csv-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of CNTRL residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'csv 'ar-th-greaterangle arg))

(defun ar-lesserangle-cntrl-in-csv-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of CNTRL residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'csv 'ar-th-lesserangle arg))

(defun ar-backslash-cntrl-in-csv-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of CNTRL residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'csv 'ar-th-backslash arg))

(defun ar-colon-cntrl-in-csv-atpt (&optional arg) 
  "Employ actions of COLON at things class of CNTRL residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'csv 'ar-th-colon arg))

(defun ar-beg-cntrl-in-csv-atpt (&optional arg) 
  "Employ actions of BEG at things class of CNTRL residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'csv 'ar-th-beg arg))

(defun ar-blok-cntrl-in-csv-atpt (&optional arg) 
  "Employ actions of BLOK at things class of CNTRL residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'csv 'ar-th-blok arg))

(defun ar-bounds-cntrl-in-csv-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of CNTRL residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'csv 'ar-th-bounds arg))

(defun ar-brace-cntrl-in-csv-atpt (&optional arg) 
  "Employ actions of BRACE at things class of CNTRL residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'csv 'ar-th-brace arg))

(defun ar-bracket-cntrl-in-csv-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of CNTRL residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'csv 'ar-th-bracket arg))

(defun ar-commatize-cntrl-in-csv-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of CNTRL residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'csv 'ar-th-commatize arg))

(defun ar-comment-cntrl-in-csv-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of CNTRL residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'csv 'ar-th-comment arg))

(defun ar-dollar-cntrl-in-csv-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of CNTRL residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'csv 'ar-th-dollar arg))

(defun ar-doublebackslash-cntrl-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of CNTRL residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'csv 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-cntrl-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of CNTRL residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'csv 'ar-th-doublebacktick arg))

(defun ar-doublequote-cntrl-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of CNTRL residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'csv 'ar-th-doublequote arg))

(defun ar-doubleslash-cntrl-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of CNTRL residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'csv 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-cntrl-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of CNTRL residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'csv 'ar-th-doublebackslashparen arg))

(defun ar-end-cntrl-in-csv-atpt (&optional arg) 
  "Employ actions of END at things class of CNTRL residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'csv 'ar-th-end arg))

(defun ar-escape-cntrl-in-csv-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of CNTRL residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'csv 'ar-th-escape arg))

(defun ar-hide-cntrl-in-csv-atpt (&optional arg) 
  "Employ actions of HIDE at things class of CNTRL residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'csv 'ar-th-hide arg))

(defun ar-hide-show-cntrl-in-csv-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of CNTRL residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'csv 'ar-th-hide-show arg))

(defun ar-hyphen-cntrl-in-csv-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of CNTRL residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'csv 'ar-th-hyphen arg))

(defun ar-kill-cntrl-in-csv-atpt (&optional arg) 
  "Employ actions of KILL at things class of CNTRL residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'csv 'ar-th-kill arg))

(defun ar-leftrightsinglequote-cntrl-in-csv-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of CNTRL residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'csv 'ar-th-leftrightsinglequote arg))

(defun ar-length-cntrl-in-csv-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of CNTRL residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'csv 'ar-th-length arg))

(defun ar-parentize-cntrl-in-csv-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of CNTRL residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'csv 'ar-th-parentize arg))

(defun ar-quote-cntrl-in-csv-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of CNTRL residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'csv 'ar-th-quote arg))

(defun ar-separate-cntrl-in-csv-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of CNTRL residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'csv 'ar-th-separate arg))

(defun ar-show-cntrl-in-csv-atpt (&optional arg) 
  "Employ actions of SHOW at things class of CNTRL residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'csv 'ar-th-show arg))

(defun ar-singlequote-cntrl-in-csv-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of CNTRL residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'csv 'ar-th-singlequote arg))

(defun ar-slash-cntrl-in-csv-atpt (&optional arg) 
  "Employ actions of SLASH at things class of CNTRL residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'csv 'ar-th-slash arg))

(defun ar-star-cntrl-in-csv-atpt (&optional arg) 
  "Employ actions of STAR at things class of CNTRL residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'csv 'ar-th-star arg))

(defun ar-slashparen-cntrl-in-csv-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of CNTRL residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'csv 'ar-th-slashparen arg))

(defun ar-sort-cntrl-in-csv-atpt (&optional arg) 
  "Employ actions of SORT at things class of CNTRL residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'csv 'ar-th-sort arg))

(defun ar-trim-cntrl-in-csv-atpt (&optional arg) 
  "Employ actions of TRIM at things class of CNTRL residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'csv 'ar-th-trim arg))

(defun ar-trim-left-cntrl-in-csv-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of CNTRL residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'csv 'ar-th-trim-left arg))

(defun ar-trim-right-cntrl-in-csv-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of CNTRL residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'csv 'ar-th-trim-right arg))

(defun ar-underscore-cntrl-in-csv-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of CNTRL residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'csv 'ar-th-underscore arg))

(defun ar-whitespace-cntrl-in-csv-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of CNTRL residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'csv 'ar-th-whitespace arg))

(defun ar-cntrl-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of  at things class of CNTRL residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'filenamenondirectory 'ar-th arg))

(defun ar-greaterangle-cntrl-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of CNTRL residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'filenamenondirectory 'ar-th-greaterangle arg))

(defun ar-lesserangle-cntrl-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of CNTRL residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'filenamenondirectory 'ar-th-lesserangle arg))

(defun ar-backslash-cntrl-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of CNTRL residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'filenamenondirectory 'ar-th-backslash arg))

(defun ar-colon-cntrl-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of COLON at things class of CNTRL residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'filenamenondirectory 'ar-th-colon arg))

(defun ar-beg-cntrl-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BEG at things class of CNTRL residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'filenamenondirectory 'ar-th-beg arg))

(defun ar-blok-cntrl-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BLOK at things class of CNTRL residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'filenamenondirectory 'ar-th-blok arg))

(defun ar-bounds-cntrl-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of CNTRL residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'filenamenondirectory 'ar-th-bounds arg))

(defun ar-brace-cntrl-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BRACE at things class of CNTRL residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'filenamenondirectory 'ar-th-brace arg))

(defun ar-bracket-cntrl-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of CNTRL residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'filenamenondirectory 'ar-th-bracket arg))

(defun ar-commatize-cntrl-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of CNTRL residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'filenamenondirectory 'ar-th-commatize arg))

(defun ar-comment-cntrl-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of CNTRL residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'filenamenondirectory 'ar-th-comment arg))

(defun ar-dollar-cntrl-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of CNTRL residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'filenamenondirectory 'ar-th-dollar arg))

(defun ar-doublebackslash-cntrl-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of CNTRL residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'filenamenondirectory 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-cntrl-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of CNTRL residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'filenamenondirectory 'ar-th-doublebacktick arg))

(defun ar-doublequote-cntrl-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of CNTRL residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'filenamenondirectory 'ar-th-doublequote arg))

(defun ar-doubleslash-cntrl-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of CNTRL residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'filenamenondirectory 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-cntrl-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of CNTRL residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'filenamenondirectory 'ar-th-doublebackslashparen arg))

(defun ar-end-cntrl-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of END at things class of CNTRL residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'filenamenondirectory 'ar-th-end arg))

(defun ar-escape-cntrl-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of CNTRL residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'filenamenondirectory 'ar-th-escape arg))

(defun ar-hide-cntrl-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of HIDE at things class of CNTRL residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'filenamenondirectory 'ar-th-hide arg))

(defun ar-hide-show-cntrl-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of CNTRL residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'filenamenondirectory 'ar-th-hide-show arg))

(defun ar-hyphen-cntrl-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of CNTRL residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'filenamenondirectory 'ar-th-hyphen arg))

(defun ar-kill-cntrl-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of KILL at things class of CNTRL residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'filenamenondirectory 'ar-th-kill arg))

(defun ar-leftrightsinglequote-cntrl-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of CNTRL residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'filenamenondirectory 'ar-th-leftrightsinglequote arg))

(defun ar-length-cntrl-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of CNTRL residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'filenamenondirectory 'ar-th-length arg))

(defun ar-parentize-cntrl-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of CNTRL residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'filenamenondirectory 'ar-th-parentize arg))

(defun ar-quote-cntrl-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of CNTRL residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'filenamenondirectory 'ar-th-quote arg))

(defun ar-separate-cntrl-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of CNTRL residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'filenamenondirectory 'ar-th-separate arg))

(defun ar-show-cntrl-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SHOW at things class of CNTRL residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'filenamenondirectory 'ar-th-show arg))

(defun ar-singlequote-cntrl-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of CNTRL residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'filenamenondirectory 'ar-th-singlequote arg))

(defun ar-slash-cntrl-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SLASH at things class of CNTRL residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'filenamenondirectory 'ar-th-slash arg))

(defun ar-star-cntrl-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of STAR at things class of CNTRL residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'filenamenondirectory 'ar-th-star arg))

(defun ar-slashparen-cntrl-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of CNTRL residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'filenamenondirectory 'ar-th-slashparen arg))

(defun ar-sort-cntrl-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SORT at things class of CNTRL residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'filenamenondirectory 'ar-th-sort arg))

(defun ar-trim-cntrl-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of TRIM at things class of CNTRL residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'filenamenondirectory 'ar-th-trim arg))

(defun ar-trim-left-cntrl-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of CNTRL residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'filenamenondirectory 'ar-th-trim-left arg))

(defun ar-trim-right-cntrl-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of CNTRL residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'filenamenondirectory 'ar-th-trim-right arg))

(defun ar-underscore-cntrl-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of CNTRL residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'filenamenondirectory 'ar-th-underscore arg))

(defun ar-whitespace-cntrl-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of CNTRL residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'filenamenondirectory 'ar-th-whitespace arg))

(defun ar-cntrl-in-function-atpt (&optional arg) 
  "Employ actions of  at things class of CNTRL residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'function 'ar-th arg))

(defun ar-greaterangle-cntrl-in-function-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of CNTRL residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'function 'ar-th-greaterangle arg))

(defun ar-lesserangle-cntrl-in-function-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of CNTRL residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'function 'ar-th-lesserangle arg))

(defun ar-backslash-cntrl-in-function-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of CNTRL residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'function 'ar-th-backslash arg))

(defun ar-colon-cntrl-in-function-atpt (&optional arg) 
  "Employ actions of COLON at things class of CNTRL residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'function 'ar-th-colon arg))

(defun ar-beg-cntrl-in-function-atpt (&optional arg) 
  "Employ actions of BEG at things class of CNTRL residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'function 'ar-th-beg arg))

(defun ar-blok-cntrl-in-function-atpt (&optional arg) 
  "Employ actions of BLOK at things class of CNTRL residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'function 'ar-th-blok arg))

(defun ar-bounds-cntrl-in-function-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of CNTRL residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'function 'ar-th-bounds arg))

(defun ar-brace-cntrl-in-function-atpt (&optional arg) 
  "Employ actions of BRACE at things class of CNTRL residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'function 'ar-th-brace arg))

(defun ar-bracket-cntrl-in-function-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of CNTRL residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'function 'ar-th-bracket arg))

(defun ar-commatize-cntrl-in-function-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of CNTRL residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'function 'ar-th-commatize arg))

(defun ar-comment-cntrl-in-function-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of CNTRL residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'function 'ar-th-comment arg))

(defun ar-dollar-cntrl-in-function-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of CNTRL residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'function 'ar-th-dollar arg))

(defun ar-doublebackslash-cntrl-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of CNTRL residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'function 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-cntrl-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of CNTRL residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'function 'ar-th-doublebacktick arg))

(defun ar-doublequote-cntrl-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of CNTRL residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'function 'ar-th-doublequote arg))

(defun ar-doubleslash-cntrl-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of CNTRL residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'function 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-cntrl-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of CNTRL residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'function 'ar-th-doublebackslashparen arg))

(defun ar-end-cntrl-in-function-atpt (&optional arg) 
  "Employ actions of END at things class of CNTRL residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'function 'ar-th-end arg))

(defun ar-escape-cntrl-in-function-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of CNTRL residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'function 'ar-th-escape arg))

(defun ar-hide-cntrl-in-function-atpt (&optional arg) 
  "Employ actions of HIDE at things class of CNTRL residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'function 'ar-th-hide arg))

(defun ar-hide-show-cntrl-in-function-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of CNTRL residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'function 'ar-th-hide-show arg))

(defun ar-hyphen-cntrl-in-function-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of CNTRL residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'function 'ar-th-hyphen arg))

(defun ar-kill-cntrl-in-function-atpt (&optional arg) 
  "Employ actions of KILL at things class of CNTRL residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'function 'ar-th-kill arg))

(defun ar-leftrightsinglequote-cntrl-in-function-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of CNTRL residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'function 'ar-th-leftrightsinglequote arg))

(defun ar-length-cntrl-in-function-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of CNTRL residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'function 'ar-th-length arg))

(defun ar-parentize-cntrl-in-function-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of CNTRL residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'function 'ar-th-parentize arg))

(defun ar-quote-cntrl-in-function-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of CNTRL residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'function 'ar-th-quote arg))

(defun ar-separate-cntrl-in-function-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of CNTRL residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'function 'ar-th-separate arg))

(defun ar-show-cntrl-in-function-atpt (&optional arg) 
  "Employ actions of SHOW at things class of CNTRL residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'function 'ar-th-show arg))

(defun ar-singlequote-cntrl-in-function-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of CNTRL residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'function 'ar-th-singlequote arg))

(defun ar-slash-cntrl-in-function-atpt (&optional arg) 
  "Employ actions of SLASH at things class of CNTRL residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'function 'ar-th-slash arg))

(defun ar-star-cntrl-in-function-atpt (&optional arg) 
  "Employ actions of STAR at things class of CNTRL residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'function 'ar-th-star arg))

(defun ar-slashparen-cntrl-in-function-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of CNTRL residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'function 'ar-th-slashparen arg))

(defun ar-sort-cntrl-in-function-atpt (&optional arg) 
  "Employ actions of SORT at things class of CNTRL residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'function 'ar-th-sort arg))

(defun ar-trim-cntrl-in-function-atpt (&optional arg) 
  "Employ actions of TRIM at things class of CNTRL residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'function 'ar-th-trim arg))

(defun ar-trim-left-cntrl-in-function-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of CNTRL residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'function 'ar-th-trim-left arg))

(defun ar-trim-right-cntrl-in-function-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of CNTRL residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'function 'ar-th-trim-right arg))

(defun ar-underscore-cntrl-in-function-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of CNTRL residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'function 'ar-th-underscore arg))

(defun ar-whitespace-cntrl-in-function-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of CNTRL residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'function 'ar-th-whitespace arg))

(defun ar-cntrl-in-line-atpt (&optional arg) 
  "Employ actions of  at things class of CNTRL residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'line 'ar-th arg))

(defun ar-greaterangle-cntrl-in-line-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of CNTRL residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'line 'ar-th-greaterangle arg))

(defun ar-lesserangle-cntrl-in-line-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of CNTRL residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'line 'ar-th-lesserangle arg))

(defun ar-backslash-cntrl-in-line-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of CNTRL residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'line 'ar-th-backslash arg))

(defun ar-colon-cntrl-in-line-atpt (&optional arg) 
  "Employ actions of COLON at things class of CNTRL residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'line 'ar-th-colon arg))

(defun ar-beg-cntrl-in-line-atpt (&optional arg) 
  "Employ actions of BEG at things class of CNTRL residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'line 'ar-th-beg arg))

(defun ar-blok-cntrl-in-line-atpt (&optional arg) 
  "Employ actions of BLOK at things class of CNTRL residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'line 'ar-th-blok arg))

(defun ar-bounds-cntrl-in-line-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of CNTRL residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'line 'ar-th-bounds arg))

(defun ar-brace-cntrl-in-line-atpt (&optional arg) 
  "Employ actions of BRACE at things class of CNTRL residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'line 'ar-th-brace arg))

(defun ar-bracket-cntrl-in-line-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of CNTRL residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'line 'ar-th-bracket arg))

(defun ar-commatize-cntrl-in-line-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of CNTRL residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'line 'ar-th-commatize arg))

(defun ar-comment-cntrl-in-line-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of CNTRL residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'line 'ar-th-comment arg))

(defun ar-dollar-cntrl-in-line-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of CNTRL residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'line 'ar-th-dollar arg))

(defun ar-doublebackslash-cntrl-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of CNTRL residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'line 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-cntrl-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of CNTRL residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'line 'ar-th-doublebacktick arg))

(defun ar-doublequote-cntrl-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of CNTRL residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'line 'ar-th-doublequote arg))

(defun ar-doubleslash-cntrl-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of CNTRL residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'line 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-cntrl-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of CNTRL residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'line 'ar-th-doublebackslashparen arg))

(defun ar-end-cntrl-in-line-atpt (&optional arg) 
  "Employ actions of END at things class of CNTRL residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'line 'ar-th-end arg))

(defun ar-escape-cntrl-in-line-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of CNTRL residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'line 'ar-th-escape arg))

(defun ar-hide-cntrl-in-line-atpt (&optional arg) 
  "Employ actions of HIDE at things class of CNTRL residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'line 'ar-th-hide arg))

(defun ar-hide-show-cntrl-in-line-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of CNTRL residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'line 'ar-th-hide-show arg))

(defun ar-hyphen-cntrl-in-line-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of CNTRL residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'line 'ar-th-hyphen arg))

(defun ar-kill-cntrl-in-line-atpt (&optional arg) 
  "Employ actions of KILL at things class of CNTRL residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'line 'ar-th-kill arg))

(defun ar-leftrightsinglequote-cntrl-in-line-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of CNTRL residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'line 'ar-th-leftrightsinglequote arg))

(defun ar-length-cntrl-in-line-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of CNTRL residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'line 'ar-th-length arg))

(defun ar-parentize-cntrl-in-line-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of CNTRL residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'line 'ar-th-parentize arg))

(defun ar-quote-cntrl-in-line-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of CNTRL residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'line 'ar-th-quote arg))

(defun ar-separate-cntrl-in-line-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of CNTRL residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'line 'ar-th-separate arg))

(defun ar-show-cntrl-in-line-atpt (&optional arg) 
  "Employ actions of SHOW at things class of CNTRL residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'line 'ar-th-show arg))

(defun ar-singlequote-cntrl-in-line-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of CNTRL residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'line 'ar-th-singlequote arg))

(defun ar-slash-cntrl-in-line-atpt (&optional arg) 
  "Employ actions of SLASH at things class of CNTRL residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'line 'ar-th-slash arg))

(defun ar-star-cntrl-in-line-atpt (&optional arg) 
  "Employ actions of STAR at things class of CNTRL residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'line 'ar-th-star arg))

(defun ar-slashparen-cntrl-in-line-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of CNTRL residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'line 'ar-th-slashparen arg))

(defun ar-sort-cntrl-in-line-atpt (&optional arg) 
  "Employ actions of SORT at things class of CNTRL residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'line 'ar-th-sort arg))

(defun ar-trim-cntrl-in-line-atpt (&optional arg) 
  "Employ actions of TRIM at things class of CNTRL residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'line 'ar-th-trim arg))

(defun ar-trim-left-cntrl-in-line-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of CNTRL residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'line 'ar-th-trim-left arg))

(defun ar-trim-right-cntrl-in-line-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of CNTRL residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'line 'ar-th-trim-right arg))

(defun ar-underscore-cntrl-in-line-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of CNTRL residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'line 'ar-th-underscore arg))

(defun ar-whitespace-cntrl-in-line-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of CNTRL residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'line 'ar-th-whitespace arg))

(defun ar-cntrl-in-list-atpt (&optional arg) 
  "Employ actions of  at things class of CNTRL residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'list 'ar-th arg))

(defun ar-greaterangle-cntrl-in-list-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of CNTRL residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'list 'ar-th-greaterangle arg))

(defun ar-lesserangle-cntrl-in-list-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of CNTRL residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'list 'ar-th-lesserangle arg))

(defun ar-backslash-cntrl-in-list-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of CNTRL residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'list 'ar-th-backslash arg))

(defun ar-colon-cntrl-in-list-atpt (&optional arg) 
  "Employ actions of COLON at things class of CNTRL residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'list 'ar-th-colon arg))

(defun ar-beg-cntrl-in-list-atpt (&optional arg) 
  "Employ actions of BEG at things class of CNTRL residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'list 'ar-th-beg arg))

(defun ar-blok-cntrl-in-list-atpt (&optional arg) 
  "Employ actions of BLOK at things class of CNTRL residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'list 'ar-th-blok arg))

(defun ar-bounds-cntrl-in-list-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of CNTRL residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'list 'ar-th-bounds arg))

(defun ar-brace-cntrl-in-list-atpt (&optional arg) 
  "Employ actions of BRACE at things class of CNTRL residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'list 'ar-th-brace arg))

(defun ar-bracket-cntrl-in-list-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of CNTRL residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'list 'ar-th-bracket arg))

(defun ar-commatize-cntrl-in-list-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of CNTRL residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'list 'ar-th-commatize arg))

(defun ar-comment-cntrl-in-list-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of CNTRL residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'list 'ar-th-comment arg))

(defun ar-dollar-cntrl-in-list-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of CNTRL residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'list 'ar-th-dollar arg))

(defun ar-doublebackslash-cntrl-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of CNTRL residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'list 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-cntrl-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of CNTRL residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'list 'ar-th-doublebacktick arg))

(defun ar-doublequote-cntrl-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of CNTRL residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'list 'ar-th-doublequote arg))

(defun ar-doubleslash-cntrl-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of CNTRL residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'list 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-cntrl-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of CNTRL residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'list 'ar-th-doublebackslashparen arg))

(defun ar-end-cntrl-in-list-atpt (&optional arg) 
  "Employ actions of END at things class of CNTRL residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'list 'ar-th-end arg))

(defun ar-escape-cntrl-in-list-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of CNTRL residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'list 'ar-th-escape arg))

(defun ar-hide-cntrl-in-list-atpt (&optional arg) 
  "Employ actions of HIDE at things class of CNTRL residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'list 'ar-th-hide arg))

(defun ar-hide-show-cntrl-in-list-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of CNTRL residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'list 'ar-th-hide-show arg))

(defun ar-hyphen-cntrl-in-list-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of CNTRL residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'list 'ar-th-hyphen arg))

(defun ar-kill-cntrl-in-list-atpt (&optional arg) 
  "Employ actions of KILL at things class of CNTRL residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'list 'ar-th-kill arg))

(defun ar-leftrightsinglequote-cntrl-in-list-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of CNTRL residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'list 'ar-th-leftrightsinglequote arg))

(defun ar-length-cntrl-in-list-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of CNTRL residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'list 'ar-th-length arg))

(defun ar-parentize-cntrl-in-list-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of CNTRL residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'list 'ar-th-parentize arg))

(defun ar-quote-cntrl-in-list-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of CNTRL residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'list 'ar-th-quote arg))

(defun ar-separate-cntrl-in-list-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of CNTRL residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'list 'ar-th-separate arg))

(defun ar-show-cntrl-in-list-atpt (&optional arg) 
  "Employ actions of SHOW at things class of CNTRL residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'list 'ar-th-show arg))

(defun ar-singlequote-cntrl-in-list-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of CNTRL residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'list 'ar-th-singlequote arg))

(defun ar-slash-cntrl-in-list-atpt (&optional arg) 
  "Employ actions of SLASH at things class of CNTRL residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'list 'ar-th-slash arg))

(defun ar-star-cntrl-in-list-atpt (&optional arg) 
  "Employ actions of STAR at things class of CNTRL residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'list 'ar-th-star arg))

(defun ar-slashparen-cntrl-in-list-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of CNTRL residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'list 'ar-th-slashparen arg))

(defun ar-sort-cntrl-in-list-atpt (&optional arg) 
  "Employ actions of SORT at things class of CNTRL residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'list 'ar-th-sort arg))

(defun ar-trim-cntrl-in-list-atpt (&optional arg) 
  "Employ actions of TRIM at things class of CNTRL residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'list 'ar-th-trim arg))

(defun ar-trim-left-cntrl-in-list-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of CNTRL residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'list 'ar-th-trim-left arg))

(defun ar-trim-right-cntrl-in-list-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of CNTRL residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'list 'ar-th-trim-right arg))

(defun ar-underscore-cntrl-in-list-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of CNTRL residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'list 'ar-th-underscore arg))

(defun ar-whitespace-cntrl-in-list-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of CNTRL residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'list 'ar-th-whitespace arg))

(defun ar-cntrl-in-name-atpt (&optional arg) 
  "Employ actions of  at things class of CNTRL residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'name 'ar-th arg))

(defun ar-greaterangle-cntrl-in-name-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of CNTRL residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'name 'ar-th-greaterangle arg))

(defun ar-lesserangle-cntrl-in-name-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of CNTRL residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'name 'ar-th-lesserangle arg))

(defun ar-backslash-cntrl-in-name-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of CNTRL residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'name 'ar-th-backslash arg))

(defun ar-colon-cntrl-in-name-atpt (&optional arg) 
  "Employ actions of COLON at things class of CNTRL residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'name 'ar-th-colon arg))

(defun ar-beg-cntrl-in-name-atpt (&optional arg) 
  "Employ actions of BEG at things class of CNTRL residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'name 'ar-th-beg arg))

(defun ar-blok-cntrl-in-name-atpt (&optional arg) 
  "Employ actions of BLOK at things class of CNTRL residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'name 'ar-th-blok arg))

(defun ar-bounds-cntrl-in-name-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of CNTRL residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'name 'ar-th-bounds arg))

(defun ar-brace-cntrl-in-name-atpt (&optional arg) 
  "Employ actions of BRACE at things class of CNTRL residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'name 'ar-th-brace arg))

(defun ar-bracket-cntrl-in-name-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of CNTRL residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'name 'ar-th-bracket arg))

(defun ar-commatize-cntrl-in-name-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of CNTRL residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'name 'ar-th-commatize arg))

(defun ar-comment-cntrl-in-name-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of CNTRL residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'name 'ar-th-comment arg))

(defun ar-dollar-cntrl-in-name-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of CNTRL residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'name 'ar-th-dollar arg))

(defun ar-doublebackslash-cntrl-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of CNTRL residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'name 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-cntrl-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of CNTRL residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'name 'ar-th-doublebacktick arg))

(defun ar-doublequote-cntrl-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of CNTRL residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'name 'ar-th-doublequote arg))

(defun ar-doubleslash-cntrl-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of CNTRL residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'name 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-cntrl-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of CNTRL residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'name 'ar-th-doublebackslashparen arg))

(defun ar-end-cntrl-in-name-atpt (&optional arg) 
  "Employ actions of END at things class of CNTRL residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'name 'ar-th-end arg))

(defun ar-escape-cntrl-in-name-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of CNTRL residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'name 'ar-th-escape arg))

(defun ar-hide-cntrl-in-name-atpt (&optional arg) 
  "Employ actions of HIDE at things class of CNTRL residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'name 'ar-th-hide arg))

(defun ar-hide-show-cntrl-in-name-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of CNTRL residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'name 'ar-th-hide-show arg))

(defun ar-hyphen-cntrl-in-name-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of CNTRL residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'name 'ar-th-hyphen arg))

(defun ar-kill-cntrl-in-name-atpt (&optional arg) 
  "Employ actions of KILL at things class of CNTRL residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'name 'ar-th-kill arg))

(defun ar-leftrightsinglequote-cntrl-in-name-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of CNTRL residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'name 'ar-th-leftrightsinglequote arg))

(defun ar-length-cntrl-in-name-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of CNTRL residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'name 'ar-th-length arg))

(defun ar-parentize-cntrl-in-name-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of CNTRL residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'name 'ar-th-parentize arg))

(defun ar-quote-cntrl-in-name-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of CNTRL residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'name 'ar-th-quote arg))

(defun ar-separate-cntrl-in-name-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of CNTRL residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'name 'ar-th-separate arg))

(defun ar-show-cntrl-in-name-atpt (&optional arg) 
  "Employ actions of SHOW at things class of CNTRL residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'name 'ar-th-show arg))

(defun ar-singlequote-cntrl-in-name-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of CNTRL residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'name 'ar-th-singlequote arg))

(defun ar-slash-cntrl-in-name-atpt (&optional arg) 
  "Employ actions of SLASH at things class of CNTRL residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'name 'ar-th-slash arg))

(defun ar-star-cntrl-in-name-atpt (&optional arg) 
  "Employ actions of STAR at things class of CNTRL residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'name 'ar-th-star arg))

(defun ar-slashparen-cntrl-in-name-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of CNTRL residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'name 'ar-th-slashparen arg))

(defun ar-sort-cntrl-in-name-atpt (&optional arg) 
  "Employ actions of SORT at things class of CNTRL residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'name 'ar-th-sort arg))

(defun ar-trim-cntrl-in-name-atpt (&optional arg) 
  "Employ actions of TRIM at things class of CNTRL residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'name 'ar-th-trim arg))

(defun ar-trim-left-cntrl-in-name-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of CNTRL residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'name 'ar-th-trim-left arg))

(defun ar-trim-right-cntrl-in-name-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of CNTRL residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'name 'ar-th-trim-right arg))

(defun ar-underscore-cntrl-in-name-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of CNTRL residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'name 'ar-th-underscore arg))

(defun ar-whitespace-cntrl-in-name-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of CNTRL residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'name 'ar-th-whitespace arg))

(defun ar-cntrl-in-page-atpt (&optional arg) 
  "Employ actions of  at things class of CNTRL residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'page 'ar-th arg))

(defun ar-greaterangle-cntrl-in-page-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of CNTRL residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'page 'ar-th-greaterangle arg))

(defun ar-lesserangle-cntrl-in-page-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of CNTRL residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'page 'ar-th-lesserangle arg))

(defun ar-backslash-cntrl-in-page-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of CNTRL residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'page 'ar-th-backslash arg))

(defun ar-colon-cntrl-in-page-atpt (&optional arg) 
  "Employ actions of COLON at things class of CNTRL residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'page 'ar-th-colon arg))

(defun ar-beg-cntrl-in-page-atpt (&optional arg) 
  "Employ actions of BEG at things class of CNTRL residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'page 'ar-th-beg arg))

(defun ar-blok-cntrl-in-page-atpt (&optional arg) 
  "Employ actions of BLOK at things class of CNTRL residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'page 'ar-th-blok arg))

(defun ar-bounds-cntrl-in-page-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of CNTRL residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'page 'ar-th-bounds arg))

(defun ar-brace-cntrl-in-page-atpt (&optional arg) 
  "Employ actions of BRACE at things class of CNTRL residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'page 'ar-th-brace arg))

(defun ar-bracket-cntrl-in-page-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of CNTRL residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'page 'ar-th-bracket arg))

(defun ar-commatize-cntrl-in-page-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of CNTRL residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'page 'ar-th-commatize arg))

(defun ar-comment-cntrl-in-page-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of CNTRL residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'page 'ar-th-comment arg))

(defun ar-dollar-cntrl-in-page-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of CNTRL residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'page 'ar-th-dollar arg))

(defun ar-doublebackslash-cntrl-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of CNTRL residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'page 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-cntrl-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of CNTRL residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'page 'ar-th-doublebacktick arg))

(defun ar-doublequote-cntrl-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of CNTRL residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'page 'ar-th-doublequote arg))

(defun ar-doubleslash-cntrl-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of CNTRL residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'page 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-cntrl-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of CNTRL residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'page 'ar-th-doublebackslashparen arg))

(defun ar-end-cntrl-in-page-atpt (&optional arg) 
  "Employ actions of END at things class of CNTRL residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'page 'ar-th-end arg))

(defun ar-escape-cntrl-in-page-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of CNTRL residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'page 'ar-th-escape arg))

(defun ar-hide-cntrl-in-page-atpt (&optional arg) 
  "Employ actions of HIDE at things class of CNTRL residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'page 'ar-th-hide arg))

(defun ar-hide-show-cntrl-in-page-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of CNTRL residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'page 'ar-th-hide-show arg))

(defun ar-hyphen-cntrl-in-page-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of CNTRL residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'page 'ar-th-hyphen arg))

(defun ar-kill-cntrl-in-page-atpt (&optional arg) 
  "Employ actions of KILL at things class of CNTRL residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'page 'ar-th-kill arg))

(defun ar-leftrightsinglequote-cntrl-in-page-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of CNTRL residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'page 'ar-th-leftrightsinglequote arg))

(defun ar-length-cntrl-in-page-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of CNTRL residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'page 'ar-th-length arg))

(defun ar-parentize-cntrl-in-page-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of CNTRL residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'page 'ar-th-parentize arg))

(defun ar-quote-cntrl-in-page-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of CNTRL residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'page 'ar-th-quote arg))

(defun ar-separate-cntrl-in-page-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of CNTRL residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'page 'ar-th-separate arg))

(defun ar-show-cntrl-in-page-atpt (&optional arg) 
  "Employ actions of SHOW at things class of CNTRL residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'page 'ar-th-show arg))

(defun ar-singlequote-cntrl-in-page-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of CNTRL residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'page 'ar-th-singlequote arg))

(defun ar-slash-cntrl-in-page-atpt (&optional arg) 
  "Employ actions of SLASH at things class of CNTRL residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'page 'ar-th-slash arg))

(defun ar-star-cntrl-in-page-atpt (&optional arg) 
  "Employ actions of STAR at things class of CNTRL residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'page 'ar-th-star arg))

(defun ar-slashparen-cntrl-in-page-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of CNTRL residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'page 'ar-th-slashparen arg))

(defun ar-sort-cntrl-in-page-atpt (&optional arg) 
  "Employ actions of SORT at things class of CNTRL residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'page 'ar-th-sort arg))

(defun ar-trim-cntrl-in-page-atpt (&optional arg) 
  "Employ actions of TRIM at things class of CNTRL residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'page 'ar-th-trim arg))

(defun ar-trim-left-cntrl-in-page-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of CNTRL residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'page 'ar-th-trim-left arg))

(defun ar-trim-right-cntrl-in-page-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of CNTRL residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'page 'ar-th-trim-right arg))

(defun ar-underscore-cntrl-in-page-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of CNTRL residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'page 'ar-th-underscore arg))

(defun ar-whitespace-cntrl-in-page-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of CNTRL residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'page 'ar-th-whitespace arg))

(defun ar-cntrl-in-paragraph-atpt (&optional arg) 
  "Employ actions of  at things class of CNTRL residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'paragraph 'ar-th arg))

(defun ar-greaterangle-cntrl-in-paragraph-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of CNTRL residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'paragraph 'ar-th-greaterangle arg))

(defun ar-lesserangle-cntrl-in-paragraph-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of CNTRL residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'paragraph 'ar-th-lesserangle arg))

(defun ar-backslash-cntrl-in-paragraph-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of CNTRL residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'paragraph 'ar-th-backslash arg))

(defun ar-colon-cntrl-in-paragraph-atpt (&optional arg) 
  "Employ actions of COLON at things class of CNTRL residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'paragraph 'ar-th-colon arg))

(defun ar-beg-cntrl-in-paragraph-atpt (&optional arg) 
  "Employ actions of BEG at things class of CNTRL residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'paragraph 'ar-th-beg arg))

(defun ar-blok-cntrl-in-paragraph-atpt (&optional arg) 
  "Employ actions of BLOK at things class of CNTRL residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'paragraph 'ar-th-blok arg))

(defun ar-bounds-cntrl-in-paragraph-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of CNTRL residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'paragraph 'ar-th-bounds arg))

(defun ar-brace-cntrl-in-paragraph-atpt (&optional arg) 
  "Employ actions of BRACE at things class of CNTRL residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'paragraph 'ar-th-brace arg))

(defun ar-bracket-cntrl-in-paragraph-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of CNTRL residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'paragraph 'ar-th-bracket arg))

(defun ar-commatize-cntrl-in-paragraph-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of CNTRL residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'paragraph 'ar-th-commatize arg))

(defun ar-comment-cntrl-in-paragraph-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of CNTRL residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'paragraph 'ar-th-comment arg))

(defun ar-dollar-cntrl-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of CNTRL residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'paragraph 'ar-th-dollar arg))

(defun ar-doublebackslash-cntrl-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of CNTRL residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'paragraph 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-cntrl-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of CNTRL residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'paragraph 'ar-th-doublebacktick arg))

(defun ar-doublequote-cntrl-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of CNTRL residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'paragraph 'ar-th-doublequote arg))

(defun ar-doubleslash-cntrl-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of CNTRL residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'paragraph 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-cntrl-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of CNTRL residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'paragraph 'ar-th-doublebackslashparen arg))

(defun ar-end-cntrl-in-paragraph-atpt (&optional arg) 
  "Employ actions of END at things class of CNTRL residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'paragraph 'ar-th-end arg))

(defun ar-escape-cntrl-in-paragraph-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of CNTRL residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'paragraph 'ar-th-escape arg))

(defun ar-hide-cntrl-in-paragraph-atpt (&optional arg) 
  "Employ actions of HIDE at things class of CNTRL residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'paragraph 'ar-th-hide arg))

(defun ar-hide-show-cntrl-in-paragraph-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of CNTRL residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'paragraph 'ar-th-hide-show arg))

(defun ar-hyphen-cntrl-in-paragraph-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of CNTRL residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'paragraph 'ar-th-hyphen arg))

(defun ar-kill-cntrl-in-paragraph-atpt (&optional arg) 
  "Employ actions of KILL at things class of CNTRL residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'paragraph 'ar-th-kill arg))

(defun ar-leftrightsinglequote-cntrl-in-paragraph-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of CNTRL residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'paragraph 'ar-th-leftrightsinglequote arg))

(defun ar-length-cntrl-in-paragraph-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of CNTRL residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'paragraph 'ar-th-length arg))

(defun ar-parentize-cntrl-in-paragraph-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of CNTRL residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'paragraph 'ar-th-parentize arg))

(defun ar-quote-cntrl-in-paragraph-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of CNTRL residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'paragraph 'ar-th-quote arg))

(defun ar-separate-cntrl-in-paragraph-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of CNTRL residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'paragraph 'ar-th-separate arg))

(defun ar-show-cntrl-in-paragraph-atpt (&optional arg) 
  "Employ actions of SHOW at things class of CNTRL residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'paragraph 'ar-th-show arg))

(defun ar-singlequote-cntrl-in-paragraph-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of CNTRL residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'paragraph 'ar-th-singlequote arg))

(defun ar-slash-cntrl-in-paragraph-atpt (&optional arg) 
  "Employ actions of SLASH at things class of CNTRL residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'paragraph 'ar-th-slash arg))

(defun ar-star-cntrl-in-paragraph-atpt (&optional arg) 
  "Employ actions of STAR at things class of CNTRL residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'paragraph 'ar-th-star arg))

(defun ar-slashparen-cntrl-in-paragraph-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of CNTRL residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'paragraph 'ar-th-slashparen arg))

(defun ar-sort-cntrl-in-paragraph-atpt (&optional arg) 
  "Employ actions of SORT at things class of CNTRL residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'paragraph 'ar-th-sort arg))

(defun ar-trim-cntrl-in-paragraph-atpt (&optional arg) 
  "Employ actions of TRIM at things class of CNTRL residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'paragraph 'ar-th-trim arg))

(defun ar-trim-left-cntrl-in-paragraph-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of CNTRL residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'paragraph 'ar-th-trim-left arg))

(defun ar-trim-right-cntrl-in-paragraph-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of CNTRL residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'paragraph 'ar-th-trim-right arg))

(defun ar-underscore-cntrl-in-paragraph-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of CNTRL residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'paragraph 'ar-th-underscore arg))

(defun ar-whitespace-cntrl-in-paragraph-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of CNTRL residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'paragraph 'ar-th-whitespace arg))

(defun ar-cntrl-in-region-atpt (&optional arg) 
  "Employ actions of  at things class of CNTRL residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'region 'ar-th arg))

(defun ar-greaterangle-cntrl-in-region-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of CNTRL residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'region 'ar-th-greaterangle arg))

(defun ar-lesserangle-cntrl-in-region-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of CNTRL residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'region 'ar-th-lesserangle arg))

(defun ar-backslash-cntrl-in-region-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of CNTRL residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'region 'ar-th-backslash arg))

(defun ar-colon-cntrl-in-region-atpt (&optional arg) 
  "Employ actions of COLON at things class of CNTRL residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'region 'ar-th-colon arg))

(defun ar-beg-cntrl-in-region-atpt (&optional arg) 
  "Employ actions of BEG at things class of CNTRL residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'region 'ar-th-beg arg))

(defun ar-blok-cntrl-in-region-atpt (&optional arg) 
  "Employ actions of BLOK at things class of CNTRL residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'region 'ar-th-blok arg))

(defun ar-bounds-cntrl-in-region-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of CNTRL residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'region 'ar-th-bounds arg))

(defun ar-brace-cntrl-in-region-atpt (&optional arg) 
  "Employ actions of BRACE at things class of CNTRL residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'region 'ar-th-brace arg))

(defun ar-bracket-cntrl-in-region-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of CNTRL residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'region 'ar-th-bracket arg))

(defun ar-commatize-cntrl-in-region-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of CNTRL residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'region 'ar-th-commatize arg))

(defun ar-comment-cntrl-in-region-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of CNTRL residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'region 'ar-th-comment arg))

(defun ar-dollar-cntrl-in-region-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of CNTRL residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'region 'ar-th-dollar arg))

(defun ar-doublebackslash-cntrl-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of CNTRL residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'region 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-cntrl-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of CNTRL residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'region 'ar-th-doublebacktick arg))

(defun ar-doublequote-cntrl-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of CNTRL residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'region 'ar-th-doublequote arg))

(defun ar-doubleslash-cntrl-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of CNTRL residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'region 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-cntrl-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of CNTRL residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'region 'ar-th-doublebackslashparen arg))

(defun ar-end-cntrl-in-region-atpt (&optional arg) 
  "Employ actions of END at things class of CNTRL residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'region 'ar-th-end arg))

(defun ar-escape-cntrl-in-region-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of CNTRL residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'region 'ar-th-escape arg))

(defun ar-hide-cntrl-in-region-atpt (&optional arg) 
  "Employ actions of HIDE at things class of CNTRL residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'region 'ar-th-hide arg))

(defun ar-hide-show-cntrl-in-region-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of CNTRL residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'region 'ar-th-hide-show arg))

(defun ar-hyphen-cntrl-in-region-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of CNTRL residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'region 'ar-th-hyphen arg))

(defun ar-kill-cntrl-in-region-atpt (&optional arg) 
  "Employ actions of KILL at things class of CNTRL residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'region 'ar-th-kill arg))

(defun ar-leftrightsinglequote-cntrl-in-region-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of CNTRL residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'region 'ar-th-leftrightsinglequote arg))

(defun ar-length-cntrl-in-region-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of CNTRL residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'region 'ar-th-length arg))

(defun ar-parentize-cntrl-in-region-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of CNTRL residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'region 'ar-th-parentize arg))

(defun ar-quote-cntrl-in-region-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of CNTRL residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'region 'ar-th-quote arg))

(defun ar-separate-cntrl-in-region-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of CNTRL residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'region 'ar-th-separate arg))

(defun ar-show-cntrl-in-region-atpt (&optional arg) 
  "Employ actions of SHOW at things class of CNTRL residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'region 'ar-th-show arg))

(defun ar-singlequote-cntrl-in-region-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of CNTRL residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'region 'ar-th-singlequote arg))

(defun ar-slash-cntrl-in-region-atpt (&optional arg) 
  "Employ actions of SLASH at things class of CNTRL residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'region 'ar-th-slash arg))

(defun ar-star-cntrl-in-region-atpt (&optional arg) 
  "Employ actions of STAR at things class of CNTRL residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'region 'ar-th-star arg))

(defun ar-slashparen-cntrl-in-region-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of CNTRL residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'region 'ar-th-slashparen arg))

(defun ar-sort-cntrl-in-region-atpt (&optional arg) 
  "Employ actions of SORT at things class of CNTRL residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'region 'ar-th-sort arg))

(defun ar-trim-cntrl-in-region-atpt (&optional arg) 
  "Employ actions of TRIM at things class of CNTRL residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'region 'ar-th-trim arg))

(defun ar-trim-left-cntrl-in-region-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of CNTRL residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'region 'ar-th-trim-left arg))

(defun ar-trim-right-cntrl-in-region-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of CNTRL residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'region 'ar-th-trim-right arg))

(defun ar-underscore-cntrl-in-region-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of CNTRL residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'region 'ar-th-underscore arg))

(defun ar-whitespace-cntrl-in-region-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of CNTRL residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'region 'ar-th-whitespace arg))

(defun ar-cntrl-in-sentence-atpt (&optional arg) 
  "Employ actions of  at things class of CNTRL residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sentence 'ar-th arg))

(defun ar-greaterangle-cntrl-in-sentence-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of CNTRL residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sentence 'ar-th-greaterangle arg))

(defun ar-lesserangle-cntrl-in-sentence-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of CNTRL residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sentence 'ar-th-lesserangle arg))

(defun ar-backslash-cntrl-in-sentence-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of CNTRL residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sentence 'ar-th-backslash arg))

(defun ar-colon-cntrl-in-sentence-atpt (&optional arg) 
  "Employ actions of COLON at things class of CNTRL residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sentence 'ar-th-colon arg))

(defun ar-beg-cntrl-in-sentence-atpt (&optional arg) 
  "Employ actions of BEG at things class of CNTRL residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sentence 'ar-th-beg arg))

(defun ar-blok-cntrl-in-sentence-atpt (&optional arg) 
  "Employ actions of BLOK at things class of CNTRL residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sentence 'ar-th-blok arg))

(defun ar-bounds-cntrl-in-sentence-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of CNTRL residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sentence 'ar-th-bounds arg))

(defun ar-brace-cntrl-in-sentence-atpt (&optional arg) 
  "Employ actions of BRACE at things class of CNTRL residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sentence 'ar-th-brace arg))

(defun ar-bracket-cntrl-in-sentence-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of CNTRL residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sentence 'ar-th-bracket arg))

(defun ar-commatize-cntrl-in-sentence-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of CNTRL residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sentence 'ar-th-commatize arg))

(defun ar-comment-cntrl-in-sentence-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of CNTRL residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sentence 'ar-th-comment arg))

(defun ar-dollar-cntrl-in-sentence-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of CNTRL residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sentence 'ar-th-dollar arg))

(defun ar-doublebackslash-cntrl-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of CNTRL residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sentence 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-cntrl-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of CNTRL residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sentence 'ar-th-doublebacktick arg))

(defun ar-doublequote-cntrl-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of CNTRL residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sentence 'ar-th-doublequote arg))

(defun ar-doubleslash-cntrl-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of CNTRL residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sentence 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-cntrl-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of CNTRL residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sentence 'ar-th-doublebackslashparen arg))

(defun ar-end-cntrl-in-sentence-atpt (&optional arg) 
  "Employ actions of END at things class of CNTRL residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sentence 'ar-th-end arg))

(defun ar-escape-cntrl-in-sentence-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of CNTRL residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sentence 'ar-th-escape arg))

(defun ar-hide-cntrl-in-sentence-atpt (&optional arg) 
  "Employ actions of HIDE at things class of CNTRL residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sentence 'ar-th-hide arg))

(defun ar-hide-show-cntrl-in-sentence-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of CNTRL residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sentence 'ar-th-hide-show arg))

(defun ar-hyphen-cntrl-in-sentence-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of CNTRL residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sentence 'ar-th-hyphen arg))

(defun ar-kill-cntrl-in-sentence-atpt (&optional arg) 
  "Employ actions of KILL at things class of CNTRL residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sentence 'ar-th-kill arg))

(defun ar-leftrightsinglequote-cntrl-in-sentence-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of CNTRL residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sentence 'ar-th-leftrightsinglequote arg))

(defun ar-length-cntrl-in-sentence-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of CNTRL residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sentence 'ar-th-length arg))

(defun ar-parentize-cntrl-in-sentence-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of CNTRL residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sentence 'ar-th-parentize arg))

(defun ar-quote-cntrl-in-sentence-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of CNTRL residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sentence 'ar-th-quote arg))

(defun ar-separate-cntrl-in-sentence-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of CNTRL residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sentence 'ar-th-separate arg))

(defun ar-show-cntrl-in-sentence-atpt (&optional arg) 
  "Employ actions of SHOW at things class of CNTRL residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sentence 'ar-th-show arg))

(defun ar-singlequote-cntrl-in-sentence-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of CNTRL residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sentence 'ar-th-singlequote arg))

(defun ar-slash-cntrl-in-sentence-atpt (&optional arg) 
  "Employ actions of SLASH at things class of CNTRL residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sentence 'ar-th-slash arg))

(defun ar-star-cntrl-in-sentence-atpt (&optional arg) 
  "Employ actions of STAR at things class of CNTRL residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sentence 'ar-th-star arg))

(defun ar-slashparen-cntrl-in-sentence-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of CNTRL residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sentence 'ar-th-slashparen arg))

(defun ar-sort-cntrl-in-sentence-atpt (&optional arg) 
  "Employ actions of SORT at things class of CNTRL residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sentence 'ar-th-sort arg))

(defun ar-trim-cntrl-in-sentence-atpt (&optional arg) 
  "Employ actions of TRIM at things class of CNTRL residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sentence 'ar-th-trim arg))

(defun ar-trim-left-cntrl-in-sentence-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of CNTRL residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sentence 'ar-th-trim-left arg))

(defun ar-trim-right-cntrl-in-sentence-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of CNTRL residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sentence 'ar-th-trim-right arg))

(defun ar-underscore-cntrl-in-sentence-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of CNTRL residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sentence 'ar-th-underscore arg))

(defun ar-whitespace-cntrl-in-sentence-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of CNTRL residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sentence 'ar-th-whitespace arg))

(defun ar-cntrl-in-sexp-atpt (&optional arg) 
  "Employ actions of  at things class of CNTRL residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sexp 'ar-th arg))

(defun ar-greaterangle-cntrl-in-sexp-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of CNTRL residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sexp 'ar-th-greaterangle arg))

(defun ar-lesserangle-cntrl-in-sexp-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of CNTRL residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sexp 'ar-th-lesserangle arg))

(defun ar-backslash-cntrl-in-sexp-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of CNTRL residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sexp 'ar-th-backslash arg))

(defun ar-colon-cntrl-in-sexp-atpt (&optional arg) 
  "Employ actions of COLON at things class of CNTRL residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sexp 'ar-th-colon arg))

(defun ar-beg-cntrl-in-sexp-atpt (&optional arg) 
  "Employ actions of BEG at things class of CNTRL residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sexp 'ar-th-beg arg))

(defun ar-blok-cntrl-in-sexp-atpt (&optional arg) 
  "Employ actions of BLOK at things class of CNTRL residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sexp 'ar-th-blok arg))

(defun ar-bounds-cntrl-in-sexp-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of CNTRL residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sexp 'ar-th-bounds arg))

(defun ar-brace-cntrl-in-sexp-atpt (&optional arg) 
  "Employ actions of BRACE at things class of CNTRL residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sexp 'ar-th-brace arg))

(defun ar-bracket-cntrl-in-sexp-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of CNTRL residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sexp 'ar-th-bracket arg))

(defun ar-commatize-cntrl-in-sexp-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of CNTRL residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sexp 'ar-th-commatize arg))

(defun ar-comment-cntrl-in-sexp-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of CNTRL residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sexp 'ar-th-comment arg))

(defun ar-dollar-cntrl-in-sexp-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of CNTRL residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sexp 'ar-th-dollar arg))

(defun ar-doublebackslash-cntrl-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of CNTRL residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sexp 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-cntrl-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of CNTRL residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sexp 'ar-th-doublebacktick arg))

(defun ar-doublequote-cntrl-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of CNTRL residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sexp 'ar-th-doublequote arg))

(defun ar-doubleslash-cntrl-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of CNTRL residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sexp 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-cntrl-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of CNTRL residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sexp 'ar-th-doublebackslashparen arg))

(defun ar-end-cntrl-in-sexp-atpt (&optional arg) 
  "Employ actions of END at things class of CNTRL residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sexp 'ar-th-end arg))

(defun ar-escape-cntrl-in-sexp-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of CNTRL residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sexp 'ar-th-escape arg))

(defun ar-hide-cntrl-in-sexp-atpt (&optional arg) 
  "Employ actions of HIDE at things class of CNTRL residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sexp 'ar-th-hide arg))

(defun ar-hide-show-cntrl-in-sexp-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of CNTRL residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sexp 'ar-th-hide-show arg))

(defun ar-hyphen-cntrl-in-sexp-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of CNTRL residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sexp 'ar-th-hyphen arg))

(defun ar-kill-cntrl-in-sexp-atpt (&optional arg) 
  "Employ actions of KILL at things class of CNTRL residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sexp 'ar-th-kill arg))

(defun ar-leftrightsinglequote-cntrl-in-sexp-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of CNTRL residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sexp 'ar-th-leftrightsinglequote arg))

(defun ar-length-cntrl-in-sexp-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of CNTRL residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sexp 'ar-th-length arg))

(defun ar-parentize-cntrl-in-sexp-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of CNTRL residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sexp 'ar-th-parentize arg))

(defun ar-quote-cntrl-in-sexp-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of CNTRL residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sexp 'ar-th-quote arg))

(defun ar-separate-cntrl-in-sexp-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of CNTRL residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sexp 'ar-th-separate arg))

(defun ar-show-cntrl-in-sexp-atpt (&optional arg) 
  "Employ actions of SHOW at things class of CNTRL residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sexp 'ar-th-show arg))

(defun ar-singlequote-cntrl-in-sexp-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of CNTRL residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sexp 'ar-th-singlequote arg))

(defun ar-slash-cntrl-in-sexp-atpt (&optional arg) 
  "Employ actions of SLASH at things class of CNTRL residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sexp 'ar-th-slash arg))

(defun ar-star-cntrl-in-sexp-atpt (&optional arg) 
  "Employ actions of STAR at things class of CNTRL residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sexp 'ar-th-star arg))

(defun ar-slashparen-cntrl-in-sexp-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of CNTRL residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sexp 'ar-th-slashparen arg))

(defun ar-sort-cntrl-in-sexp-atpt (&optional arg) 
  "Employ actions of SORT at things class of CNTRL residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sexp 'ar-th-sort arg))

(defun ar-trim-cntrl-in-sexp-atpt (&optional arg) 
  "Employ actions of TRIM at things class of CNTRL residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sexp 'ar-th-trim arg))

(defun ar-trim-left-cntrl-in-sexp-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of CNTRL residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sexp 'ar-th-trim-left arg))

(defun ar-trim-right-cntrl-in-sexp-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of CNTRL residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sexp 'ar-th-trim-right arg))

(defun ar-underscore-cntrl-in-sexp-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of CNTRL residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sexp 'ar-th-underscore arg))

(defun ar-whitespace-cntrl-in-sexp-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of CNTRL residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'sexp 'ar-th-whitespace arg))

(defun ar-cntrl-in-shstruct-atpt (&optional arg) 
  "Employ actions of  at things class of CNTRL residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'shstruct 'ar-th arg))

(defun ar-greaterangle-cntrl-in-shstruct-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of CNTRL residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'shstruct 'ar-th-greaterangle arg))

(defun ar-lesserangle-cntrl-in-shstruct-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of CNTRL residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'shstruct 'ar-th-lesserangle arg))

(defun ar-backslash-cntrl-in-shstruct-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of CNTRL residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'shstruct 'ar-th-backslash arg))

(defun ar-colon-cntrl-in-shstruct-atpt (&optional arg) 
  "Employ actions of COLON at things class of CNTRL residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'shstruct 'ar-th-colon arg))

(defun ar-beg-cntrl-in-shstruct-atpt (&optional arg) 
  "Employ actions of BEG at things class of CNTRL residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'shstruct 'ar-th-beg arg))

(defun ar-blok-cntrl-in-shstruct-atpt (&optional arg) 
  "Employ actions of BLOK at things class of CNTRL residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'shstruct 'ar-th-blok arg))

(defun ar-bounds-cntrl-in-shstruct-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of CNTRL residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'shstruct 'ar-th-bounds arg))

(defun ar-brace-cntrl-in-shstruct-atpt (&optional arg) 
  "Employ actions of BRACE at things class of CNTRL residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'shstruct 'ar-th-brace arg))

(defun ar-bracket-cntrl-in-shstruct-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of CNTRL residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'shstruct 'ar-th-bracket arg))

(defun ar-commatize-cntrl-in-shstruct-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of CNTRL residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'shstruct 'ar-th-commatize arg))

(defun ar-comment-cntrl-in-shstruct-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of CNTRL residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'shstruct 'ar-th-comment arg))

(defun ar-dollar-cntrl-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of CNTRL residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'shstruct 'ar-th-dollar arg))

(defun ar-doublebackslash-cntrl-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of CNTRL residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'shstruct 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-cntrl-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of CNTRL residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'shstruct 'ar-th-doublebacktick arg))

(defun ar-doublequote-cntrl-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of CNTRL residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'shstruct 'ar-th-doublequote arg))

(defun ar-doubleslash-cntrl-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of CNTRL residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'shstruct 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-cntrl-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of CNTRL residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'shstruct 'ar-th-doublebackslashparen arg))

(defun ar-end-cntrl-in-shstruct-atpt (&optional arg) 
  "Employ actions of END at things class of CNTRL residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'shstruct 'ar-th-end arg))

(defun ar-escape-cntrl-in-shstruct-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of CNTRL residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'shstruct 'ar-th-escape arg))

(defun ar-hide-cntrl-in-shstruct-atpt (&optional arg) 
  "Employ actions of HIDE at things class of CNTRL residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'shstruct 'ar-th-hide arg))

(defun ar-hide-show-cntrl-in-shstruct-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of CNTRL residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'shstruct 'ar-th-hide-show arg))

(defun ar-hyphen-cntrl-in-shstruct-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of CNTRL residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'shstruct 'ar-th-hyphen arg))

(defun ar-kill-cntrl-in-shstruct-atpt (&optional arg) 
  "Employ actions of KILL at things class of CNTRL residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'shstruct 'ar-th-kill arg))

(defun ar-leftrightsinglequote-cntrl-in-shstruct-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of CNTRL residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'shstruct 'ar-th-leftrightsinglequote arg))

(defun ar-length-cntrl-in-shstruct-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of CNTRL residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'shstruct 'ar-th-length arg))

(defun ar-parentize-cntrl-in-shstruct-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of CNTRL residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'shstruct 'ar-th-parentize arg))

(defun ar-quote-cntrl-in-shstruct-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of CNTRL residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'shstruct 'ar-th-quote arg))

(defun ar-separate-cntrl-in-shstruct-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of CNTRL residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'shstruct 'ar-th-separate arg))

(defun ar-show-cntrl-in-shstruct-atpt (&optional arg) 
  "Employ actions of SHOW at things class of CNTRL residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'shstruct 'ar-th-show arg))

(defun ar-singlequote-cntrl-in-shstruct-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of CNTRL residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'shstruct 'ar-th-singlequote arg))

(defun ar-slash-cntrl-in-shstruct-atpt (&optional arg) 
  "Employ actions of SLASH at things class of CNTRL residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'shstruct 'ar-th-slash arg))

(defun ar-star-cntrl-in-shstruct-atpt (&optional arg) 
  "Employ actions of STAR at things class of CNTRL residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'shstruct 'ar-th-star arg))

(defun ar-slashparen-cntrl-in-shstruct-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of CNTRL residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'shstruct 'ar-th-slashparen arg))

(defun ar-sort-cntrl-in-shstruct-atpt (&optional arg) 
  "Employ actions of SORT at things class of CNTRL residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'shstruct 'ar-th-sort arg))

(defun ar-trim-cntrl-in-shstruct-atpt (&optional arg) 
  "Employ actions of TRIM at things class of CNTRL residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'shstruct 'ar-th-trim arg))

(defun ar-trim-left-cntrl-in-shstruct-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of CNTRL residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'shstruct 'ar-th-trim-left arg))

(defun ar-trim-right-cntrl-in-shstruct-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of CNTRL residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'shstruct 'ar-th-trim-right arg))

(defun ar-underscore-cntrl-in-shstruct-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of CNTRL residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'shstruct 'ar-th-underscore arg))

(defun ar-whitespace-cntrl-in-shstruct-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of CNTRL residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'cntrl 'shstruct 'ar-th-whitespace arg))

(defun ar-digit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of  at things class of DIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'greateranglednested 'ar-th arg))

(defun ar-greaterangle-digit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of DIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'greateranglednested 'ar-th-greaterangle arg))

(defun ar-lesserangle-digit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of DIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'greateranglednested 'ar-th-lesserangle arg))

(defun ar-backslash-digit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of DIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'greateranglednested 'ar-th-backslash arg))

(defun ar-colon-digit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of COLON at things class of DIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'greateranglednested 'ar-th-colon arg))

(defun ar-beg-digit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BEG at things class of DIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'greateranglednested 'ar-th-beg arg))

(defun ar-blok-digit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BLOK at things class of DIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'greateranglednested 'ar-th-blok arg))

(defun ar-bounds-digit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of DIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'greateranglednested 'ar-th-bounds arg))

(defun ar-brace-digit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BRACE at things class of DIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'greateranglednested 'ar-th-brace arg))

(defun ar-bracket-digit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of DIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'greateranglednested 'ar-th-bracket arg))

(defun ar-commatize-digit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of DIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'greateranglednested 'ar-th-commatize arg))

(defun ar-comment-digit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of DIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'greateranglednested 'ar-th-comment arg))

(defun ar-dollar-digit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of DIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'greateranglednested 'ar-th-dollar arg))

(defun ar-doublebackslash-digit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of DIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'greateranglednested 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-digit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of DIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'greateranglednested 'ar-th-doublebacktick arg))

(defun ar-doublequote-digit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of DIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'greateranglednested 'ar-th-doublequote arg))

(defun ar-doubleslash-digit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of DIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'greateranglednested 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-digit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of DIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'greateranglednested 'ar-th-doublebackslashparen arg))

(defun ar-end-digit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of END at things class of DIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'greateranglednested 'ar-th-end arg))

(defun ar-escape-digit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of DIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'greateranglednested 'ar-th-escape arg))

(defun ar-hide-digit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of HIDE at things class of DIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'greateranglednested 'ar-th-hide arg))

(defun ar-hide-show-digit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of DIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'greateranglednested 'ar-th-hide-show arg))

(defun ar-hyphen-digit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of DIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'greateranglednested 'ar-th-hyphen arg))

(defun ar-kill-digit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of KILL at things class of DIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'greateranglednested 'ar-th-kill arg))

(defun ar-leftrightsinglequote-digit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of DIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'greateranglednested 'ar-th-leftrightsinglequote arg))

(defun ar-length-digit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of DIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'greateranglednested 'ar-th-length arg))

(defun ar-parentize-digit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of DIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'greateranglednested 'ar-th-parentize arg))

(defun ar-quote-digit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of DIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'greateranglednested 'ar-th-quote arg))

(defun ar-separate-digit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of DIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'greateranglednested 'ar-th-separate arg))

(defun ar-show-digit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SHOW at things class of DIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'greateranglednested 'ar-th-show arg))

(defun ar-singlequote-digit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of DIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'greateranglednested 'ar-th-singlequote arg))

(defun ar-slash-digit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SLASH at things class of DIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'greateranglednested 'ar-th-slash arg))

(defun ar-star-digit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of STAR at things class of DIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'greateranglednested 'ar-th-star arg))

(defun ar-slashparen-digit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of DIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'greateranglednested 'ar-th-slashparen arg))

(defun ar-sort-digit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SORT at things class of DIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'greateranglednested 'ar-th-sort arg))

(defun ar-trim-digit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of TRIM at things class of DIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'greateranglednested 'ar-th-trim arg))

(defun ar-trim-left-digit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of DIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'greateranglednested 'ar-th-trim-left arg))

(defun ar-trim-right-digit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of DIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'greateranglednested 'ar-th-trim-right arg))

(defun ar-underscore-digit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of DIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'greateranglednested 'ar-th-underscore arg))

(defun ar-whitespace-digit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of DIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'greateranglednested 'ar-th-whitespace arg))

(defun ar-digit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of  at things class of DIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'lesseranglednested 'ar-th arg))

(defun ar-greaterangle-digit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of DIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'lesseranglednested 'ar-th-greaterangle arg))

(defun ar-lesserangle-digit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of DIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'lesseranglednested 'ar-th-lesserangle arg))

(defun ar-backslash-digit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of DIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'lesseranglednested 'ar-th-backslash arg))

(defun ar-colon-digit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of COLON at things class of DIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'lesseranglednested 'ar-th-colon arg))

(defun ar-beg-digit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BEG at things class of DIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'lesseranglednested 'ar-th-beg arg))

(defun ar-blok-digit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BLOK at things class of DIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'lesseranglednested 'ar-th-blok arg))

(defun ar-bounds-digit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of DIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'lesseranglednested 'ar-th-bounds arg))

(defun ar-brace-digit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BRACE at things class of DIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'lesseranglednested 'ar-th-brace arg))

(defun ar-bracket-digit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of DIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'lesseranglednested 'ar-th-bracket arg))

(defun ar-commatize-digit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of DIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'lesseranglednested 'ar-th-commatize arg))

(defun ar-comment-digit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of DIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'lesseranglednested 'ar-th-comment arg))

(defun ar-dollar-digit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of DIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'lesseranglednested 'ar-th-dollar arg))

(defun ar-doublebackslash-digit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of DIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'lesseranglednested 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-digit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of DIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'lesseranglednested 'ar-th-doublebacktick arg))

(defun ar-doublequote-digit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of DIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'lesseranglednested 'ar-th-doublequote arg))

(defun ar-doubleslash-digit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of DIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'lesseranglednested 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-digit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of DIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'lesseranglednested 'ar-th-doublebackslashparen arg))

(defun ar-end-digit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of END at things class of DIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'lesseranglednested 'ar-th-end arg))

(defun ar-escape-digit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of DIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'lesseranglednested 'ar-th-escape arg))

(defun ar-hide-digit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of HIDE at things class of DIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'lesseranglednested 'ar-th-hide arg))

(defun ar-hide-show-digit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of DIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'lesseranglednested 'ar-th-hide-show arg))

(defun ar-hyphen-digit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of DIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'lesseranglednested 'ar-th-hyphen arg))

(defun ar-kill-digit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of KILL at things class of DIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'lesseranglednested 'ar-th-kill arg))

(defun ar-leftrightsinglequote-digit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of DIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'lesseranglednested 'ar-th-leftrightsinglequote arg))

(defun ar-length-digit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of DIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'lesseranglednested 'ar-th-length arg))

(defun ar-parentize-digit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of DIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'lesseranglednested 'ar-th-parentize arg))

(defun ar-quote-digit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of DIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'lesseranglednested 'ar-th-quote arg))

(defun ar-separate-digit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of DIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'lesseranglednested 'ar-th-separate arg))

(defun ar-show-digit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SHOW at things class of DIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'lesseranglednested 'ar-th-show arg))

(defun ar-singlequote-digit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of DIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'lesseranglednested 'ar-th-singlequote arg))

(defun ar-slash-digit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SLASH at things class of DIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'lesseranglednested 'ar-th-slash arg))

(defun ar-star-digit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of STAR at things class of DIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'lesseranglednested 'ar-th-star arg))

(defun ar-slashparen-digit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of DIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'lesseranglednested 'ar-th-slashparen arg))

(defun ar-sort-digit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SORT at things class of DIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'lesseranglednested 'ar-th-sort arg))

(defun ar-trim-digit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of TRIM at things class of DIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'lesseranglednested 'ar-th-trim arg))

(defun ar-trim-left-digit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of DIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'lesseranglednested 'ar-th-trim-left arg))

(defun ar-trim-right-digit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of DIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'lesseranglednested 'ar-th-trim-right arg))

(defun ar-underscore-digit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of DIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'lesseranglednested 'ar-th-underscore arg))

(defun ar-whitespace-digit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of DIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'lesseranglednested 'ar-th-whitespace arg))

(defun ar-digit-in-buffer-atpt (&optional arg) 
  "Employ actions of  at things class of DIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'buffer 'ar-th arg))

(defun ar-greaterangle-digit-in-buffer-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of DIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'buffer 'ar-th-greaterangle arg))

(defun ar-lesserangle-digit-in-buffer-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of DIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'buffer 'ar-th-lesserangle arg))

(defun ar-backslash-digit-in-buffer-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of DIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'buffer 'ar-th-backslash arg))

(defun ar-colon-digit-in-buffer-atpt (&optional arg) 
  "Employ actions of COLON at things class of DIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'buffer 'ar-th-colon arg))

(defun ar-beg-digit-in-buffer-atpt (&optional arg) 
  "Employ actions of BEG at things class of DIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'buffer 'ar-th-beg arg))

(defun ar-blok-digit-in-buffer-atpt (&optional arg) 
  "Employ actions of BLOK at things class of DIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'buffer 'ar-th-blok arg))

(defun ar-bounds-digit-in-buffer-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of DIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'buffer 'ar-th-bounds arg))

(defun ar-brace-digit-in-buffer-atpt (&optional arg) 
  "Employ actions of BRACE at things class of DIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'buffer 'ar-th-brace arg))

(defun ar-bracket-digit-in-buffer-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of DIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'buffer 'ar-th-bracket arg))

(defun ar-commatize-digit-in-buffer-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of DIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'buffer 'ar-th-commatize arg))

(defun ar-comment-digit-in-buffer-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of DIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'buffer 'ar-th-comment arg))

(defun ar-dollar-digit-in-buffer-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of DIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'buffer 'ar-th-dollar arg))

(defun ar-doublebackslash-digit-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of DIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'buffer 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-digit-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of DIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'buffer 'ar-th-doublebacktick arg))

(defun ar-doublequote-digit-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of DIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'buffer 'ar-th-doublequote arg))

(defun ar-doubleslash-digit-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of DIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'buffer 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-digit-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of DIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'buffer 'ar-th-doublebackslashparen arg))

(defun ar-end-digit-in-buffer-atpt (&optional arg) 
  "Employ actions of END at things class of DIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'buffer 'ar-th-end arg))

(defun ar-escape-digit-in-buffer-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of DIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'buffer 'ar-th-escape arg))

(defun ar-hide-digit-in-buffer-atpt (&optional arg) 
  "Employ actions of HIDE at things class of DIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'buffer 'ar-th-hide arg))

(defun ar-hide-show-digit-in-buffer-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of DIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'buffer 'ar-th-hide-show arg))

(defun ar-hyphen-digit-in-buffer-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of DIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'buffer 'ar-th-hyphen arg))

(defun ar-kill-digit-in-buffer-atpt (&optional arg) 
  "Employ actions of KILL at things class of DIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'buffer 'ar-th-kill arg))

(defun ar-leftrightsinglequote-digit-in-buffer-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of DIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'buffer 'ar-th-leftrightsinglequote arg))

(defun ar-length-digit-in-buffer-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of DIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'buffer 'ar-th-length arg))

(defun ar-parentize-digit-in-buffer-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of DIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'buffer 'ar-th-parentize arg))

(defun ar-quote-digit-in-buffer-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of DIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'buffer 'ar-th-quote arg))

(defun ar-separate-digit-in-buffer-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of DIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'buffer 'ar-th-separate arg))

(defun ar-show-digit-in-buffer-atpt (&optional arg) 
  "Employ actions of SHOW at things class of DIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'buffer 'ar-th-show arg))

(defun ar-singlequote-digit-in-buffer-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of DIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'buffer 'ar-th-singlequote arg))

(defun ar-slash-digit-in-buffer-atpt (&optional arg) 
  "Employ actions of SLASH at things class of DIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'buffer 'ar-th-slash arg))

(defun ar-star-digit-in-buffer-atpt (&optional arg) 
  "Employ actions of STAR at things class of DIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'buffer 'ar-th-star arg))

(defun ar-slashparen-digit-in-buffer-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of DIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'buffer 'ar-th-slashparen arg))

(defun ar-sort-digit-in-buffer-atpt (&optional arg) 
  "Employ actions of SORT at things class of DIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'buffer 'ar-th-sort arg))

(defun ar-trim-digit-in-buffer-atpt (&optional arg) 
  "Employ actions of TRIM at things class of DIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'buffer 'ar-th-trim arg))

(defun ar-trim-left-digit-in-buffer-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of DIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'buffer 'ar-th-trim-left arg))

(defun ar-trim-right-digit-in-buffer-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of DIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'buffer 'ar-th-trim-right arg))

(defun ar-underscore-digit-in-buffer-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of DIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'buffer 'ar-th-underscore arg))

(defun ar-whitespace-digit-in-buffer-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of DIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'buffer 'ar-th-whitespace arg))

(defun ar-digit-in-comment-atpt (&optional arg) 
  "Employ actions of  at things class of DIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'comment 'ar-th arg))

(defun ar-greaterangle-digit-in-comment-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of DIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'comment 'ar-th-greaterangle arg))

(defun ar-lesserangle-digit-in-comment-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of DIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'comment 'ar-th-lesserangle arg))

(defun ar-backslash-digit-in-comment-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of DIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'comment 'ar-th-backslash arg))

(defun ar-colon-digit-in-comment-atpt (&optional arg) 
  "Employ actions of COLON at things class of DIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'comment 'ar-th-colon arg))

(defun ar-beg-digit-in-comment-atpt (&optional arg) 
  "Employ actions of BEG at things class of DIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'comment 'ar-th-beg arg))

(defun ar-blok-digit-in-comment-atpt (&optional arg) 
  "Employ actions of BLOK at things class of DIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'comment 'ar-th-blok arg))

(defun ar-bounds-digit-in-comment-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of DIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'comment 'ar-th-bounds arg))

(defun ar-brace-digit-in-comment-atpt (&optional arg) 
  "Employ actions of BRACE at things class of DIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'comment 'ar-th-brace arg))

(defun ar-bracket-digit-in-comment-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of DIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'comment 'ar-th-bracket arg))

(defun ar-commatize-digit-in-comment-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of DIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'comment 'ar-th-commatize arg))

(defun ar-comment-digit-in-comment-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of DIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'comment 'ar-th-comment arg))

(defun ar-dollar-digit-in-comment-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of DIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'comment 'ar-th-dollar arg))

(defun ar-doublebackslash-digit-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of DIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'comment 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-digit-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of DIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'comment 'ar-th-doublebacktick arg))

(defun ar-doublequote-digit-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of DIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'comment 'ar-th-doublequote arg))

(defun ar-doubleslash-digit-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of DIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'comment 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-digit-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of DIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'comment 'ar-th-doublebackslashparen arg))

(defun ar-end-digit-in-comment-atpt (&optional arg) 
  "Employ actions of END at things class of DIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'comment 'ar-th-end arg))

(defun ar-escape-digit-in-comment-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of DIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'comment 'ar-th-escape arg))

(defun ar-hide-digit-in-comment-atpt (&optional arg) 
  "Employ actions of HIDE at things class of DIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'comment 'ar-th-hide arg))

(defun ar-hide-show-digit-in-comment-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of DIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'comment 'ar-th-hide-show arg))

(defun ar-hyphen-digit-in-comment-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of DIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'comment 'ar-th-hyphen arg))

(defun ar-kill-digit-in-comment-atpt (&optional arg) 
  "Employ actions of KILL at things class of DIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'comment 'ar-th-kill arg))

(defun ar-leftrightsinglequote-digit-in-comment-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of DIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'comment 'ar-th-leftrightsinglequote arg))

(defun ar-length-digit-in-comment-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of DIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'comment 'ar-th-length arg))

(defun ar-parentize-digit-in-comment-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of DIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'comment 'ar-th-parentize arg))

(defun ar-quote-digit-in-comment-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of DIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'comment 'ar-th-quote arg))

(defun ar-separate-digit-in-comment-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of DIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'comment 'ar-th-separate arg))

(defun ar-show-digit-in-comment-atpt (&optional arg) 
  "Employ actions of SHOW at things class of DIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'comment 'ar-th-show arg))

(defun ar-singlequote-digit-in-comment-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of DIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'comment 'ar-th-singlequote arg))

(defun ar-slash-digit-in-comment-atpt (&optional arg) 
  "Employ actions of SLASH at things class of DIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'comment 'ar-th-slash arg))

(defun ar-star-digit-in-comment-atpt (&optional arg) 
  "Employ actions of STAR at things class of DIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'comment 'ar-th-star arg))

(defun ar-slashparen-digit-in-comment-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of DIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'comment 'ar-th-slashparen arg))

(defun ar-sort-digit-in-comment-atpt (&optional arg) 
  "Employ actions of SORT at things class of DIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'comment 'ar-th-sort arg))

(defun ar-trim-digit-in-comment-atpt (&optional arg) 
  "Employ actions of TRIM at things class of DIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'comment 'ar-th-trim arg))

(defun ar-trim-left-digit-in-comment-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of DIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'comment 'ar-th-trim-left arg))

(defun ar-trim-right-digit-in-comment-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of DIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'comment 'ar-th-trim-right arg))

(defun ar-underscore-digit-in-comment-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of DIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'comment 'ar-th-underscore arg))

(defun ar-whitespace-digit-in-comment-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of DIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'comment 'ar-th-whitespace arg))

(defun ar-digit-in-csv-atpt (&optional arg) 
  "Employ actions of  at things class of DIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'csv 'ar-th arg))

(defun ar-greaterangle-digit-in-csv-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of DIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'csv 'ar-th-greaterangle arg))

(defun ar-lesserangle-digit-in-csv-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of DIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'csv 'ar-th-lesserangle arg))

(defun ar-backslash-digit-in-csv-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of DIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'csv 'ar-th-backslash arg))

(defun ar-colon-digit-in-csv-atpt (&optional arg) 
  "Employ actions of COLON at things class of DIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'csv 'ar-th-colon arg))

(defun ar-beg-digit-in-csv-atpt (&optional arg) 
  "Employ actions of BEG at things class of DIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'csv 'ar-th-beg arg))

(defun ar-blok-digit-in-csv-atpt (&optional arg) 
  "Employ actions of BLOK at things class of DIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'csv 'ar-th-blok arg))

(defun ar-bounds-digit-in-csv-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of DIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'csv 'ar-th-bounds arg))

(defun ar-brace-digit-in-csv-atpt (&optional arg) 
  "Employ actions of BRACE at things class of DIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'csv 'ar-th-brace arg))

(defun ar-bracket-digit-in-csv-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of DIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'csv 'ar-th-bracket arg))

(defun ar-commatize-digit-in-csv-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of DIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'csv 'ar-th-commatize arg))

(defun ar-comment-digit-in-csv-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of DIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'csv 'ar-th-comment arg))

(defun ar-dollar-digit-in-csv-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of DIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'csv 'ar-th-dollar arg))

(defun ar-doublebackslash-digit-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of DIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'csv 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-digit-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of DIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'csv 'ar-th-doublebacktick arg))

(defun ar-doublequote-digit-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of DIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'csv 'ar-th-doublequote arg))

(defun ar-doubleslash-digit-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of DIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'csv 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-digit-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of DIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'csv 'ar-th-doublebackslashparen arg))

(defun ar-end-digit-in-csv-atpt (&optional arg) 
  "Employ actions of END at things class of DIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'csv 'ar-th-end arg))

(defun ar-escape-digit-in-csv-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of DIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'csv 'ar-th-escape arg))

(defun ar-hide-digit-in-csv-atpt (&optional arg) 
  "Employ actions of HIDE at things class of DIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'csv 'ar-th-hide arg))

(defun ar-hide-show-digit-in-csv-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of DIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'csv 'ar-th-hide-show arg))

(defun ar-hyphen-digit-in-csv-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of DIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'csv 'ar-th-hyphen arg))

(defun ar-kill-digit-in-csv-atpt (&optional arg) 
  "Employ actions of KILL at things class of DIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'csv 'ar-th-kill arg))

(defun ar-leftrightsinglequote-digit-in-csv-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of DIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'csv 'ar-th-leftrightsinglequote arg))

(defun ar-length-digit-in-csv-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of DIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'csv 'ar-th-length arg))

(defun ar-parentize-digit-in-csv-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of DIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'csv 'ar-th-parentize arg))

(defun ar-quote-digit-in-csv-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of DIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'csv 'ar-th-quote arg))

(defun ar-separate-digit-in-csv-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of DIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'csv 'ar-th-separate arg))

(defun ar-show-digit-in-csv-atpt (&optional arg) 
  "Employ actions of SHOW at things class of DIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'csv 'ar-th-show arg))

(defun ar-singlequote-digit-in-csv-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of DIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'csv 'ar-th-singlequote arg))

(defun ar-slash-digit-in-csv-atpt (&optional arg) 
  "Employ actions of SLASH at things class of DIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'csv 'ar-th-slash arg))

(defun ar-star-digit-in-csv-atpt (&optional arg) 
  "Employ actions of STAR at things class of DIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'csv 'ar-th-star arg))

(defun ar-slashparen-digit-in-csv-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of DIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'csv 'ar-th-slashparen arg))

(defun ar-sort-digit-in-csv-atpt (&optional arg) 
  "Employ actions of SORT at things class of DIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'csv 'ar-th-sort arg))

(defun ar-trim-digit-in-csv-atpt (&optional arg) 
  "Employ actions of TRIM at things class of DIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'csv 'ar-th-trim arg))

(defun ar-trim-left-digit-in-csv-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of DIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'csv 'ar-th-trim-left arg))

(defun ar-trim-right-digit-in-csv-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of DIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'csv 'ar-th-trim-right arg))

(defun ar-underscore-digit-in-csv-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of DIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'csv 'ar-th-underscore arg))

(defun ar-whitespace-digit-in-csv-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of DIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'csv 'ar-th-whitespace arg))

(defun ar-digit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of  at things class of DIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'filenamenondirectory 'ar-th arg))

(defun ar-greaterangle-digit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of DIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'filenamenondirectory 'ar-th-greaterangle arg))

(defun ar-lesserangle-digit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of DIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'filenamenondirectory 'ar-th-lesserangle arg))

(defun ar-backslash-digit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of DIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'filenamenondirectory 'ar-th-backslash arg))

(defun ar-colon-digit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of COLON at things class of DIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'filenamenondirectory 'ar-th-colon arg))

(defun ar-beg-digit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BEG at things class of DIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'filenamenondirectory 'ar-th-beg arg))

(defun ar-blok-digit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BLOK at things class of DIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'filenamenondirectory 'ar-th-blok arg))

(defun ar-bounds-digit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of DIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'filenamenondirectory 'ar-th-bounds arg))

(defun ar-brace-digit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BRACE at things class of DIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'filenamenondirectory 'ar-th-brace arg))

(defun ar-bracket-digit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of DIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'filenamenondirectory 'ar-th-bracket arg))

(defun ar-commatize-digit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of DIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'filenamenondirectory 'ar-th-commatize arg))

(defun ar-comment-digit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of DIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'filenamenondirectory 'ar-th-comment arg))

(defun ar-dollar-digit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of DIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'filenamenondirectory 'ar-th-dollar arg))

(defun ar-doublebackslash-digit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of DIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'filenamenondirectory 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-digit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of DIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'filenamenondirectory 'ar-th-doublebacktick arg))

(defun ar-doublequote-digit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of DIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'filenamenondirectory 'ar-th-doublequote arg))

(defun ar-doubleslash-digit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of DIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'filenamenondirectory 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-digit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of DIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'filenamenondirectory 'ar-th-doublebackslashparen arg))

(defun ar-end-digit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of END at things class of DIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'filenamenondirectory 'ar-th-end arg))

(defun ar-escape-digit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of DIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'filenamenondirectory 'ar-th-escape arg))

(defun ar-hide-digit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of HIDE at things class of DIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'filenamenondirectory 'ar-th-hide arg))

(defun ar-hide-show-digit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of DIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'filenamenondirectory 'ar-th-hide-show arg))

(defun ar-hyphen-digit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of DIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'filenamenondirectory 'ar-th-hyphen arg))

(defun ar-kill-digit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of KILL at things class of DIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'filenamenondirectory 'ar-th-kill arg))

(defun ar-leftrightsinglequote-digit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of DIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'filenamenondirectory 'ar-th-leftrightsinglequote arg))

(defun ar-length-digit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of DIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'filenamenondirectory 'ar-th-length arg))

(defun ar-parentize-digit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of DIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'filenamenondirectory 'ar-th-parentize arg))

(defun ar-quote-digit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of DIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'filenamenondirectory 'ar-th-quote arg))

(defun ar-separate-digit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of DIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'filenamenondirectory 'ar-th-separate arg))

(defun ar-show-digit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SHOW at things class of DIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'filenamenondirectory 'ar-th-show arg))

(defun ar-singlequote-digit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of DIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'filenamenondirectory 'ar-th-singlequote arg))

(defun ar-slash-digit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SLASH at things class of DIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'filenamenondirectory 'ar-th-slash arg))

(defun ar-star-digit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of STAR at things class of DIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'filenamenondirectory 'ar-th-star arg))

(defun ar-slashparen-digit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of DIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'filenamenondirectory 'ar-th-slashparen arg))

(defun ar-sort-digit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SORT at things class of DIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'filenamenondirectory 'ar-th-sort arg))

(defun ar-trim-digit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of TRIM at things class of DIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'filenamenondirectory 'ar-th-trim arg))

(defun ar-trim-left-digit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of DIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'filenamenondirectory 'ar-th-trim-left arg))

(defun ar-trim-right-digit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of DIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'filenamenondirectory 'ar-th-trim-right arg))

(defun ar-underscore-digit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of DIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'filenamenondirectory 'ar-th-underscore arg))

(defun ar-whitespace-digit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of DIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'filenamenondirectory 'ar-th-whitespace arg))

(defun ar-digit-in-function-atpt (&optional arg) 
  "Employ actions of  at things class of DIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'function 'ar-th arg))

(defun ar-greaterangle-digit-in-function-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of DIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'function 'ar-th-greaterangle arg))

(defun ar-lesserangle-digit-in-function-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of DIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'function 'ar-th-lesserangle arg))

(defun ar-backslash-digit-in-function-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of DIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'function 'ar-th-backslash arg))

(defun ar-colon-digit-in-function-atpt (&optional arg) 
  "Employ actions of COLON at things class of DIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'function 'ar-th-colon arg))

(defun ar-beg-digit-in-function-atpt (&optional arg) 
  "Employ actions of BEG at things class of DIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'function 'ar-th-beg arg))

(defun ar-blok-digit-in-function-atpt (&optional arg) 
  "Employ actions of BLOK at things class of DIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'function 'ar-th-blok arg))

(defun ar-bounds-digit-in-function-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of DIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'function 'ar-th-bounds arg))

(defun ar-brace-digit-in-function-atpt (&optional arg) 
  "Employ actions of BRACE at things class of DIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'function 'ar-th-brace arg))

(defun ar-bracket-digit-in-function-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of DIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'function 'ar-th-bracket arg))

(defun ar-commatize-digit-in-function-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of DIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'function 'ar-th-commatize arg))

(defun ar-comment-digit-in-function-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of DIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'function 'ar-th-comment arg))

(defun ar-dollar-digit-in-function-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of DIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'function 'ar-th-dollar arg))

(defun ar-doublebackslash-digit-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of DIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'function 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-digit-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of DIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'function 'ar-th-doublebacktick arg))

(defun ar-doublequote-digit-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of DIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'function 'ar-th-doublequote arg))

(defun ar-doubleslash-digit-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of DIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'function 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-digit-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of DIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'function 'ar-th-doublebackslashparen arg))

(defun ar-end-digit-in-function-atpt (&optional arg) 
  "Employ actions of END at things class of DIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'function 'ar-th-end arg))

(defun ar-escape-digit-in-function-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of DIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'function 'ar-th-escape arg))

(defun ar-hide-digit-in-function-atpt (&optional arg) 
  "Employ actions of HIDE at things class of DIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'function 'ar-th-hide arg))

(defun ar-hide-show-digit-in-function-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of DIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'function 'ar-th-hide-show arg))

(defun ar-hyphen-digit-in-function-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of DIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'function 'ar-th-hyphen arg))

(defun ar-kill-digit-in-function-atpt (&optional arg) 
  "Employ actions of KILL at things class of DIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'function 'ar-th-kill arg))

(defun ar-leftrightsinglequote-digit-in-function-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of DIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'function 'ar-th-leftrightsinglequote arg))

(defun ar-length-digit-in-function-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of DIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'function 'ar-th-length arg))

(defun ar-parentize-digit-in-function-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of DIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'function 'ar-th-parentize arg))

(defun ar-quote-digit-in-function-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of DIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'function 'ar-th-quote arg))

(defun ar-separate-digit-in-function-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of DIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'function 'ar-th-separate arg))

(defun ar-show-digit-in-function-atpt (&optional arg) 
  "Employ actions of SHOW at things class of DIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'function 'ar-th-show arg))

(defun ar-singlequote-digit-in-function-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of DIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'function 'ar-th-singlequote arg))

(defun ar-slash-digit-in-function-atpt (&optional arg) 
  "Employ actions of SLASH at things class of DIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'function 'ar-th-slash arg))

(defun ar-star-digit-in-function-atpt (&optional arg) 
  "Employ actions of STAR at things class of DIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'function 'ar-th-star arg))

(defun ar-slashparen-digit-in-function-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of DIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'function 'ar-th-slashparen arg))

(defun ar-sort-digit-in-function-atpt (&optional arg) 
  "Employ actions of SORT at things class of DIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'function 'ar-th-sort arg))

(defun ar-trim-digit-in-function-atpt (&optional arg) 
  "Employ actions of TRIM at things class of DIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'function 'ar-th-trim arg))

(defun ar-trim-left-digit-in-function-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of DIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'function 'ar-th-trim-left arg))

(defun ar-trim-right-digit-in-function-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of DIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'function 'ar-th-trim-right arg))

(defun ar-underscore-digit-in-function-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of DIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'function 'ar-th-underscore arg))

(defun ar-whitespace-digit-in-function-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of DIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'function 'ar-th-whitespace arg))

(defun ar-digit-in-line-atpt (&optional arg) 
  "Employ actions of  at things class of DIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'line 'ar-th arg))

(defun ar-greaterangle-digit-in-line-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of DIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'line 'ar-th-greaterangle arg))

(defun ar-lesserangle-digit-in-line-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of DIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'line 'ar-th-lesserangle arg))

(defun ar-backslash-digit-in-line-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of DIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'line 'ar-th-backslash arg))

(defun ar-colon-digit-in-line-atpt (&optional arg) 
  "Employ actions of COLON at things class of DIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'line 'ar-th-colon arg))

(defun ar-beg-digit-in-line-atpt (&optional arg) 
  "Employ actions of BEG at things class of DIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'line 'ar-th-beg arg))

(defun ar-blok-digit-in-line-atpt (&optional arg) 
  "Employ actions of BLOK at things class of DIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'line 'ar-th-blok arg))

(defun ar-bounds-digit-in-line-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of DIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'line 'ar-th-bounds arg))

(defun ar-brace-digit-in-line-atpt (&optional arg) 
  "Employ actions of BRACE at things class of DIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'line 'ar-th-brace arg))

(defun ar-bracket-digit-in-line-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of DIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'line 'ar-th-bracket arg))

(defun ar-commatize-digit-in-line-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of DIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'line 'ar-th-commatize arg))

(defun ar-comment-digit-in-line-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of DIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'line 'ar-th-comment arg))

(defun ar-dollar-digit-in-line-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of DIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'line 'ar-th-dollar arg))

(defun ar-doublebackslash-digit-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of DIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'line 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-digit-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of DIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'line 'ar-th-doublebacktick arg))

(defun ar-doublequote-digit-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of DIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'line 'ar-th-doublequote arg))

(defun ar-doubleslash-digit-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of DIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'line 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-digit-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of DIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'line 'ar-th-doublebackslashparen arg))

(defun ar-end-digit-in-line-atpt (&optional arg) 
  "Employ actions of END at things class of DIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'line 'ar-th-end arg))

(defun ar-escape-digit-in-line-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of DIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'line 'ar-th-escape arg))

(defun ar-hide-digit-in-line-atpt (&optional arg) 
  "Employ actions of HIDE at things class of DIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'line 'ar-th-hide arg))

(defun ar-hide-show-digit-in-line-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of DIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'line 'ar-th-hide-show arg))

(defun ar-hyphen-digit-in-line-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of DIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'line 'ar-th-hyphen arg))

(defun ar-kill-digit-in-line-atpt (&optional arg) 
  "Employ actions of KILL at things class of DIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'line 'ar-th-kill arg))

(defun ar-leftrightsinglequote-digit-in-line-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of DIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'line 'ar-th-leftrightsinglequote arg))

(defun ar-length-digit-in-line-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of DIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'line 'ar-th-length arg))

(defun ar-parentize-digit-in-line-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of DIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'line 'ar-th-parentize arg))

(defun ar-quote-digit-in-line-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of DIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'line 'ar-th-quote arg))

(defun ar-separate-digit-in-line-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of DIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'line 'ar-th-separate arg))

(defun ar-show-digit-in-line-atpt (&optional arg) 
  "Employ actions of SHOW at things class of DIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'line 'ar-th-show arg))

(defun ar-singlequote-digit-in-line-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of DIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'line 'ar-th-singlequote arg))

(defun ar-slash-digit-in-line-atpt (&optional arg) 
  "Employ actions of SLASH at things class of DIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'line 'ar-th-slash arg))

(defun ar-star-digit-in-line-atpt (&optional arg) 
  "Employ actions of STAR at things class of DIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'line 'ar-th-star arg))

(defun ar-slashparen-digit-in-line-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of DIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'line 'ar-th-slashparen arg))

(defun ar-sort-digit-in-line-atpt (&optional arg) 
  "Employ actions of SORT at things class of DIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'line 'ar-th-sort arg))

(defun ar-trim-digit-in-line-atpt (&optional arg) 
  "Employ actions of TRIM at things class of DIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'line 'ar-th-trim arg))

(defun ar-trim-left-digit-in-line-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of DIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'line 'ar-th-trim-left arg))

(defun ar-trim-right-digit-in-line-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of DIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'line 'ar-th-trim-right arg))

(defun ar-underscore-digit-in-line-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of DIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'line 'ar-th-underscore arg))

(defun ar-whitespace-digit-in-line-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of DIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'line 'ar-th-whitespace arg))

(defun ar-digit-in-list-atpt (&optional arg) 
  "Employ actions of  at things class of DIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'list 'ar-th arg))

(defun ar-greaterangle-digit-in-list-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of DIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'list 'ar-th-greaterangle arg))

(defun ar-lesserangle-digit-in-list-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of DIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'list 'ar-th-lesserangle arg))

(defun ar-backslash-digit-in-list-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of DIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'list 'ar-th-backslash arg))

(defun ar-colon-digit-in-list-atpt (&optional arg) 
  "Employ actions of COLON at things class of DIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'list 'ar-th-colon arg))

(defun ar-beg-digit-in-list-atpt (&optional arg) 
  "Employ actions of BEG at things class of DIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'list 'ar-th-beg arg))

(defun ar-blok-digit-in-list-atpt (&optional arg) 
  "Employ actions of BLOK at things class of DIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'list 'ar-th-blok arg))

(defun ar-bounds-digit-in-list-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of DIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'list 'ar-th-bounds arg))

(defun ar-brace-digit-in-list-atpt (&optional arg) 
  "Employ actions of BRACE at things class of DIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'list 'ar-th-brace arg))

(defun ar-bracket-digit-in-list-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of DIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'list 'ar-th-bracket arg))

(defun ar-commatize-digit-in-list-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of DIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'list 'ar-th-commatize arg))

(defun ar-comment-digit-in-list-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of DIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'list 'ar-th-comment arg))

(defun ar-dollar-digit-in-list-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of DIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'list 'ar-th-dollar arg))

(defun ar-doublebackslash-digit-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of DIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'list 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-digit-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of DIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'list 'ar-th-doublebacktick arg))

(defun ar-doublequote-digit-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of DIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'list 'ar-th-doublequote arg))

(defun ar-doubleslash-digit-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of DIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'list 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-digit-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of DIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'list 'ar-th-doublebackslashparen arg))

(defun ar-end-digit-in-list-atpt (&optional arg) 
  "Employ actions of END at things class of DIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'list 'ar-th-end arg))

(defun ar-escape-digit-in-list-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of DIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'list 'ar-th-escape arg))

(defun ar-hide-digit-in-list-atpt (&optional arg) 
  "Employ actions of HIDE at things class of DIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'list 'ar-th-hide arg))

(defun ar-hide-show-digit-in-list-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of DIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'list 'ar-th-hide-show arg))

(defun ar-hyphen-digit-in-list-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of DIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'list 'ar-th-hyphen arg))

(defun ar-kill-digit-in-list-atpt (&optional arg) 
  "Employ actions of KILL at things class of DIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'list 'ar-th-kill arg))

(defun ar-leftrightsinglequote-digit-in-list-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of DIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'list 'ar-th-leftrightsinglequote arg))

(defun ar-length-digit-in-list-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of DIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'list 'ar-th-length arg))

(defun ar-parentize-digit-in-list-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of DIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'list 'ar-th-parentize arg))

(defun ar-quote-digit-in-list-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of DIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'list 'ar-th-quote arg))

(defun ar-separate-digit-in-list-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of DIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'list 'ar-th-separate arg))

(defun ar-show-digit-in-list-atpt (&optional arg) 
  "Employ actions of SHOW at things class of DIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'list 'ar-th-show arg))

(defun ar-singlequote-digit-in-list-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of DIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'list 'ar-th-singlequote arg))

(defun ar-slash-digit-in-list-atpt (&optional arg) 
  "Employ actions of SLASH at things class of DIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'list 'ar-th-slash arg))

(defun ar-star-digit-in-list-atpt (&optional arg) 
  "Employ actions of STAR at things class of DIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'list 'ar-th-star arg))

(defun ar-slashparen-digit-in-list-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of DIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'list 'ar-th-slashparen arg))

(defun ar-sort-digit-in-list-atpt (&optional arg) 
  "Employ actions of SORT at things class of DIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'list 'ar-th-sort arg))

(defun ar-trim-digit-in-list-atpt (&optional arg) 
  "Employ actions of TRIM at things class of DIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'list 'ar-th-trim arg))

(defun ar-trim-left-digit-in-list-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of DIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'list 'ar-th-trim-left arg))

(defun ar-trim-right-digit-in-list-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of DIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'list 'ar-th-trim-right arg))

(defun ar-underscore-digit-in-list-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of DIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'list 'ar-th-underscore arg))

(defun ar-whitespace-digit-in-list-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of DIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'list 'ar-th-whitespace arg))

(defun ar-digit-in-name-atpt (&optional arg) 
  "Employ actions of  at things class of DIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'name 'ar-th arg))

(defun ar-greaterangle-digit-in-name-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of DIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'name 'ar-th-greaterangle arg))

(defun ar-lesserangle-digit-in-name-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of DIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'name 'ar-th-lesserangle arg))

(defun ar-backslash-digit-in-name-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of DIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'name 'ar-th-backslash arg))

(defun ar-colon-digit-in-name-atpt (&optional arg) 
  "Employ actions of COLON at things class of DIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'name 'ar-th-colon arg))

(defun ar-beg-digit-in-name-atpt (&optional arg) 
  "Employ actions of BEG at things class of DIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'name 'ar-th-beg arg))

(defun ar-blok-digit-in-name-atpt (&optional arg) 
  "Employ actions of BLOK at things class of DIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'name 'ar-th-blok arg))

(defun ar-bounds-digit-in-name-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of DIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'name 'ar-th-bounds arg))

(defun ar-brace-digit-in-name-atpt (&optional arg) 
  "Employ actions of BRACE at things class of DIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'name 'ar-th-brace arg))

(defun ar-bracket-digit-in-name-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of DIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'name 'ar-th-bracket arg))

(defun ar-commatize-digit-in-name-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of DIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'name 'ar-th-commatize arg))

(defun ar-comment-digit-in-name-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of DIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'name 'ar-th-comment arg))

(defun ar-dollar-digit-in-name-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of DIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'name 'ar-th-dollar arg))

(defun ar-doublebackslash-digit-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of DIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'name 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-digit-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of DIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'name 'ar-th-doublebacktick arg))

(defun ar-doublequote-digit-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of DIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'name 'ar-th-doublequote arg))

(defun ar-doubleslash-digit-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of DIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'name 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-digit-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of DIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'name 'ar-th-doublebackslashparen arg))

(defun ar-end-digit-in-name-atpt (&optional arg) 
  "Employ actions of END at things class of DIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'name 'ar-th-end arg))

(defun ar-escape-digit-in-name-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of DIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'name 'ar-th-escape arg))

(defun ar-hide-digit-in-name-atpt (&optional arg) 
  "Employ actions of HIDE at things class of DIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'name 'ar-th-hide arg))

(defun ar-hide-show-digit-in-name-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of DIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'name 'ar-th-hide-show arg))

(defun ar-hyphen-digit-in-name-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of DIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'name 'ar-th-hyphen arg))

(defun ar-kill-digit-in-name-atpt (&optional arg) 
  "Employ actions of KILL at things class of DIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'name 'ar-th-kill arg))

(defun ar-leftrightsinglequote-digit-in-name-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of DIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'name 'ar-th-leftrightsinglequote arg))

(defun ar-length-digit-in-name-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of DIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'name 'ar-th-length arg))

(defun ar-parentize-digit-in-name-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of DIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'name 'ar-th-parentize arg))

(defun ar-quote-digit-in-name-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of DIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'name 'ar-th-quote arg))

(defun ar-separate-digit-in-name-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of DIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'name 'ar-th-separate arg))

(defun ar-show-digit-in-name-atpt (&optional arg) 
  "Employ actions of SHOW at things class of DIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'name 'ar-th-show arg))

(defun ar-singlequote-digit-in-name-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of DIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'name 'ar-th-singlequote arg))

(defun ar-slash-digit-in-name-atpt (&optional arg) 
  "Employ actions of SLASH at things class of DIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'name 'ar-th-slash arg))

(defun ar-star-digit-in-name-atpt (&optional arg) 
  "Employ actions of STAR at things class of DIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'name 'ar-th-star arg))

(defun ar-slashparen-digit-in-name-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of DIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'name 'ar-th-slashparen arg))

(defun ar-sort-digit-in-name-atpt (&optional arg) 
  "Employ actions of SORT at things class of DIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'name 'ar-th-sort arg))

(defun ar-trim-digit-in-name-atpt (&optional arg) 
  "Employ actions of TRIM at things class of DIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'name 'ar-th-trim arg))

(defun ar-trim-left-digit-in-name-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of DIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'name 'ar-th-trim-left arg))

(defun ar-trim-right-digit-in-name-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of DIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'name 'ar-th-trim-right arg))

(defun ar-underscore-digit-in-name-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of DIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'name 'ar-th-underscore arg))

(defun ar-whitespace-digit-in-name-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of DIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'name 'ar-th-whitespace arg))

(defun ar-digit-in-page-atpt (&optional arg) 
  "Employ actions of  at things class of DIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'page 'ar-th arg))

(defun ar-greaterangle-digit-in-page-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of DIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'page 'ar-th-greaterangle arg))

(defun ar-lesserangle-digit-in-page-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of DIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'page 'ar-th-lesserangle arg))

(defun ar-backslash-digit-in-page-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of DIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'page 'ar-th-backslash arg))

(defun ar-colon-digit-in-page-atpt (&optional arg) 
  "Employ actions of COLON at things class of DIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'page 'ar-th-colon arg))

(defun ar-beg-digit-in-page-atpt (&optional arg) 
  "Employ actions of BEG at things class of DIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'page 'ar-th-beg arg))

(defun ar-blok-digit-in-page-atpt (&optional arg) 
  "Employ actions of BLOK at things class of DIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'page 'ar-th-blok arg))

(defun ar-bounds-digit-in-page-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of DIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'page 'ar-th-bounds arg))

(defun ar-brace-digit-in-page-atpt (&optional arg) 
  "Employ actions of BRACE at things class of DIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'page 'ar-th-brace arg))

(defun ar-bracket-digit-in-page-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of DIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'page 'ar-th-bracket arg))

(defun ar-commatize-digit-in-page-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of DIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'page 'ar-th-commatize arg))

(defun ar-comment-digit-in-page-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of DIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'page 'ar-th-comment arg))

(defun ar-dollar-digit-in-page-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of DIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'page 'ar-th-dollar arg))

(defun ar-doublebackslash-digit-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of DIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'page 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-digit-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of DIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'page 'ar-th-doublebacktick arg))

(defun ar-doublequote-digit-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of DIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'page 'ar-th-doublequote arg))

(defun ar-doubleslash-digit-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of DIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'page 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-digit-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of DIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'page 'ar-th-doublebackslashparen arg))

(defun ar-end-digit-in-page-atpt (&optional arg) 
  "Employ actions of END at things class of DIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'page 'ar-th-end arg))

(defun ar-escape-digit-in-page-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of DIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'page 'ar-th-escape arg))

(defun ar-hide-digit-in-page-atpt (&optional arg) 
  "Employ actions of HIDE at things class of DIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'page 'ar-th-hide arg))

(defun ar-hide-show-digit-in-page-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of DIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'page 'ar-th-hide-show arg))

(defun ar-hyphen-digit-in-page-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of DIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'page 'ar-th-hyphen arg))

(defun ar-kill-digit-in-page-atpt (&optional arg) 
  "Employ actions of KILL at things class of DIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'page 'ar-th-kill arg))

(defun ar-leftrightsinglequote-digit-in-page-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of DIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'page 'ar-th-leftrightsinglequote arg))

(defun ar-length-digit-in-page-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of DIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'page 'ar-th-length arg))

(defun ar-parentize-digit-in-page-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of DIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'page 'ar-th-parentize arg))

(defun ar-quote-digit-in-page-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of DIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'page 'ar-th-quote arg))

(defun ar-separate-digit-in-page-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of DIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'page 'ar-th-separate arg))

(defun ar-show-digit-in-page-atpt (&optional arg) 
  "Employ actions of SHOW at things class of DIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'page 'ar-th-show arg))

(defun ar-singlequote-digit-in-page-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of DIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'page 'ar-th-singlequote arg))

(defun ar-slash-digit-in-page-atpt (&optional arg) 
  "Employ actions of SLASH at things class of DIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'page 'ar-th-slash arg))

(defun ar-star-digit-in-page-atpt (&optional arg) 
  "Employ actions of STAR at things class of DIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'page 'ar-th-star arg))

(defun ar-slashparen-digit-in-page-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of DIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'page 'ar-th-slashparen arg))

(defun ar-sort-digit-in-page-atpt (&optional arg) 
  "Employ actions of SORT at things class of DIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'page 'ar-th-sort arg))

(defun ar-trim-digit-in-page-atpt (&optional arg) 
  "Employ actions of TRIM at things class of DIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'page 'ar-th-trim arg))

(defun ar-trim-left-digit-in-page-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of DIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'page 'ar-th-trim-left arg))

(defun ar-trim-right-digit-in-page-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of DIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'page 'ar-th-trim-right arg))

(defun ar-underscore-digit-in-page-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of DIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'page 'ar-th-underscore arg))

(defun ar-whitespace-digit-in-page-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of DIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'page 'ar-th-whitespace arg))

(defun ar-digit-in-paragraph-atpt (&optional arg) 
  "Employ actions of  at things class of DIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'paragraph 'ar-th arg))

(defun ar-greaterangle-digit-in-paragraph-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of DIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'paragraph 'ar-th-greaterangle arg))

(defun ar-lesserangle-digit-in-paragraph-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of DIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'paragraph 'ar-th-lesserangle arg))

(defun ar-backslash-digit-in-paragraph-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of DIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'paragraph 'ar-th-backslash arg))

(defun ar-colon-digit-in-paragraph-atpt (&optional arg) 
  "Employ actions of COLON at things class of DIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'paragraph 'ar-th-colon arg))

(defun ar-beg-digit-in-paragraph-atpt (&optional arg) 
  "Employ actions of BEG at things class of DIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'paragraph 'ar-th-beg arg))

(defun ar-blok-digit-in-paragraph-atpt (&optional arg) 
  "Employ actions of BLOK at things class of DIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'paragraph 'ar-th-blok arg))

(defun ar-bounds-digit-in-paragraph-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of DIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'paragraph 'ar-th-bounds arg))

(defun ar-brace-digit-in-paragraph-atpt (&optional arg) 
  "Employ actions of BRACE at things class of DIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'paragraph 'ar-th-brace arg))

(defun ar-bracket-digit-in-paragraph-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of DIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'paragraph 'ar-th-bracket arg))

(defun ar-commatize-digit-in-paragraph-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of DIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'paragraph 'ar-th-commatize arg))

(defun ar-comment-digit-in-paragraph-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of DIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'paragraph 'ar-th-comment arg))

(defun ar-dollar-digit-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of DIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'paragraph 'ar-th-dollar arg))

(defun ar-doublebackslash-digit-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of DIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'paragraph 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-digit-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of DIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'paragraph 'ar-th-doublebacktick arg))

(defun ar-doublequote-digit-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of DIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'paragraph 'ar-th-doublequote arg))

(defun ar-doubleslash-digit-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of DIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'paragraph 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-digit-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of DIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'paragraph 'ar-th-doublebackslashparen arg))

(defun ar-end-digit-in-paragraph-atpt (&optional arg) 
  "Employ actions of END at things class of DIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'paragraph 'ar-th-end arg))

(defun ar-escape-digit-in-paragraph-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of DIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'paragraph 'ar-th-escape arg))

(defun ar-hide-digit-in-paragraph-atpt (&optional arg) 
  "Employ actions of HIDE at things class of DIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'paragraph 'ar-th-hide arg))

(defun ar-hide-show-digit-in-paragraph-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of DIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'paragraph 'ar-th-hide-show arg))

(defun ar-hyphen-digit-in-paragraph-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of DIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'paragraph 'ar-th-hyphen arg))

(defun ar-kill-digit-in-paragraph-atpt (&optional arg) 
  "Employ actions of KILL at things class of DIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'paragraph 'ar-th-kill arg))

(defun ar-leftrightsinglequote-digit-in-paragraph-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of DIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'paragraph 'ar-th-leftrightsinglequote arg))

(defun ar-length-digit-in-paragraph-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of DIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'paragraph 'ar-th-length arg))

(defun ar-parentize-digit-in-paragraph-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of DIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'paragraph 'ar-th-parentize arg))

(defun ar-quote-digit-in-paragraph-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of DIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'paragraph 'ar-th-quote arg))

(defun ar-separate-digit-in-paragraph-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of DIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'paragraph 'ar-th-separate arg))

(defun ar-show-digit-in-paragraph-atpt (&optional arg) 
  "Employ actions of SHOW at things class of DIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'paragraph 'ar-th-show arg))

(defun ar-singlequote-digit-in-paragraph-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of DIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'paragraph 'ar-th-singlequote arg))

(defun ar-slash-digit-in-paragraph-atpt (&optional arg) 
  "Employ actions of SLASH at things class of DIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'paragraph 'ar-th-slash arg))

(defun ar-star-digit-in-paragraph-atpt (&optional arg) 
  "Employ actions of STAR at things class of DIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'paragraph 'ar-th-star arg))

(defun ar-slashparen-digit-in-paragraph-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of DIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'paragraph 'ar-th-slashparen arg))

(defun ar-sort-digit-in-paragraph-atpt (&optional arg) 
  "Employ actions of SORT at things class of DIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'paragraph 'ar-th-sort arg))

(defun ar-trim-digit-in-paragraph-atpt (&optional arg) 
  "Employ actions of TRIM at things class of DIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'paragraph 'ar-th-trim arg))

(defun ar-trim-left-digit-in-paragraph-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of DIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'paragraph 'ar-th-trim-left arg))

(defun ar-trim-right-digit-in-paragraph-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of DIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'paragraph 'ar-th-trim-right arg))

(defun ar-underscore-digit-in-paragraph-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of DIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'paragraph 'ar-th-underscore arg))

(defun ar-whitespace-digit-in-paragraph-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of DIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'paragraph 'ar-th-whitespace arg))

(defun ar-digit-in-region-atpt (&optional arg) 
  "Employ actions of  at things class of DIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'region 'ar-th arg))

(defun ar-greaterangle-digit-in-region-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of DIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'region 'ar-th-greaterangle arg))

(defun ar-lesserangle-digit-in-region-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of DIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'region 'ar-th-lesserangle arg))

(defun ar-backslash-digit-in-region-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of DIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'region 'ar-th-backslash arg))

(defun ar-colon-digit-in-region-atpt (&optional arg) 
  "Employ actions of COLON at things class of DIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'region 'ar-th-colon arg))

(defun ar-beg-digit-in-region-atpt (&optional arg) 
  "Employ actions of BEG at things class of DIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'region 'ar-th-beg arg))

(defun ar-blok-digit-in-region-atpt (&optional arg) 
  "Employ actions of BLOK at things class of DIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'region 'ar-th-blok arg))

(defun ar-bounds-digit-in-region-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of DIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'region 'ar-th-bounds arg))

(defun ar-brace-digit-in-region-atpt (&optional arg) 
  "Employ actions of BRACE at things class of DIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'region 'ar-th-brace arg))

(defun ar-bracket-digit-in-region-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of DIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'region 'ar-th-bracket arg))

(defun ar-commatize-digit-in-region-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of DIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'region 'ar-th-commatize arg))

(defun ar-comment-digit-in-region-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of DIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'region 'ar-th-comment arg))

(defun ar-dollar-digit-in-region-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of DIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'region 'ar-th-dollar arg))

(defun ar-doublebackslash-digit-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of DIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'region 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-digit-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of DIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'region 'ar-th-doublebacktick arg))

(defun ar-doublequote-digit-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of DIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'region 'ar-th-doublequote arg))

(defun ar-doubleslash-digit-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of DIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'region 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-digit-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of DIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'region 'ar-th-doublebackslashparen arg))

(defun ar-end-digit-in-region-atpt (&optional arg) 
  "Employ actions of END at things class of DIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'region 'ar-th-end arg))

(defun ar-escape-digit-in-region-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of DIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'region 'ar-th-escape arg))

(defun ar-hide-digit-in-region-atpt (&optional arg) 
  "Employ actions of HIDE at things class of DIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'region 'ar-th-hide arg))

(defun ar-hide-show-digit-in-region-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of DIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'region 'ar-th-hide-show arg))

(defun ar-hyphen-digit-in-region-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of DIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'region 'ar-th-hyphen arg))

(defun ar-kill-digit-in-region-atpt (&optional arg) 
  "Employ actions of KILL at things class of DIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'region 'ar-th-kill arg))

(defun ar-leftrightsinglequote-digit-in-region-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of DIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'region 'ar-th-leftrightsinglequote arg))

(defun ar-length-digit-in-region-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of DIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'region 'ar-th-length arg))

(defun ar-parentize-digit-in-region-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of DIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'region 'ar-th-parentize arg))

(defun ar-quote-digit-in-region-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of DIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'region 'ar-th-quote arg))

(defun ar-separate-digit-in-region-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of DIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'region 'ar-th-separate arg))

(defun ar-show-digit-in-region-atpt (&optional arg) 
  "Employ actions of SHOW at things class of DIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'region 'ar-th-show arg))

(defun ar-singlequote-digit-in-region-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of DIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'region 'ar-th-singlequote arg))

(defun ar-slash-digit-in-region-atpt (&optional arg) 
  "Employ actions of SLASH at things class of DIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'region 'ar-th-slash arg))

(defun ar-star-digit-in-region-atpt (&optional arg) 
  "Employ actions of STAR at things class of DIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'region 'ar-th-star arg))

(defun ar-slashparen-digit-in-region-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of DIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'region 'ar-th-slashparen arg))

(defun ar-sort-digit-in-region-atpt (&optional arg) 
  "Employ actions of SORT at things class of DIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'region 'ar-th-sort arg))

(defun ar-trim-digit-in-region-atpt (&optional arg) 
  "Employ actions of TRIM at things class of DIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'region 'ar-th-trim arg))

(defun ar-trim-left-digit-in-region-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of DIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'region 'ar-th-trim-left arg))

(defun ar-trim-right-digit-in-region-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of DIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'region 'ar-th-trim-right arg))

(defun ar-underscore-digit-in-region-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of DIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'region 'ar-th-underscore arg))

(defun ar-whitespace-digit-in-region-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of DIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'region 'ar-th-whitespace arg))

(defun ar-digit-in-sentence-atpt (&optional arg) 
  "Employ actions of  at things class of DIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sentence 'ar-th arg))

(defun ar-greaterangle-digit-in-sentence-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of DIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sentence 'ar-th-greaterangle arg))

(defun ar-lesserangle-digit-in-sentence-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of DIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sentence 'ar-th-lesserangle arg))

(defun ar-backslash-digit-in-sentence-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of DIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sentence 'ar-th-backslash arg))

(defun ar-colon-digit-in-sentence-atpt (&optional arg) 
  "Employ actions of COLON at things class of DIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sentence 'ar-th-colon arg))

(defun ar-beg-digit-in-sentence-atpt (&optional arg) 
  "Employ actions of BEG at things class of DIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sentence 'ar-th-beg arg))

(defun ar-blok-digit-in-sentence-atpt (&optional arg) 
  "Employ actions of BLOK at things class of DIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sentence 'ar-th-blok arg))

(defun ar-bounds-digit-in-sentence-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of DIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sentence 'ar-th-bounds arg))

(defun ar-brace-digit-in-sentence-atpt (&optional arg) 
  "Employ actions of BRACE at things class of DIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sentence 'ar-th-brace arg))

(defun ar-bracket-digit-in-sentence-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of DIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sentence 'ar-th-bracket arg))

(defun ar-commatize-digit-in-sentence-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of DIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sentence 'ar-th-commatize arg))

(defun ar-comment-digit-in-sentence-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of DIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sentence 'ar-th-comment arg))

(defun ar-dollar-digit-in-sentence-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of DIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sentence 'ar-th-dollar arg))

(defun ar-doublebackslash-digit-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of DIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sentence 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-digit-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of DIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sentence 'ar-th-doublebacktick arg))

(defun ar-doublequote-digit-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of DIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sentence 'ar-th-doublequote arg))

(defun ar-doubleslash-digit-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of DIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sentence 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-digit-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of DIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sentence 'ar-th-doublebackslashparen arg))

(defun ar-end-digit-in-sentence-atpt (&optional arg) 
  "Employ actions of END at things class of DIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sentence 'ar-th-end arg))

(defun ar-escape-digit-in-sentence-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of DIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sentence 'ar-th-escape arg))

(defun ar-hide-digit-in-sentence-atpt (&optional arg) 
  "Employ actions of HIDE at things class of DIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sentence 'ar-th-hide arg))

(defun ar-hide-show-digit-in-sentence-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of DIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sentence 'ar-th-hide-show arg))

(defun ar-hyphen-digit-in-sentence-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of DIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sentence 'ar-th-hyphen arg))

(defun ar-kill-digit-in-sentence-atpt (&optional arg) 
  "Employ actions of KILL at things class of DIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sentence 'ar-th-kill arg))

(defun ar-leftrightsinglequote-digit-in-sentence-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of DIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sentence 'ar-th-leftrightsinglequote arg))

(defun ar-length-digit-in-sentence-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of DIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sentence 'ar-th-length arg))

(defun ar-parentize-digit-in-sentence-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of DIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sentence 'ar-th-parentize arg))

(defun ar-quote-digit-in-sentence-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of DIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sentence 'ar-th-quote arg))

(defun ar-separate-digit-in-sentence-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of DIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sentence 'ar-th-separate arg))

(defun ar-show-digit-in-sentence-atpt (&optional arg) 
  "Employ actions of SHOW at things class of DIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sentence 'ar-th-show arg))

(defun ar-singlequote-digit-in-sentence-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of DIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sentence 'ar-th-singlequote arg))

(defun ar-slash-digit-in-sentence-atpt (&optional arg) 
  "Employ actions of SLASH at things class of DIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sentence 'ar-th-slash arg))

(defun ar-star-digit-in-sentence-atpt (&optional arg) 
  "Employ actions of STAR at things class of DIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sentence 'ar-th-star arg))

(defun ar-slashparen-digit-in-sentence-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of DIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sentence 'ar-th-slashparen arg))

(defun ar-sort-digit-in-sentence-atpt (&optional arg) 
  "Employ actions of SORT at things class of DIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sentence 'ar-th-sort arg))

(defun ar-trim-digit-in-sentence-atpt (&optional arg) 
  "Employ actions of TRIM at things class of DIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sentence 'ar-th-trim arg))

(defun ar-trim-left-digit-in-sentence-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of DIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sentence 'ar-th-trim-left arg))

(defun ar-trim-right-digit-in-sentence-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of DIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sentence 'ar-th-trim-right arg))

(defun ar-underscore-digit-in-sentence-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of DIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sentence 'ar-th-underscore arg))

(defun ar-whitespace-digit-in-sentence-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of DIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sentence 'ar-th-whitespace arg))

(defun ar-digit-in-sexp-atpt (&optional arg) 
  "Employ actions of  at things class of DIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sexp 'ar-th arg))

(defun ar-greaterangle-digit-in-sexp-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of DIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sexp 'ar-th-greaterangle arg))

(defun ar-lesserangle-digit-in-sexp-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of DIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sexp 'ar-th-lesserangle arg))

(defun ar-backslash-digit-in-sexp-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of DIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sexp 'ar-th-backslash arg))

(defun ar-colon-digit-in-sexp-atpt (&optional arg) 
  "Employ actions of COLON at things class of DIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sexp 'ar-th-colon arg))

(defun ar-beg-digit-in-sexp-atpt (&optional arg) 
  "Employ actions of BEG at things class of DIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sexp 'ar-th-beg arg))

(defun ar-blok-digit-in-sexp-atpt (&optional arg) 
  "Employ actions of BLOK at things class of DIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sexp 'ar-th-blok arg))

(defun ar-bounds-digit-in-sexp-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of DIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sexp 'ar-th-bounds arg))

(defun ar-brace-digit-in-sexp-atpt (&optional arg) 
  "Employ actions of BRACE at things class of DIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sexp 'ar-th-brace arg))

(defun ar-bracket-digit-in-sexp-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of DIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sexp 'ar-th-bracket arg))

(defun ar-commatize-digit-in-sexp-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of DIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sexp 'ar-th-commatize arg))

(defun ar-comment-digit-in-sexp-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of DIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sexp 'ar-th-comment arg))

(defun ar-dollar-digit-in-sexp-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of DIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sexp 'ar-th-dollar arg))

(defun ar-doublebackslash-digit-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of DIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sexp 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-digit-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of DIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sexp 'ar-th-doublebacktick arg))

(defun ar-doublequote-digit-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of DIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sexp 'ar-th-doublequote arg))

(defun ar-doubleslash-digit-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of DIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sexp 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-digit-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of DIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sexp 'ar-th-doublebackslashparen arg))

(defun ar-end-digit-in-sexp-atpt (&optional arg) 
  "Employ actions of END at things class of DIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sexp 'ar-th-end arg))

(defun ar-escape-digit-in-sexp-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of DIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sexp 'ar-th-escape arg))

(defun ar-hide-digit-in-sexp-atpt (&optional arg) 
  "Employ actions of HIDE at things class of DIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sexp 'ar-th-hide arg))

(defun ar-hide-show-digit-in-sexp-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of DIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sexp 'ar-th-hide-show arg))

(defun ar-hyphen-digit-in-sexp-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of DIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sexp 'ar-th-hyphen arg))

(defun ar-kill-digit-in-sexp-atpt (&optional arg) 
  "Employ actions of KILL at things class of DIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sexp 'ar-th-kill arg))

(defun ar-leftrightsinglequote-digit-in-sexp-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of DIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sexp 'ar-th-leftrightsinglequote arg))

(defun ar-length-digit-in-sexp-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of DIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sexp 'ar-th-length arg))

(defun ar-parentize-digit-in-sexp-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of DIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sexp 'ar-th-parentize arg))

(defun ar-quote-digit-in-sexp-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of DIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sexp 'ar-th-quote arg))

(defun ar-separate-digit-in-sexp-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of DIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sexp 'ar-th-separate arg))

(defun ar-show-digit-in-sexp-atpt (&optional arg) 
  "Employ actions of SHOW at things class of DIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sexp 'ar-th-show arg))

(defun ar-singlequote-digit-in-sexp-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of DIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sexp 'ar-th-singlequote arg))

(defun ar-slash-digit-in-sexp-atpt (&optional arg) 
  "Employ actions of SLASH at things class of DIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sexp 'ar-th-slash arg))

(defun ar-star-digit-in-sexp-atpt (&optional arg) 
  "Employ actions of STAR at things class of DIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sexp 'ar-th-star arg))

(defun ar-slashparen-digit-in-sexp-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of DIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sexp 'ar-th-slashparen arg))

(defun ar-sort-digit-in-sexp-atpt (&optional arg) 
  "Employ actions of SORT at things class of DIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sexp 'ar-th-sort arg))

(defun ar-trim-digit-in-sexp-atpt (&optional arg) 
  "Employ actions of TRIM at things class of DIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sexp 'ar-th-trim arg))

(defun ar-trim-left-digit-in-sexp-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of DIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sexp 'ar-th-trim-left arg))

(defun ar-trim-right-digit-in-sexp-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of DIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sexp 'ar-th-trim-right arg))

(defun ar-underscore-digit-in-sexp-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of DIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sexp 'ar-th-underscore arg))

(defun ar-whitespace-digit-in-sexp-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of DIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'sexp 'ar-th-whitespace arg))

(defun ar-digit-in-shstruct-atpt (&optional arg) 
  "Employ actions of  at things class of DIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'shstruct 'ar-th arg))

(defun ar-greaterangle-digit-in-shstruct-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of DIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'shstruct 'ar-th-greaterangle arg))

(defun ar-lesserangle-digit-in-shstruct-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of DIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'shstruct 'ar-th-lesserangle arg))

(defun ar-backslash-digit-in-shstruct-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of DIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'shstruct 'ar-th-backslash arg))

(defun ar-colon-digit-in-shstruct-atpt (&optional arg) 
  "Employ actions of COLON at things class of DIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'shstruct 'ar-th-colon arg))

(defun ar-beg-digit-in-shstruct-atpt (&optional arg) 
  "Employ actions of BEG at things class of DIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'shstruct 'ar-th-beg arg))

(defun ar-blok-digit-in-shstruct-atpt (&optional arg) 
  "Employ actions of BLOK at things class of DIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'shstruct 'ar-th-blok arg))

(defun ar-bounds-digit-in-shstruct-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of DIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'shstruct 'ar-th-bounds arg))

(defun ar-brace-digit-in-shstruct-atpt (&optional arg) 
  "Employ actions of BRACE at things class of DIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'shstruct 'ar-th-brace arg))

(defun ar-bracket-digit-in-shstruct-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of DIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'shstruct 'ar-th-bracket arg))

(defun ar-commatize-digit-in-shstruct-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of DIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'shstruct 'ar-th-commatize arg))

(defun ar-comment-digit-in-shstruct-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of DIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'shstruct 'ar-th-comment arg))

(defun ar-dollar-digit-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of DIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'shstruct 'ar-th-dollar arg))

(defun ar-doublebackslash-digit-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of DIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'shstruct 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-digit-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of DIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'shstruct 'ar-th-doublebacktick arg))

(defun ar-doublequote-digit-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of DIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'shstruct 'ar-th-doublequote arg))

(defun ar-doubleslash-digit-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of DIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'shstruct 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-digit-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of DIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'shstruct 'ar-th-doublebackslashparen arg))

(defun ar-end-digit-in-shstruct-atpt (&optional arg) 
  "Employ actions of END at things class of DIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'shstruct 'ar-th-end arg))

(defun ar-escape-digit-in-shstruct-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of DIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'shstruct 'ar-th-escape arg))

(defun ar-hide-digit-in-shstruct-atpt (&optional arg) 
  "Employ actions of HIDE at things class of DIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'shstruct 'ar-th-hide arg))

(defun ar-hide-show-digit-in-shstruct-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of DIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'shstruct 'ar-th-hide-show arg))

(defun ar-hyphen-digit-in-shstruct-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of DIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'shstruct 'ar-th-hyphen arg))

(defun ar-kill-digit-in-shstruct-atpt (&optional arg) 
  "Employ actions of KILL at things class of DIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'shstruct 'ar-th-kill arg))

(defun ar-leftrightsinglequote-digit-in-shstruct-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of DIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'shstruct 'ar-th-leftrightsinglequote arg))

(defun ar-length-digit-in-shstruct-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of DIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'shstruct 'ar-th-length arg))

(defun ar-parentize-digit-in-shstruct-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of DIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'shstruct 'ar-th-parentize arg))

(defun ar-quote-digit-in-shstruct-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of DIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'shstruct 'ar-th-quote arg))

(defun ar-separate-digit-in-shstruct-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of DIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'shstruct 'ar-th-separate arg))

(defun ar-show-digit-in-shstruct-atpt (&optional arg) 
  "Employ actions of SHOW at things class of DIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'shstruct 'ar-th-show arg))

(defun ar-singlequote-digit-in-shstruct-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of DIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'shstruct 'ar-th-singlequote arg))

(defun ar-slash-digit-in-shstruct-atpt (&optional arg) 
  "Employ actions of SLASH at things class of DIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'shstruct 'ar-th-slash arg))

(defun ar-star-digit-in-shstruct-atpt (&optional arg) 
  "Employ actions of STAR at things class of DIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'shstruct 'ar-th-star arg))

(defun ar-slashparen-digit-in-shstruct-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of DIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'shstruct 'ar-th-slashparen arg))

(defun ar-sort-digit-in-shstruct-atpt (&optional arg) 
  "Employ actions of SORT at things class of DIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'shstruct 'ar-th-sort arg))

(defun ar-trim-digit-in-shstruct-atpt (&optional arg) 
  "Employ actions of TRIM at things class of DIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'shstruct 'ar-th-trim arg))

(defun ar-trim-left-digit-in-shstruct-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of DIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'shstruct 'ar-th-trim-left arg))

(defun ar-trim-right-digit-in-shstruct-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of DIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'shstruct 'ar-th-trim-right arg))

(defun ar-underscore-digit-in-shstruct-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of DIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'shstruct 'ar-th-underscore arg))

(defun ar-whitespace-digit-in-shstruct-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of DIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'digit 'shstruct 'ar-th-whitespace arg))

(defun ar-graph-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of  at things class of GRAPH residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'greateranglednested 'ar-th arg))

(defun ar-greaterangle-graph-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of GRAPH residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'greateranglednested 'ar-th-greaterangle arg))

(defun ar-lesserangle-graph-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of GRAPH residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'greateranglednested 'ar-th-lesserangle arg))

(defun ar-backslash-graph-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of GRAPH residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'greateranglednested 'ar-th-backslash arg))

(defun ar-colon-graph-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of COLON at things class of GRAPH residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'greateranglednested 'ar-th-colon arg))

(defun ar-beg-graph-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BEG at things class of GRAPH residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'greateranglednested 'ar-th-beg arg))

(defun ar-blok-graph-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BLOK at things class of GRAPH residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'greateranglednested 'ar-th-blok arg))

(defun ar-bounds-graph-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of GRAPH residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'greateranglednested 'ar-th-bounds arg))

(defun ar-brace-graph-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BRACE at things class of GRAPH residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'greateranglednested 'ar-th-brace arg))

(defun ar-bracket-graph-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of GRAPH residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'greateranglednested 'ar-th-bracket arg))

(defun ar-commatize-graph-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of GRAPH residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'greateranglednested 'ar-th-commatize arg))

(defun ar-comment-graph-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of GRAPH residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'greateranglednested 'ar-th-comment arg))

(defun ar-dollar-graph-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of GRAPH residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'greateranglednested 'ar-th-dollar arg))

(defun ar-doublebackslash-graph-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of GRAPH residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'greateranglednested 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-graph-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of GRAPH residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'greateranglednested 'ar-th-doublebacktick arg))

(defun ar-doublequote-graph-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of GRAPH residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'greateranglednested 'ar-th-doublequote arg))

(defun ar-doubleslash-graph-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of GRAPH residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'greateranglednested 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-graph-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of GRAPH residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'greateranglednested 'ar-th-doublebackslashparen arg))

(defun ar-end-graph-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of END at things class of GRAPH residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'greateranglednested 'ar-th-end arg))

(defun ar-escape-graph-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of GRAPH residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'greateranglednested 'ar-th-escape arg))

(defun ar-hide-graph-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of HIDE at things class of GRAPH residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'greateranglednested 'ar-th-hide arg))

(defun ar-hide-show-graph-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of GRAPH residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'greateranglednested 'ar-th-hide-show arg))

(defun ar-hyphen-graph-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of GRAPH residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'greateranglednested 'ar-th-hyphen arg))

(defun ar-kill-graph-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of KILL at things class of GRAPH residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'greateranglednested 'ar-th-kill arg))

(defun ar-leftrightsinglequote-graph-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of GRAPH residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'greateranglednested 'ar-th-leftrightsinglequote arg))

(defun ar-length-graph-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of GRAPH residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'greateranglednested 'ar-th-length arg))

(defun ar-parentize-graph-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of GRAPH residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'greateranglednested 'ar-th-parentize arg))

(defun ar-quote-graph-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of GRAPH residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'greateranglednested 'ar-th-quote arg))

(defun ar-separate-graph-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of GRAPH residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'greateranglednested 'ar-th-separate arg))

(defun ar-show-graph-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SHOW at things class of GRAPH residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'greateranglednested 'ar-th-show arg))

(defun ar-singlequote-graph-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of GRAPH residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'greateranglednested 'ar-th-singlequote arg))

(defun ar-slash-graph-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SLASH at things class of GRAPH residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'greateranglednested 'ar-th-slash arg))

(defun ar-star-graph-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of STAR at things class of GRAPH residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'greateranglednested 'ar-th-star arg))

(defun ar-slashparen-graph-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of GRAPH residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'greateranglednested 'ar-th-slashparen arg))

(defun ar-sort-graph-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SORT at things class of GRAPH residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'greateranglednested 'ar-th-sort arg))

(defun ar-trim-graph-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of TRIM at things class of GRAPH residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'greateranglednested 'ar-th-trim arg))

(defun ar-trim-left-graph-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of GRAPH residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'greateranglednested 'ar-th-trim-left arg))

(defun ar-trim-right-graph-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of GRAPH residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'greateranglednested 'ar-th-trim-right arg))

(defun ar-underscore-graph-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of GRAPH residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'greateranglednested 'ar-th-underscore arg))

(defun ar-whitespace-graph-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of GRAPH residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'greateranglednested 'ar-th-whitespace arg))

(defun ar-graph-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of  at things class of GRAPH residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'lesseranglednested 'ar-th arg))

(defun ar-greaterangle-graph-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of GRAPH residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'lesseranglednested 'ar-th-greaterangle arg))

(defun ar-lesserangle-graph-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of GRAPH residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'lesseranglednested 'ar-th-lesserangle arg))

(defun ar-backslash-graph-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of GRAPH residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'lesseranglednested 'ar-th-backslash arg))

(defun ar-colon-graph-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of COLON at things class of GRAPH residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'lesseranglednested 'ar-th-colon arg))

(defun ar-beg-graph-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BEG at things class of GRAPH residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'lesseranglednested 'ar-th-beg arg))

(defun ar-blok-graph-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BLOK at things class of GRAPH residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'lesseranglednested 'ar-th-blok arg))

(defun ar-bounds-graph-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of GRAPH residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'lesseranglednested 'ar-th-bounds arg))

(defun ar-brace-graph-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BRACE at things class of GRAPH residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'lesseranglednested 'ar-th-brace arg))

(defun ar-bracket-graph-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of GRAPH residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'lesseranglednested 'ar-th-bracket arg))

(defun ar-commatize-graph-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of GRAPH residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'lesseranglednested 'ar-th-commatize arg))

(defun ar-comment-graph-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of GRAPH residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'lesseranglednested 'ar-th-comment arg))

(defun ar-dollar-graph-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of GRAPH residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'lesseranglednested 'ar-th-dollar arg))

(defun ar-doublebackslash-graph-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of GRAPH residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'lesseranglednested 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-graph-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of GRAPH residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'lesseranglednested 'ar-th-doublebacktick arg))

(defun ar-doublequote-graph-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of GRAPH residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'lesseranglednested 'ar-th-doublequote arg))

(defun ar-doubleslash-graph-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of GRAPH residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'lesseranglednested 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-graph-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of GRAPH residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'lesseranglednested 'ar-th-doublebackslashparen arg))

(defun ar-end-graph-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of END at things class of GRAPH residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'lesseranglednested 'ar-th-end arg))

(defun ar-escape-graph-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of GRAPH residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'lesseranglednested 'ar-th-escape arg))

(defun ar-hide-graph-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of HIDE at things class of GRAPH residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'lesseranglednested 'ar-th-hide arg))

(defun ar-hide-show-graph-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of GRAPH residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'lesseranglednested 'ar-th-hide-show arg))

(defun ar-hyphen-graph-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of GRAPH residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'lesseranglednested 'ar-th-hyphen arg))

(defun ar-kill-graph-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of KILL at things class of GRAPH residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'lesseranglednested 'ar-th-kill arg))

(defun ar-leftrightsinglequote-graph-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of GRAPH residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'lesseranglednested 'ar-th-leftrightsinglequote arg))

(defun ar-length-graph-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of GRAPH residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'lesseranglednested 'ar-th-length arg))

(defun ar-parentize-graph-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of GRAPH residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'lesseranglednested 'ar-th-parentize arg))

(defun ar-quote-graph-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of GRAPH residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'lesseranglednested 'ar-th-quote arg))

(defun ar-separate-graph-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of GRAPH residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'lesseranglednested 'ar-th-separate arg))

(defun ar-show-graph-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SHOW at things class of GRAPH residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'lesseranglednested 'ar-th-show arg))

(defun ar-singlequote-graph-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of GRAPH residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'lesseranglednested 'ar-th-singlequote arg))

(defun ar-slash-graph-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SLASH at things class of GRAPH residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'lesseranglednested 'ar-th-slash arg))

(defun ar-star-graph-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of STAR at things class of GRAPH residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'lesseranglednested 'ar-th-star arg))

(defun ar-slashparen-graph-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of GRAPH residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'lesseranglednested 'ar-th-slashparen arg))

(defun ar-sort-graph-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SORT at things class of GRAPH residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'lesseranglednested 'ar-th-sort arg))

(defun ar-trim-graph-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of TRIM at things class of GRAPH residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'lesseranglednested 'ar-th-trim arg))

(defun ar-trim-left-graph-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of GRAPH residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'lesseranglednested 'ar-th-trim-left arg))

(defun ar-trim-right-graph-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of GRAPH residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'lesseranglednested 'ar-th-trim-right arg))

(defun ar-underscore-graph-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of GRAPH residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'lesseranglednested 'ar-th-underscore arg))

(defun ar-whitespace-graph-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of GRAPH residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'lesseranglednested 'ar-th-whitespace arg))

(defun ar-graph-in-buffer-atpt (&optional arg) 
  "Employ actions of  at things class of GRAPH residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'buffer 'ar-th arg))

(defun ar-greaterangle-graph-in-buffer-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of GRAPH residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'buffer 'ar-th-greaterangle arg))

(defun ar-lesserangle-graph-in-buffer-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of GRAPH residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'buffer 'ar-th-lesserangle arg))

(defun ar-backslash-graph-in-buffer-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of GRAPH residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'buffer 'ar-th-backslash arg))

(defun ar-colon-graph-in-buffer-atpt (&optional arg) 
  "Employ actions of COLON at things class of GRAPH residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'buffer 'ar-th-colon arg))

(defun ar-beg-graph-in-buffer-atpt (&optional arg) 
  "Employ actions of BEG at things class of GRAPH residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'buffer 'ar-th-beg arg))

(defun ar-blok-graph-in-buffer-atpt (&optional arg) 
  "Employ actions of BLOK at things class of GRAPH residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'buffer 'ar-th-blok arg))

(defun ar-bounds-graph-in-buffer-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of GRAPH residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'buffer 'ar-th-bounds arg))

(defun ar-brace-graph-in-buffer-atpt (&optional arg) 
  "Employ actions of BRACE at things class of GRAPH residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'buffer 'ar-th-brace arg))

(defun ar-bracket-graph-in-buffer-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of GRAPH residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'buffer 'ar-th-bracket arg))

(defun ar-commatize-graph-in-buffer-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of GRAPH residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'buffer 'ar-th-commatize arg))

(defun ar-comment-graph-in-buffer-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of GRAPH residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'buffer 'ar-th-comment arg))

(defun ar-dollar-graph-in-buffer-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of GRAPH residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'buffer 'ar-th-dollar arg))

(defun ar-doublebackslash-graph-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of GRAPH residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'buffer 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-graph-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of GRAPH residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'buffer 'ar-th-doublebacktick arg))

(defun ar-doublequote-graph-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of GRAPH residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'buffer 'ar-th-doublequote arg))

(defun ar-doubleslash-graph-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of GRAPH residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'buffer 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-graph-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of GRAPH residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'buffer 'ar-th-doublebackslashparen arg))

(defun ar-end-graph-in-buffer-atpt (&optional arg) 
  "Employ actions of END at things class of GRAPH residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'buffer 'ar-th-end arg))

(defun ar-escape-graph-in-buffer-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of GRAPH residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'buffer 'ar-th-escape arg))

(defun ar-hide-graph-in-buffer-atpt (&optional arg) 
  "Employ actions of HIDE at things class of GRAPH residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'buffer 'ar-th-hide arg))

(defun ar-hide-show-graph-in-buffer-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of GRAPH residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'buffer 'ar-th-hide-show arg))

(defun ar-hyphen-graph-in-buffer-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of GRAPH residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'buffer 'ar-th-hyphen arg))

(defun ar-kill-graph-in-buffer-atpt (&optional arg) 
  "Employ actions of KILL at things class of GRAPH residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'buffer 'ar-th-kill arg))

(defun ar-leftrightsinglequote-graph-in-buffer-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of GRAPH residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'buffer 'ar-th-leftrightsinglequote arg))

(defun ar-length-graph-in-buffer-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of GRAPH residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'buffer 'ar-th-length arg))

(defun ar-parentize-graph-in-buffer-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of GRAPH residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'buffer 'ar-th-parentize arg))

(defun ar-quote-graph-in-buffer-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of GRAPH residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'buffer 'ar-th-quote arg))

(defun ar-separate-graph-in-buffer-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of GRAPH residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'buffer 'ar-th-separate arg))

(defun ar-show-graph-in-buffer-atpt (&optional arg) 
  "Employ actions of SHOW at things class of GRAPH residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'buffer 'ar-th-show arg))

(defun ar-singlequote-graph-in-buffer-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of GRAPH residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'buffer 'ar-th-singlequote arg))

(defun ar-slash-graph-in-buffer-atpt (&optional arg) 
  "Employ actions of SLASH at things class of GRAPH residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'buffer 'ar-th-slash arg))

(defun ar-star-graph-in-buffer-atpt (&optional arg) 
  "Employ actions of STAR at things class of GRAPH residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'buffer 'ar-th-star arg))

(defun ar-slashparen-graph-in-buffer-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of GRAPH residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'buffer 'ar-th-slashparen arg))

(defun ar-sort-graph-in-buffer-atpt (&optional arg) 
  "Employ actions of SORT at things class of GRAPH residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'buffer 'ar-th-sort arg))

(defun ar-trim-graph-in-buffer-atpt (&optional arg) 
  "Employ actions of TRIM at things class of GRAPH residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'buffer 'ar-th-trim arg))

(defun ar-trim-left-graph-in-buffer-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of GRAPH residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'buffer 'ar-th-trim-left arg))

(defun ar-trim-right-graph-in-buffer-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of GRAPH residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'buffer 'ar-th-trim-right arg))

(defun ar-underscore-graph-in-buffer-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of GRAPH residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'buffer 'ar-th-underscore arg))

(defun ar-whitespace-graph-in-buffer-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of GRAPH residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'buffer 'ar-th-whitespace arg))

(defun ar-graph-in-comment-atpt (&optional arg) 
  "Employ actions of  at things class of GRAPH residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'comment 'ar-th arg))

(defun ar-greaterangle-graph-in-comment-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of GRAPH residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'comment 'ar-th-greaterangle arg))

(defun ar-lesserangle-graph-in-comment-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of GRAPH residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'comment 'ar-th-lesserangle arg))

(defun ar-backslash-graph-in-comment-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of GRAPH residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'comment 'ar-th-backslash arg))

(defun ar-colon-graph-in-comment-atpt (&optional arg) 
  "Employ actions of COLON at things class of GRAPH residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'comment 'ar-th-colon arg))

(defun ar-beg-graph-in-comment-atpt (&optional arg) 
  "Employ actions of BEG at things class of GRAPH residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'comment 'ar-th-beg arg))

(defun ar-blok-graph-in-comment-atpt (&optional arg) 
  "Employ actions of BLOK at things class of GRAPH residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'comment 'ar-th-blok arg))

(defun ar-bounds-graph-in-comment-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of GRAPH residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'comment 'ar-th-bounds arg))

(defun ar-brace-graph-in-comment-atpt (&optional arg) 
  "Employ actions of BRACE at things class of GRAPH residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'comment 'ar-th-brace arg))

(defun ar-bracket-graph-in-comment-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of GRAPH residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'comment 'ar-th-bracket arg))

(defun ar-commatize-graph-in-comment-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of GRAPH residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'comment 'ar-th-commatize arg))

(defun ar-comment-graph-in-comment-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of GRAPH residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'comment 'ar-th-comment arg))

(defun ar-dollar-graph-in-comment-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of GRAPH residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'comment 'ar-th-dollar arg))

(defun ar-doublebackslash-graph-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of GRAPH residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'comment 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-graph-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of GRAPH residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'comment 'ar-th-doublebacktick arg))

(defun ar-doublequote-graph-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of GRAPH residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'comment 'ar-th-doublequote arg))

(defun ar-doubleslash-graph-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of GRAPH residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'comment 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-graph-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of GRAPH residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'comment 'ar-th-doublebackslashparen arg))

(defun ar-end-graph-in-comment-atpt (&optional arg) 
  "Employ actions of END at things class of GRAPH residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'comment 'ar-th-end arg))

(defun ar-escape-graph-in-comment-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of GRAPH residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'comment 'ar-th-escape arg))

(defun ar-hide-graph-in-comment-atpt (&optional arg) 
  "Employ actions of HIDE at things class of GRAPH residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'comment 'ar-th-hide arg))

(defun ar-hide-show-graph-in-comment-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of GRAPH residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'comment 'ar-th-hide-show arg))

(defun ar-hyphen-graph-in-comment-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of GRAPH residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'comment 'ar-th-hyphen arg))

(defun ar-kill-graph-in-comment-atpt (&optional arg) 
  "Employ actions of KILL at things class of GRAPH residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'comment 'ar-th-kill arg))

(defun ar-leftrightsinglequote-graph-in-comment-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of GRAPH residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'comment 'ar-th-leftrightsinglequote arg))

(defun ar-length-graph-in-comment-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of GRAPH residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'comment 'ar-th-length arg))

(defun ar-parentize-graph-in-comment-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of GRAPH residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'comment 'ar-th-parentize arg))

(defun ar-quote-graph-in-comment-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of GRAPH residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'comment 'ar-th-quote arg))

(defun ar-separate-graph-in-comment-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of GRAPH residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'comment 'ar-th-separate arg))

(defun ar-show-graph-in-comment-atpt (&optional arg) 
  "Employ actions of SHOW at things class of GRAPH residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'comment 'ar-th-show arg))

(defun ar-singlequote-graph-in-comment-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of GRAPH residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'comment 'ar-th-singlequote arg))

(defun ar-slash-graph-in-comment-atpt (&optional arg) 
  "Employ actions of SLASH at things class of GRAPH residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'comment 'ar-th-slash arg))

(defun ar-star-graph-in-comment-atpt (&optional arg) 
  "Employ actions of STAR at things class of GRAPH residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'comment 'ar-th-star arg))

(defun ar-slashparen-graph-in-comment-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of GRAPH residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'comment 'ar-th-slashparen arg))

(defun ar-sort-graph-in-comment-atpt (&optional arg) 
  "Employ actions of SORT at things class of GRAPH residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'comment 'ar-th-sort arg))

(defun ar-trim-graph-in-comment-atpt (&optional arg) 
  "Employ actions of TRIM at things class of GRAPH residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'comment 'ar-th-trim arg))

(defun ar-trim-left-graph-in-comment-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of GRAPH residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'comment 'ar-th-trim-left arg))

(defun ar-trim-right-graph-in-comment-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of GRAPH residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'comment 'ar-th-trim-right arg))

(defun ar-underscore-graph-in-comment-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of GRAPH residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'comment 'ar-th-underscore arg))

(defun ar-whitespace-graph-in-comment-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of GRAPH residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'comment 'ar-th-whitespace arg))

(defun ar-graph-in-csv-atpt (&optional arg) 
  "Employ actions of  at things class of GRAPH residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'csv 'ar-th arg))

(defun ar-greaterangle-graph-in-csv-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of GRAPH residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'csv 'ar-th-greaterangle arg))

(defun ar-lesserangle-graph-in-csv-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of GRAPH residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'csv 'ar-th-lesserangle arg))

(defun ar-backslash-graph-in-csv-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of GRAPH residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'csv 'ar-th-backslash arg))

(defun ar-colon-graph-in-csv-atpt (&optional arg) 
  "Employ actions of COLON at things class of GRAPH residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'csv 'ar-th-colon arg))

(defun ar-beg-graph-in-csv-atpt (&optional arg) 
  "Employ actions of BEG at things class of GRAPH residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'csv 'ar-th-beg arg))

(defun ar-blok-graph-in-csv-atpt (&optional arg) 
  "Employ actions of BLOK at things class of GRAPH residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'csv 'ar-th-blok arg))

(defun ar-bounds-graph-in-csv-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of GRAPH residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'csv 'ar-th-bounds arg))

(defun ar-brace-graph-in-csv-atpt (&optional arg) 
  "Employ actions of BRACE at things class of GRAPH residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'csv 'ar-th-brace arg))

(defun ar-bracket-graph-in-csv-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of GRAPH residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'csv 'ar-th-bracket arg))

(defun ar-commatize-graph-in-csv-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of GRAPH residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'csv 'ar-th-commatize arg))

(defun ar-comment-graph-in-csv-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of GRAPH residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'csv 'ar-th-comment arg))

(defun ar-dollar-graph-in-csv-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of GRAPH residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'csv 'ar-th-dollar arg))

(defun ar-doublebackslash-graph-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of GRAPH residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'csv 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-graph-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of GRAPH residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'csv 'ar-th-doublebacktick arg))

(defun ar-doublequote-graph-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of GRAPH residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'csv 'ar-th-doublequote arg))

(defun ar-doubleslash-graph-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of GRAPH residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'csv 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-graph-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of GRAPH residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'csv 'ar-th-doublebackslashparen arg))

(defun ar-end-graph-in-csv-atpt (&optional arg) 
  "Employ actions of END at things class of GRAPH residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'csv 'ar-th-end arg))

(defun ar-escape-graph-in-csv-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of GRAPH residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'csv 'ar-th-escape arg))

(defun ar-hide-graph-in-csv-atpt (&optional arg) 
  "Employ actions of HIDE at things class of GRAPH residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'csv 'ar-th-hide arg))

(defun ar-hide-show-graph-in-csv-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of GRAPH residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'csv 'ar-th-hide-show arg))

(defun ar-hyphen-graph-in-csv-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of GRAPH residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'csv 'ar-th-hyphen arg))

(defun ar-kill-graph-in-csv-atpt (&optional arg) 
  "Employ actions of KILL at things class of GRAPH residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'csv 'ar-th-kill arg))

(defun ar-leftrightsinglequote-graph-in-csv-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of GRAPH residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'csv 'ar-th-leftrightsinglequote arg))

(defun ar-length-graph-in-csv-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of GRAPH residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'csv 'ar-th-length arg))

(defun ar-parentize-graph-in-csv-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of GRAPH residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'csv 'ar-th-parentize arg))

(defun ar-quote-graph-in-csv-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of GRAPH residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'csv 'ar-th-quote arg))

(defun ar-separate-graph-in-csv-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of GRAPH residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'csv 'ar-th-separate arg))

(defun ar-show-graph-in-csv-atpt (&optional arg) 
  "Employ actions of SHOW at things class of GRAPH residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'csv 'ar-th-show arg))

(defun ar-singlequote-graph-in-csv-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of GRAPH residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'csv 'ar-th-singlequote arg))

(defun ar-slash-graph-in-csv-atpt (&optional arg) 
  "Employ actions of SLASH at things class of GRAPH residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'csv 'ar-th-slash arg))

(defun ar-star-graph-in-csv-atpt (&optional arg) 
  "Employ actions of STAR at things class of GRAPH residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'csv 'ar-th-star arg))

(defun ar-slashparen-graph-in-csv-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of GRAPH residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'csv 'ar-th-slashparen arg))

(defun ar-sort-graph-in-csv-atpt (&optional arg) 
  "Employ actions of SORT at things class of GRAPH residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'csv 'ar-th-sort arg))

(defun ar-trim-graph-in-csv-atpt (&optional arg) 
  "Employ actions of TRIM at things class of GRAPH residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'csv 'ar-th-trim arg))

(defun ar-trim-left-graph-in-csv-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of GRAPH residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'csv 'ar-th-trim-left arg))

(defun ar-trim-right-graph-in-csv-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of GRAPH residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'csv 'ar-th-trim-right arg))

(defun ar-underscore-graph-in-csv-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of GRAPH residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'csv 'ar-th-underscore arg))

(defun ar-whitespace-graph-in-csv-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of GRAPH residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'csv 'ar-th-whitespace arg))

(defun ar-graph-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of  at things class of GRAPH residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'filenamenondirectory 'ar-th arg))

(defun ar-greaterangle-graph-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of GRAPH residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'filenamenondirectory 'ar-th-greaterangle arg))

(defun ar-lesserangle-graph-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of GRAPH residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'filenamenondirectory 'ar-th-lesserangle arg))

(defun ar-backslash-graph-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of GRAPH residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'filenamenondirectory 'ar-th-backslash arg))

(defun ar-colon-graph-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of COLON at things class of GRAPH residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'filenamenondirectory 'ar-th-colon arg))

(defun ar-beg-graph-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BEG at things class of GRAPH residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'filenamenondirectory 'ar-th-beg arg))

(defun ar-blok-graph-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BLOK at things class of GRAPH residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'filenamenondirectory 'ar-th-blok arg))

(defun ar-bounds-graph-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of GRAPH residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'filenamenondirectory 'ar-th-bounds arg))

(defun ar-brace-graph-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BRACE at things class of GRAPH residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'filenamenondirectory 'ar-th-brace arg))

(defun ar-bracket-graph-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of GRAPH residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'filenamenondirectory 'ar-th-bracket arg))

(defun ar-commatize-graph-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of GRAPH residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'filenamenondirectory 'ar-th-commatize arg))

(defun ar-comment-graph-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of GRAPH residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'filenamenondirectory 'ar-th-comment arg))

(defun ar-dollar-graph-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of GRAPH residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'filenamenondirectory 'ar-th-dollar arg))

(defun ar-doublebackslash-graph-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of GRAPH residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'filenamenondirectory 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-graph-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of GRAPH residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'filenamenondirectory 'ar-th-doublebacktick arg))

(defun ar-doublequote-graph-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of GRAPH residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'filenamenondirectory 'ar-th-doublequote arg))

(defun ar-doubleslash-graph-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of GRAPH residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'filenamenondirectory 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-graph-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of GRAPH residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'filenamenondirectory 'ar-th-doublebackslashparen arg))

(defun ar-end-graph-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of END at things class of GRAPH residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'filenamenondirectory 'ar-th-end arg))

(defun ar-escape-graph-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of GRAPH residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'filenamenondirectory 'ar-th-escape arg))

(defun ar-hide-graph-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of HIDE at things class of GRAPH residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'filenamenondirectory 'ar-th-hide arg))

(defun ar-hide-show-graph-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of GRAPH residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'filenamenondirectory 'ar-th-hide-show arg))

(defun ar-hyphen-graph-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of GRAPH residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'filenamenondirectory 'ar-th-hyphen arg))

(defun ar-kill-graph-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of KILL at things class of GRAPH residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'filenamenondirectory 'ar-th-kill arg))

(defun ar-leftrightsinglequote-graph-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of GRAPH residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'filenamenondirectory 'ar-th-leftrightsinglequote arg))

(defun ar-length-graph-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of GRAPH residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'filenamenondirectory 'ar-th-length arg))

(defun ar-parentize-graph-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of GRAPH residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'filenamenondirectory 'ar-th-parentize arg))

(defun ar-quote-graph-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of GRAPH residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'filenamenondirectory 'ar-th-quote arg))

(defun ar-separate-graph-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of GRAPH residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'filenamenondirectory 'ar-th-separate arg))

(defun ar-show-graph-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SHOW at things class of GRAPH residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'filenamenondirectory 'ar-th-show arg))

(defun ar-singlequote-graph-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of GRAPH residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'filenamenondirectory 'ar-th-singlequote arg))

(defun ar-slash-graph-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SLASH at things class of GRAPH residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'filenamenondirectory 'ar-th-slash arg))

(defun ar-star-graph-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of STAR at things class of GRAPH residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'filenamenondirectory 'ar-th-star arg))

(defun ar-slashparen-graph-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of GRAPH residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'filenamenondirectory 'ar-th-slashparen arg))

(defun ar-sort-graph-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SORT at things class of GRAPH residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'filenamenondirectory 'ar-th-sort arg))

(defun ar-trim-graph-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of TRIM at things class of GRAPH residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'filenamenondirectory 'ar-th-trim arg))

(defun ar-trim-left-graph-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of GRAPH residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'filenamenondirectory 'ar-th-trim-left arg))

(defun ar-trim-right-graph-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of GRAPH residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'filenamenondirectory 'ar-th-trim-right arg))

(defun ar-underscore-graph-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of GRAPH residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'filenamenondirectory 'ar-th-underscore arg))

(defun ar-whitespace-graph-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of GRAPH residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'filenamenondirectory 'ar-th-whitespace arg))

(defun ar-graph-in-function-atpt (&optional arg) 
  "Employ actions of  at things class of GRAPH residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'function 'ar-th arg))

(defun ar-greaterangle-graph-in-function-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of GRAPH residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'function 'ar-th-greaterangle arg))

(defun ar-lesserangle-graph-in-function-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of GRAPH residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'function 'ar-th-lesserangle arg))

(defun ar-backslash-graph-in-function-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of GRAPH residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'function 'ar-th-backslash arg))

(defun ar-colon-graph-in-function-atpt (&optional arg) 
  "Employ actions of COLON at things class of GRAPH residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'function 'ar-th-colon arg))

(defun ar-beg-graph-in-function-atpt (&optional arg) 
  "Employ actions of BEG at things class of GRAPH residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'function 'ar-th-beg arg))

(defun ar-blok-graph-in-function-atpt (&optional arg) 
  "Employ actions of BLOK at things class of GRAPH residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'function 'ar-th-blok arg))

(defun ar-bounds-graph-in-function-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of GRAPH residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'function 'ar-th-bounds arg))

(defun ar-brace-graph-in-function-atpt (&optional arg) 
  "Employ actions of BRACE at things class of GRAPH residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'function 'ar-th-brace arg))

(defun ar-bracket-graph-in-function-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of GRAPH residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'function 'ar-th-bracket arg))

(defun ar-commatize-graph-in-function-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of GRAPH residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'function 'ar-th-commatize arg))

(defun ar-comment-graph-in-function-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of GRAPH residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'function 'ar-th-comment arg))

(defun ar-dollar-graph-in-function-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of GRAPH residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'function 'ar-th-dollar arg))

(defun ar-doublebackslash-graph-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of GRAPH residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'function 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-graph-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of GRAPH residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'function 'ar-th-doublebacktick arg))

(defun ar-doublequote-graph-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of GRAPH residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'function 'ar-th-doublequote arg))

(defun ar-doubleslash-graph-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of GRAPH residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'function 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-graph-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of GRAPH residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'function 'ar-th-doublebackslashparen arg))

(defun ar-end-graph-in-function-atpt (&optional arg) 
  "Employ actions of END at things class of GRAPH residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'function 'ar-th-end arg))

(defun ar-escape-graph-in-function-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of GRAPH residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'function 'ar-th-escape arg))

(defun ar-hide-graph-in-function-atpt (&optional arg) 
  "Employ actions of HIDE at things class of GRAPH residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'function 'ar-th-hide arg))

(defun ar-hide-show-graph-in-function-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of GRAPH residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'function 'ar-th-hide-show arg))

(defun ar-hyphen-graph-in-function-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of GRAPH residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'function 'ar-th-hyphen arg))

(defun ar-kill-graph-in-function-atpt (&optional arg) 
  "Employ actions of KILL at things class of GRAPH residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'function 'ar-th-kill arg))

(defun ar-leftrightsinglequote-graph-in-function-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of GRAPH residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'function 'ar-th-leftrightsinglequote arg))

(defun ar-length-graph-in-function-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of GRAPH residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'function 'ar-th-length arg))

(defun ar-parentize-graph-in-function-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of GRAPH residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'function 'ar-th-parentize arg))

(defun ar-quote-graph-in-function-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of GRAPH residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'function 'ar-th-quote arg))

(defun ar-separate-graph-in-function-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of GRAPH residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'function 'ar-th-separate arg))

(defun ar-show-graph-in-function-atpt (&optional arg) 
  "Employ actions of SHOW at things class of GRAPH residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'function 'ar-th-show arg))

(defun ar-singlequote-graph-in-function-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of GRAPH residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'function 'ar-th-singlequote arg))

(defun ar-slash-graph-in-function-atpt (&optional arg) 
  "Employ actions of SLASH at things class of GRAPH residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'function 'ar-th-slash arg))

(defun ar-star-graph-in-function-atpt (&optional arg) 
  "Employ actions of STAR at things class of GRAPH residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'function 'ar-th-star arg))

(defun ar-slashparen-graph-in-function-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of GRAPH residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'function 'ar-th-slashparen arg))

(defun ar-sort-graph-in-function-atpt (&optional arg) 
  "Employ actions of SORT at things class of GRAPH residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'function 'ar-th-sort arg))

(defun ar-trim-graph-in-function-atpt (&optional arg) 
  "Employ actions of TRIM at things class of GRAPH residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'function 'ar-th-trim arg))

(defun ar-trim-left-graph-in-function-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of GRAPH residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'function 'ar-th-trim-left arg))

(defun ar-trim-right-graph-in-function-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of GRAPH residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'function 'ar-th-trim-right arg))

(defun ar-underscore-graph-in-function-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of GRAPH residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'function 'ar-th-underscore arg))

(defun ar-whitespace-graph-in-function-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of GRAPH residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'function 'ar-th-whitespace arg))

(defun ar-graph-in-line-atpt (&optional arg) 
  "Employ actions of  at things class of GRAPH residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'line 'ar-th arg))

(defun ar-greaterangle-graph-in-line-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of GRAPH residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'line 'ar-th-greaterangle arg))

(defun ar-lesserangle-graph-in-line-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of GRAPH residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'line 'ar-th-lesserangle arg))

(defun ar-backslash-graph-in-line-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of GRAPH residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'line 'ar-th-backslash arg))

(defun ar-colon-graph-in-line-atpt (&optional arg) 
  "Employ actions of COLON at things class of GRAPH residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'line 'ar-th-colon arg))

(defun ar-beg-graph-in-line-atpt (&optional arg) 
  "Employ actions of BEG at things class of GRAPH residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'line 'ar-th-beg arg))

(defun ar-blok-graph-in-line-atpt (&optional arg) 
  "Employ actions of BLOK at things class of GRAPH residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'line 'ar-th-blok arg))

(defun ar-bounds-graph-in-line-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of GRAPH residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'line 'ar-th-bounds arg))

(defun ar-brace-graph-in-line-atpt (&optional arg) 
  "Employ actions of BRACE at things class of GRAPH residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'line 'ar-th-brace arg))

(defun ar-bracket-graph-in-line-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of GRAPH residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'line 'ar-th-bracket arg))

(defun ar-commatize-graph-in-line-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of GRAPH residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'line 'ar-th-commatize arg))

(defun ar-comment-graph-in-line-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of GRAPH residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'line 'ar-th-comment arg))

(defun ar-dollar-graph-in-line-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of GRAPH residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'line 'ar-th-dollar arg))

(defun ar-doublebackslash-graph-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of GRAPH residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'line 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-graph-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of GRAPH residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'line 'ar-th-doublebacktick arg))

(defun ar-doublequote-graph-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of GRAPH residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'line 'ar-th-doublequote arg))

(defun ar-doubleslash-graph-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of GRAPH residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'line 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-graph-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of GRAPH residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'line 'ar-th-doublebackslashparen arg))

(defun ar-end-graph-in-line-atpt (&optional arg) 
  "Employ actions of END at things class of GRAPH residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'line 'ar-th-end arg))

(defun ar-escape-graph-in-line-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of GRAPH residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'line 'ar-th-escape arg))

(defun ar-hide-graph-in-line-atpt (&optional arg) 
  "Employ actions of HIDE at things class of GRAPH residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'line 'ar-th-hide arg))

(defun ar-hide-show-graph-in-line-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of GRAPH residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'line 'ar-th-hide-show arg))

(defun ar-hyphen-graph-in-line-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of GRAPH residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'line 'ar-th-hyphen arg))

(defun ar-kill-graph-in-line-atpt (&optional arg) 
  "Employ actions of KILL at things class of GRAPH residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'line 'ar-th-kill arg))

(defun ar-leftrightsinglequote-graph-in-line-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of GRAPH residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'line 'ar-th-leftrightsinglequote arg))

(defun ar-length-graph-in-line-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of GRAPH residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'line 'ar-th-length arg))

(defun ar-parentize-graph-in-line-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of GRAPH residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'line 'ar-th-parentize arg))

(defun ar-quote-graph-in-line-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of GRAPH residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'line 'ar-th-quote arg))

(defun ar-separate-graph-in-line-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of GRAPH residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'line 'ar-th-separate arg))

(defun ar-show-graph-in-line-atpt (&optional arg) 
  "Employ actions of SHOW at things class of GRAPH residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'line 'ar-th-show arg))

(defun ar-singlequote-graph-in-line-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of GRAPH residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'line 'ar-th-singlequote arg))

(defun ar-slash-graph-in-line-atpt (&optional arg) 
  "Employ actions of SLASH at things class of GRAPH residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'line 'ar-th-slash arg))

(defun ar-star-graph-in-line-atpt (&optional arg) 
  "Employ actions of STAR at things class of GRAPH residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'line 'ar-th-star arg))

(defun ar-slashparen-graph-in-line-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of GRAPH residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'line 'ar-th-slashparen arg))

(defun ar-sort-graph-in-line-atpt (&optional arg) 
  "Employ actions of SORT at things class of GRAPH residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'line 'ar-th-sort arg))

(defun ar-trim-graph-in-line-atpt (&optional arg) 
  "Employ actions of TRIM at things class of GRAPH residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'line 'ar-th-trim arg))

(defun ar-trim-left-graph-in-line-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of GRAPH residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'line 'ar-th-trim-left arg))

(defun ar-trim-right-graph-in-line-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of GRAPH residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'line 'ar-th-trim-right arg))

(defun ar-underscore-graph-in-line-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of GRAPH residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'line 'ar-th-underscore arg))

(defun ar-whitespace-graph-in-line-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of GRAPH residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'line 'ar-th-whitespace arg))

(defun ar-graph-in-list-atpt (&optional arg) 
  "Employ actions of  at things class of GRAPH residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'list 'ar-th arg))

(defun ar-greaterangle-graph-in-list-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of GRAPH residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'list 'ar-th-greaterangle arg))

(defun ar-lesserangle-graph-in-list-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of GRAPH residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'list 'ar-th-lesserangle arg))

(defun ar-backslash-graph-in-list-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of GRAPH residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'list 'ar-th-backslash arg))

(defun ar-colon-graph-in-list-atpt (&optional arg) 
  "Employ actions of COLON at things class of GRAPH residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'list 'ar-th-colon arg))

(defun ar-beg-graph-in-list-atpt (&optional arg) 
  "Employ actions of BEG at things class of GRAPH residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'list 'ar-th-beg arg))

(defun ar-blok-graph-in-list-atpt (&optional arg) 
  "Employ actions of BLOK at things class of GRAPH residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'list 'ar-th-blok arg))

(defun ar-bounds-graph-in-list-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of GRAPH residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'list 'ar-th-bounds arg))

(defun ar-brace-graph-in-list-atpt (&optional arg) 
  "Employ actions of BRACE at things class of GRAPH residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'list 'ar-th-brace arg))

(defun ar-bracket-graph-in-list-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of GRAPH residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'list 'ar-th-bracket arg))

(defun ar-commatize-graph-in-list-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of GRAPH residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'list 'ar-th-commatize arg))

(defun ar-comment-graph-in-list-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of GRAPH residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'list 'ar-th-comment arg))

(defun ar-dollar-graph-in-list-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of GRAPH residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'list 'ar-th-dollar arg))

(defun ar-doublebackslash-graph-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of GRAPH residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'list 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-graph-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of GRAPH residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'list 'ar-th-doublebacktick arg))

(defun ar-doublequote-graph-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of GRAPH residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'list 'ar-th-doublequote arg))

(defun ar-doubleslash-graph-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of GRAPH residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'list 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-graph-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of GRAPH residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'list 'ar-th-doublebackslashparen arg))

(defun ar-end-graph-in-list-atpt (&optional arg) 
  "Employ actions of END at things class of GRAPH residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'list 'ar-th-end arg))

(defun ar-escape-graph-in-list-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of GRAPH residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'list 'ar-th-escape arg))

(defun ar-hide-graph-in-list-atpt (&optional arg) 
  "Employ actions of HIDE at things class of GRAPH residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'list 'ar-th-hide arg))

(defun ar-hide-show-graph-in-list-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of GRAPH residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'list 'ar-th-hide-show arg))

(defun ar-hyphen-graph-in-list-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of GRAPH residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'list 'ar-th-hyphen arg))

(defun ar-kill-graph-in-list-atpt (&optional arg) 
  "Employ actions of KILL at things class of GRAPH residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'list 'ar-th-kill arg))

(defun ar-leftrightsinglequote-graph-in-list-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of GRAPH residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'list 'ar-th-leftrightsinglequote arg))

(defun ar-length-graph-in-list-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of GRAPH residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'list 'ar-th-length arg))

(defun ar-parentize-graph-in-list-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of GRAPH residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'list 'ar-th-parentize arg))

(defun ar-quote-graph-in-list-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of GRAPH residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'list 'ar-th-quote arg))

(defun ar-separate-graph-in-list-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of GRAPH residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'list 'ar-th-separate arg))

(defun ar-show-graph-in-list-atpt (&optional arg) 
  "Employ actions of SHOW at things class of GRAPH residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'list 'ar-th-show arg))

(defun ar-singlequote-graph-in-list-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of GRAPH residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'list 'ar-th-singlequote arg))

(defun ar-slash-graph-in-list-atpt (&optional arg) 
  "Employ actions of SLASH at things class of GRAPH residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'list 'ar-th-slash arg))

(defun ar-star-graph-in-list-atpt (&optional arg) 
  "Employ actions of STAR at things class of GRAPH residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'list 'ar-th-star arg))

(defun ar-slashparen-graph-in-list-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of GRAPH residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'list 'ar-th-slashparen arg))

(defun ar-sort-graph-in-list-atpt (&optional arg) 
  "Employ actions of SORT at things class of GRAPH residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'list 'ar-th-sort arg))

(defun ar-trim-graph-in-list-atpt (&optional arg) 
  "Employ actions of TRIM at things class of GRAPH residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'list 'ar-th-trim arg))

(defun ar-trim-left-graph-in-list-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of GRAPH residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'list 'ar-th-trim-left arg))

(defun ar-trim-right-graph-in-list-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of GRAPH residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'list 'ar-th-trim-right arg))

(defun ar-underscore-graph-in-list-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of GRAPH residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'list 'ar-th-underscore arg))

(defun ar-whitespace-graph-in-list-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of GRAPH residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'list 'ar-th-whitespace arg))

(defun ar-graph-in-name-atpt (&optional arg) 
  "Employ actions of  at things class of GRAPH residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'name 'ar-th arg))

(defun ar-greaterangle-graph-in-name-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of GRAPH residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'name 'ar-th-greaterangle arg))

(defun ar-lesserangle-graph-in-name-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of GRAPH residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'name 'ar-th-lesserangle arg))

(defun ar-backslash-graph-in-name-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of GRAPH residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'name 'ar-th-backslash arg))

(defun ar-colon-graph-in-name-atpt (&optional arg) 
  "Employ actions of COLON at things class of GRAPH residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'name 'ar-th-colon arg))

(defun ar-beg-graph-in-name-atpt (&optional arg) 
  "Employ actions of BEG at things class of GRAPH residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'name 'ar-th-beg arg))

(defun ar-blok-graph-in-name-atpt (&optional arg) 
  "Employ actions of BLOK at things class of GRAPH residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'name 'ar-th-blok arg))

(defun ar-bounds-graph-in-name-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of GRAPH residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'name 'ar-th-bounds arg))

(defun ar-brace-graph-in-name-atpt (&optional arg) 
  "Employ actions of BRACE at things class of GRAPH residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'name 'ar-th-brace arg))

(defun ar-bracket-graph-in-name-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of GRAPH residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'name 'ar-th-bracket arg))

(defun ar-commatize-graph-in-name-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of GRAPH residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'name 'ar-th-commatize arg))

(defun ar-comment-graph-in-name-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of GRAPH residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'name 'ar-th-comment arg))

(defun ar-dollar-graph-in-name-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of GRAPH residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'name 'ar-th-dollar arg))

(defun ar-doublebackslash-graph-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of GRAPH residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'name 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-graph-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of GRAPH residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'name 'ar-th-doublebacktick arg))

(defun ar-doublequote-graph-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of GRAPH residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'name 'ar-th-doublequote arg))

(defun ar-doubleslash-graph-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of GRAPH residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'name 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-graph-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of GRAPH residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'name 'ar-th-doublebackslashparen arg))

(defun ar-end-graph-in-name-atpt (&optional arg) 
  "Employ actions of END at things class of GRAPH residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'name 'ar-th-end arg))

(defun ar-escape-graph-in-name-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of GRAPH residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'name 'ar-th-escape arg))

(defun ar-hide-graph-in-name-atpt (&optional arg) 
  "Employ actions of HIDE at things class of GRAPH residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'name 'ar-th-hide arg))

(defun ar-hide-show-graph-in-name-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of GRAPH residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'name 'ar-th-hide-show arg))

(defun ar-hyphen-graph-in-name-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of GRAPH residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'name 'ar-th-hyphen arg))

(defun ar-kill-graph-in-name-atpt (&optional arg) 
  "Employ actions of KILL at things class of GRAPH residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'name 'ar-th-kill arg))

(defun ar-leftrightsinglequote-graph-in-name-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of GRAPH residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'name 'ar-th-leftrightsinglequote arg))

(defun ar-length-graph-in-name-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of GRAPH residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'name 'ar-th-length arg))

(defun ar-parentize-graph-in-name-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of GRAPH residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'name 'ar-th-parentize arg))

(defun ar-quote-graph-in-name-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of GRAPH residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'name 'ar-th-quote arg))

(defun ar-separate-graph-in-name-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of GRAPH residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'name 'ar-th-separate arg))

(defun ar-show-graph-in-name-atpt (&optional arg) 
  "Employ actions of SHOW at things class of GRAPH residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'name 'ar-th-show arg))

(defun ar-singlequote-graph-in-name-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of GRAPH residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'name 'ar-th-singlequote arg))

(defun ar-slash-graph-in-name-atpt (&optional arg) 
  "Employ actions of SLASH at things class of GRAPH residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'name 'ar-th-slash arg))

(defun ar-star-graph-in-name-atpt (&optional arg) 
  "Employ actions of STAR at things class of GRAPH residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'name 'ar-th-star arg))

(defun ar-slashparen-graph-in-name-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of GRAPH residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'name 'ar-th-slashparen arg))

(defun ar-sort-graph-in-name-atpt (&optional arg) 
  "Employ actions of SORT at things class of GRAPH residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'name 'ar-th-sort arg))

(defun ar-trim-graph-in-name-atpt (&optional arg) 
  "Employ actions of TRIM at things class of GRAPH residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'name 'ar-th-trim arg))

(defun ar-trim-left-graph-in-name-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of GRAPH residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'name 'ar-th-trim-left arg))

(defun ar-trim-right-graph-in-name-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of GRAPH residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'name 'ar-th-trim-right arg))

(defun ar-underscore-graph-in-name-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of GRAPH residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'name 'ar-th-underscore arg))

(defun ar-whitespace-graph-in-name-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of GRAPH residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'name 'ar-th-whitespace arg))

(defun ar-graph-in-page-atpt (&optional arg) 
  "Employ actions of  at things class of GRAPH residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'page 'ar-th arg))

(defun ar-greaterangle-graph-in-page-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of GRAPH residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'page 'ar-th-greaterangle arg))

(defun ar-lesserangle-graph-in-page-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of GRAPH residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'page 'ar-th-lesserangle arg))

(defun ar-backslash-graph-in-page-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of GRAPH residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'page 'ar-th-backslash arg))

(defun ar-colon-graph-in-page-atpt (&optional arg) 
  "Employ actions of COLON at things class of GRAPH residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'page 'ar-th-colon arg))

(defun ar-beg-graph-in-page-atpt (&optional arg) 
  "Employ actions of BEG at things class of GRAPH residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'page 'ar-th-beg arg))

(defun ar-blok-graph-in-page-atpt (&optional arg) 
  "Employ actions of BLOK at things class of GRAPH residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'page 'ar-th-blok arg))

(defun ar-bounds-graph-in-page-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of GRAPH residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'page 'ar-th-bounds arg))

(defun ar-brace-graph-in-page-atpt (&optional arg) 
  "Employ actions of BRACE at things class of GRAPH residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'page 'ar-th-brace arg))

(defun ar-bracket-graph-in-page-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of GRAPH residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'page 'ar-th-bracket arg))

(defun ar-commatize-graph-in-page-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of GRAPH residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'page 'ar-th-commatize arg))

(defun ar-comment-graph-in-page-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of GRAPH residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'page 'ar-th-comment arg))

(defun ar-dollar-graph-in-page-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of GRAPH residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'page 'ar-th-dollar arg))

(defun ar-doublebackslash-graph-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of GRAPH residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'page 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-graph-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of GRAPH residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'page 'ar-th-doublebacktick arg))

(defun ar-doublequote-graph-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of GRAPH residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'page 'ar-th-doublequote arg))

(defun ar-doubleslash-graph-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of GRAPH residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'page 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-graph-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of GRAPH residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'page 'ar-th-doublebackslashparen arg))

(defun ar-end-graph-in-page-atpt (&optional arg) 
  "Employ actions of END at things class of GRAPH residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'page 'ar-th-end arg))

(defun ar-escape-graph-in-page-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of GRAPH residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'page 'ar-th-escape arg))

(defun ar-hide-graph-in-page-atpt (&optional arg) 
  "Employ actions of HIDE at things class of GRAPH residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'page 'ar-th-hide arg))

(defun ar-hide-show-graph-in-page-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of GRAPH residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'page 'ar-th-hide-show arg))

(defun ar-hyphen-graph-in-page-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of GRAPH residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'page 'ar-th-hyphen arg))

(defun ar-kill-graph-in-page-atpt (&optional arg) 
  "Employ actions of KILL at things class of GRAPH residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'page 'ar-th-kill arg))

(defun ar-leftrightsinglequote-graph-in-page-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of GRAPH residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'page 'ar-th-leftrightsinglequote arg))

(defun ar-length-graph-in-page-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of GRAPH residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'page 'ar-th-length arg))

(defun ar-parentize-graph-in-page-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of GRAPH residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'page 'ar-th-parentize arg))

(defun ar-quote-graph-in-page-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of GRAPH residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'page 'ar-th-quote arg))

(defun ar-separate-graph-in-page-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of GRAPH residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'page 'ar-th-separate arg))

(defun ar-show-graph-in-page-atpt (&optional arg) 
  "Employ actions of SHOW at things class of GRAPH residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'page 'ar-th-show arg))

(defun ar-singlequote-graph-in-page-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of GRAPH residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'page 'ar-th-singlequote arg))

(defun ar-slash-graph-in-page-atpt (&optional arg) 
  "Employ actions of SLASH at things class of GRAPH residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'page 'ar-th-slash arg))

(defun ar-star-graph-in-page-atpt (&optional arg) 
  "Employ actions of STAR at things class of GRAPH residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'page 'ar-th-star arg))

(defun ar-slashparen-graph-in-page-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of GRAPH residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'page 'ar-th-slashparen arg))

(defun ar-sort-graph-in-page-atpt (&optional arg) 
  "Employ actions of SORT at things class of GRAPH residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'page 'ar-th-sort arg))

(defun ar-trim-graph-in-page-atpt (&optional arg) 
  "Employ actions of TRIM at things class of GRAPH residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'page 'ar-th-trim arg))

(defun ar-trim-left-graph-in-page-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of GRAPH residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'page 'ar-th-trim-left arg))

(defun ar-trim-right-graph-in-page-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of GRAPH residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'page 'ar-th-trim-right arg))

(defun ar-underscore-graph-in-page-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of GRAPH residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'page 'ar-th-underscore arg))

(defun ar-whitespace-graph-in-page-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of GRAPH residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'page 'ar-th-whitespace arg))

(defun ar-graph-in-paragraph-atpt (&optional arg) 
  "Employ actions of  at things class of GRAPH residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'paragraph 'ar-th arg))

(defun ar-greaterangle-graph-in-paragraph-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of GRAPH residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'paragraph 'ar-th-greaterangle arg))

(defun ar-lesserangle-graph-in-paragraph-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of GRAPH residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'paragraph 'ar-th-lesserangle arg))

(defun ar-backslash-graph-in-paragraph-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of GRAPH residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'paragraph 'ar-th-backslash arg))

(defun ar-colon-graph-in-paragraph-atpt (&optional arg) 
  "Employ actions of COLON at things class of GRAPH residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'paragraph 'ar-th-colon arg))

(defun ar-beg-graph-in-paragraph-atpt (&optional arg) 
  "Employ actions of BEG at things class of GRAPH residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'paragraph 'ar-th-beg arg))

(defun ar-blok-graph-in-paragraph-atpt (&optional arg) 
  "Employ actions of BLOK at things class of GRAPH residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'paragraph 'ar-th-blok arg))

(defun ar-bounds-graph-in-paragraph-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of GRAPH residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'paragraph 'ar-th-bounds arg))

(defun ar-brace-graph-in-paragraph-atpt (&optional arg) 
  "Employ actions of BRACE at things class of GRAPH residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'paragraph 'ar-th-brace arg))

(defun ar-bracket-graph-in-paragraph-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of GRAPH residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'paragraph 'ar-th-bracket arg))

(defun ar-commatize-graph-in-paragraph-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of GRAPH residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'paragraph 'ar-th-commatize arg))

(defun ar-comment-graph-in-paragraph-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of GRAPH residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'paragraph 'ar-th-comment arg))

(defun ar-dollar-graph-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of GRAPH residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'paragraph 'ar-th-dollar arg))

(defun ar-doublebackslash-graph-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of GRAPH residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'paragraph 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-graph-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of GRAPH residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'paragraph 'ar-th-doublebacktick arg))

(defun ar-doublequote-graph-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of GRAPH residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'paragraph 'ar-th-doublequote arg))

(defun ar-doubleslash-graph-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of GRAPH residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'paragraph 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-graph-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of GRAPH residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'paragraph 'ar-th-doublebackslashparen arg))

(defun ar-end-graph-in-paragraph-atpt (&optional arg) 
  "Employ actions of END at things class of GRAPH residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'paragraph 'ar-th-end arg))

(defun ar-escape-graph-in-paragraph-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of GRAPH residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'paragraph 'ar-th-escape arg))

(defun ar-hide-graph-in-paragraph-atpt (&optional arg) 
  "Employ actions of HIDE at things class of GRAPH residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'paragraph 'ar-th-hide arg))

(defun ar-hide-show-graph-in-paragraph-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of GRAPH residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'paragraph 'ar-th-hide-show arg))

(defun ar-hyphen-graph-in-paragraph-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of GRAPH residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'paragraph 'ar-th-hyphen arg))

(defun ar-kill-graph-in-paragraph-atpt (&optional arg) 
  "Employ actions of KILL at things class of GRAPH residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'paragraph 'ar-th-kill arg))

(defun ar-leftrightsinglequote-graph-in-paragraph-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of GRAPH residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'paragraph 'ar-th-leftrightsinglequote arg))

(defun ar-length-graph-in-paragraph-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of GRAPH residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'paragraph 'ar-th-length arg))

(defun ar-parentize-graph-in-paragraph-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of GRAPH residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'paragraph 'ar-th-parentize arg))

(defun ar-quote-graph-in-paragraph-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of GRAPH residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'paragraph 'ar-th-quote arg))

(defun ar-separate-graph-in-paragraph-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of GRAPH residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'paragraph 'ar-th-separate arg))

(defun ar-show-graph-in-paragraph-atpt (&optional arg) 
  "Employ actions of SHOW at things class of GRAPH residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'paragraph 'ar-th-show arg))

(defun ar-singlequote-graph-in-paragraph-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of GRAPH residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'paragraph 'ar-th-singlequote arg))

(defun ar-slash-graph-in-paragraph-atpt (&optional arg) 
  "Employ actions of SLASH at things class of GRAPH residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'paragraph 'ar-th-slash arg))

(defun ar-star-graph-in-paragraph-atpt (&optional arg) 
  "Employ actions of STAR at things class of GRAPH residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'paragraph 'ar-th-star arg))

(defun ar-slashparen-graph-in-paragraph-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of GRAPH residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'paragraph 'ar-th-slashparen arg))

(defun ar-sort-graph-in-paragraph-atpt (&optional arg) 
  "Employ actions of SORT at things class of GRAPH residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'paragraph 'ar-th-sort arg))

(defun ar-trim-graph-in-paragraph-atpt (&optional arg) 
  "Employ actions of TRIM at things class of GRAPH residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'paragraph 'ar-th-trim arg))

(defun ar-trim-left-graph-in-paragraph-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of GRAPH residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'paragraph 'ar-th-trim-left arg))

(defun ar-trim-right-graph-in-paragraph-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of GRAPH residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'paragraph 'ar-th-trim-right arg))

(defun ar-underscore-graph-in-paragraph-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of GRAPH residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'paragraph 'ar-th-underscore arg))

(defun ar-whitespace-graph-in-paragraph-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of GRAPH residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'paragraph 'ar-th-whitespace arg))

(defun ar-graph-in-region-atpt (&optional arg) 
  "Employ actions of  at things class of GRAPH residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'region 'ar-th arg))

(defun ar-greaterangle-graph-in-region-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of GRAPH residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'region 'ar-th-greaterangle arg))

(defun ar-lesserangle-graph-in-region-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of GRAPH residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'region 'ar-th-lesserangle arg))

(defun ar-backslash-graph-in-region-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of GRAPH residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'region 'ar-th-backslash arg))

(defun ar-colon-graph-in-region-atpt (&optional arg) 
  "Employ actions of COLON at things class of GRAPH residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'region 'ar-th-colon arg))

(defun ar-beg-graph-in-region-atpt (&optional arg) 
  "Employ actions of BEG at things class of GRAPH residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'region 'ar-th-beg arg))

(defun ar-blok-graph-in-region-atpt (&optional arg) 
  "Employ actions of BLOK at things class of GRAPH residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'region 'ar-th-blok arg))

(defun ar-bounds-graph-in-region-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of GRAPH residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'region 'ar-th-bounds arg))

(defun ar-brace-graph-in-region-atpt (&optional arg) 
  "Employ actions of BRACE at things class of GRAPH residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'region 'ar-th-brace arg))

(defun ar-bracket-graph-in-region-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of GRAPH residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'region 'ar-th-bracket arg))

(defun ar-commatize-graph-in-region-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of GRAPH residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'region 'ar-th-commatize arg))

(defun ar-comment-graph-in-region-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of GRAPH residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'region 'ar-th-comment arg))

(defun ar-dollar-graph-in-region-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of GRAPH residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'region 'ar-th-dollar arg))

(defun ar-doublebackslash-graph-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of GRAPH residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'region 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-graph-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of GRAPH residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'region 'ar-th-doublebacktick arg))

(defun ar-doublequote-graph-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of GRAPH residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'region 'ar-th-doublequote arg))

(defun ar-doubleslash-graph-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of GRAPH residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'region 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-graph-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of GRAPH residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'region 'ar-th-doublebackslashparen arg))

(defun ar-end-graph-in-region-atpt (&optional arg) 
  "Employ actions of END at things class of GRAPH residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'region 'ar-th-end arg))

(defun ar-escape-graph-in-region-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of GRAPH residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'region 'ar-th-escape arg))

(defun ar-hide-graph-in-region-atpt (&optional arg) 
  "Employ actions of HIDE at things class of GRAPH residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'region 'ar-th-hide arg))

(defun ar-hide-show-graph-in-region-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of GRAPH residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'region 'ar-th-hide-show arg))

(defun ar-hyphen-graph-in-region-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of GRAPH residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'region 'ar-th-hyphen arg))

(defun ar-kill-graph-in-region-atpt (&optional arg) 
  "Employ actions of KILL at things class of GRAPH residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'region 'ar-th-kill arg))

(defun ar-leftrightsinglequote-graph-in-region-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of GRAPH residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'region 'ar-th-leftrightsinglequote arg))

(defun ar-length-graph-in-region-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of GRAPH residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'region 'ar-th-length arg))

(defun ar-parentize-graph-in-region-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of GRAPH residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'region 'ar-th-parentize arg))

(defun ar-quote-graph-in-region-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of GRAPH residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'region 'ar-th-quote arg))

(defun ar-separate-graph-in-region-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of GRAPH residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'region 'ar-th-separate arg))

(defun ar-show-graph-in-region-atpt (&optional arg) 
  "Employ actions of SHOW at things class of GRAPH residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'region 'ar-th-show arg))

(defun ar-singlequote-graph-in-region-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of GRAPH residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'region 'ar-th-singlequote arg))

(defun ar-slash-graph-in-region-atpt (&optional arg) 
  "Employ actions of SLASH at things class of GRAPH residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'region 'ar-th-slash arg))

(defun ar-star-graph-in-region-atpt (&optional arg) 
  "Employ actions of STAR at things class of GRAPH residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'region 'ar-th-star arg))

(defun ar-slashparen-graph-in-region-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of GRAPH residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'region 'ar-th-slashparen arg))

(defun ar-sort-graph-in-region-atpt (&optional arg) 
  "Employ actions of SORT at things class of GRAPH residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'region 'ar-th-sort arg))

(defun ar-trim-graph-in-region-atpt (&optional arg) 
  "Employ actions of TRIM at things class of GRAPH residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'region 'ar-th-trim arg))

(defun ar-trim-left-graph-in-region-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of GRAPH residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'region 'ar-th-trim-left arg))

(defun ar-trim-right-graph-in-region-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of GRAPH residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'region 'ar-th-trim-right arg))

(defun ar-underscore-graph-in-region-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of GRAPH residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'region 'ar-th-underscore arg))

(defun ar-whitespace-graph-in-region-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of GRAPH residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'region 'ar-th-whitespace arg))

(defun ar-graph-in-sentence-atpt (&optional arg) 
  "Employ actions of  at things class of GRAPH residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sentence 'ar-th arg))

(defun ar-greaterangle-graph-in-sentence-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of GRAPH residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sentence 'ar-th-greaterangle arg))

(defun ar-lesserangle-graph-in-sentence-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of GRAPH residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sentence 'ar-th-lesserangle arg))

(defun ar-backslash-graph-in-sentence-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of GRAPH residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sentence 'ar-th-backslash arg))

(defun ar-colon-graph-in-sentence-atpt (&optional arg) 
  "Employ actions of COLON at things class of GRAPH residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sentence 'ar-th-colon arg))

(defun ar-beg-graph-in-sentence-atpt (&optional arg) 
  "Employ actions of BEG at things class of GRAPH residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sentence 'ar-th-beg arg))

(defun ar-blok-graph-in-sentence-atpt (&optional arg) 
  "Employ actions of BLOK at things class of GRAPH residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sentence 'ar-th-blok arg))

(defun ar-bounds-graph-in-sentence-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of GRAPH residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sentence 'ar-th-bounds arg))

(defun ar-brace-graph-in-sentence-atpt (&optional arg) 
  "Employ actions of BRACE at things class of GRAPH residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sentence 'ar-th-brace arg))

(defun ar-bracket-graph-in-sentence-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of GRAPH residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sentence 'ar-th-bracket arg))

(defun ar-commatize-graph-in-sentence-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of GRAPH residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sentence 'ar-th-commatize arg))

(defun ar-comment-graph-in-sentence-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of GRAPH residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sentence 'ar-th-comment arg))

(defun ar-dollar-graph-in-sentence-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of GRAPH residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sentence 'ar-th-dollar arg))

(defun ar-doublebackslash-graph-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of GRAPH residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sentence 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-graph-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of GRAPH residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sentence 'ar-th-doublebacktick arg))

(defun ar-doublequote-graph-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of GRAPH residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sentence 'ar-th-doublequote arg))

(defun ar-doubleslash-graph-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of GRAPH residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sentence 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-graph-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of GRAPH residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sentence 'ar-th-doublebackslashparen arg))

(defun ar-end-graph-in-sentence-atpt (&optional arg) 
  "Employ actions of END at things class of GRAPH residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sentence 'ar-th-end arg))

(defun ar-escape-graph-in-sentence-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of GRAPH residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sentence 'ar-th-escape arg))

(defun ar-hide-graph-in-sentence-atpt (&optional arg) 
  "Employ actions of HIDE at things class of GRAPH residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sentence 'ar-th-hide arg))

(defun ar-hide-show-graph-in-sentence-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of GRAPH residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sentence 'ar-th-hide-show arg))

(defun ar-hyphen-graph-in-sentence-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of GRAPH residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sentence 'ar-th-hyphen arg))

(defun ar-kill-graph-in-sentence-atpt (&optional arg) 
  "Employ actions of KILL at things class of GRAPH residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sentence 'ar-th-kill arg))

(defun ar-leftrightsinglequote-graph-in-sentence-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of GRAPH residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sentence 'ar-th-leftrightsinglequote arg))

(defun ar-length-graph-in-sentence-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of GRAPH residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sentence 'ar-th-length arg))

(defun ar-parentize-graph-in-sentence-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of GRAPH residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sentence 'ar-th-parentize arg))

(defun ar-quote-graph-in-sentence-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of GRAPH residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sentence 'ar-th-quote arg))

(defun ar-separate-graph-in-sentence-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of GRAPH residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sentence 'ar-th-separate arg))

(defun ar-show-graph-in-sentence-atpt (&optional arg) 
  "Employ actions of SHOW at things class of GRAPH residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sentence 'ar-th-show arg))

(defun ar-singlequote-graph-in-sentence-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of GRAPH residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sentence 'ar-th-singlequote arg))

(defun ar-slash-graph-in-sentence-atpt (&optional arg) 
  "Employ actions of SLASH at things class of GRAPH residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sentence 'ar-th-slash arg))

(defun ar-star-graph-in-sentence-atpt (&optional arg) 
  "Employ actions of STAR at things class of GRAPH residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sentence 'ar-th-star arg))

(defun ar-slashparen-graph-in-sentence-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of GRAPH residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sentence 'ar-th-slashparen arg))

(defun ar-sort-graph-in-sentence-atpt (&optional arg) 
  "Employ actions of SORT at things class of GRAPH residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sentence 'ar-th-sort arg))

(defun ar-trim-graph-in-sentence-atpt (&optional arg) 
  "Employ actions of TRIM at things class of GRAPH residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sentence 'ar-th-trim arg))

(defun ar-trim-left-graph-in-sentence-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of GRAPH residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sentence 'ar-th-trim-left arg))

(defun ar-trim-right-graph-in-sentence-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of GRAPH residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sentence 'ar-th-trim-right arg))

(defun ar-underscore-graph-in-sentence-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of GRAPH residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sentence 'ar-th-underscore arg))

(defun ar-whitespace-graph-in-sentence-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of GRAPH residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sentence 'ar-th-whitespace arg))

(defun ar-graph-in-sexp-atpt (&optional arg) 
  "Employ actions of  at things class of GRAPH residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sexp 'ar-th arg))

(defun ar-greaterangle-graph-in-sexp-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of GRAPH residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sexp 'ar-th-greaterangle arg))

(defun ar-lesserangle-graph-in-sexp-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of GRAPH residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sexp 'ar-th-lesserangle arg))

(defun ar-backslash-graph-in-sexp-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of GRAPH residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sexp 'ar-th-backslash arg))

(defun ar-colon-graph-in-sexp-atpt (&optional arg) 
  "Employ actions of COLON at things class of GRAPH residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sexp 'ar-th-colon arg))

(defun ar-beg-graph-in-sexp-atpt (&optional arg) 
  "Employ actions of BEG at things class of GRAPH residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sexp 'ar-th-beg arg))

(defun ar-blok-graph-in-sexp-atpt (&optional arg) 
  "Employ actions of BLOK at things class of GRAPH residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sexp 'ar-th-blok arg))

(defun ar-bounds-graph-in-sexp-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of GRAPH residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sexp 'ar-th-bounds arg))

(defun ar-brace-graph-in-sexp-atpt (&optional arg) 
  "Employ actions of BRACE at things class of GRAPH residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sexp 'ar-th-brace arg))

(defun ar-bracket-graph-in-sexp-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of GRAPH residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sexp 'ar-th-bracket arg))

(defun ar-commatize-graph-in-sexp-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of GRAPH residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sexp 'ar-th-commatize arg))

(defun ar-comment-graph-in-sexp-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of GRAPH residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sexp 'ar-th-comment arg))

(defun ar-dollar-graph-in-sexp-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of GRAPH residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sexp 'ar-th-dollar arg))

(defun ar-doublebackslash-graph-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of GRAPH residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sexp 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-graph-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of GRAPH residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sexp 'ar-th-doublebacktick arg))

(defun ar-doublequote-graph-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of GRAPH residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sexp 'ar-th-doublequote arg))

(defun ar-doubleslash-graph-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of GRAPH residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sexp 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-graph-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of GRAPH residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sexp 'ar-th-doublebackslashparen arg))

(defun ar-end-graph-in-sexp-atpt (&optional arg) 
  "Employ actions of END at things class of GRAPH residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sexp 'ar-th-end arg))

(defun ar-escape-graph-in-sexp-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of GRAPH residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sexp 'ar-th-escape arg))

(defun ar-hide-graph-in-sexp-atpt (&optional arg) 
  "Employ actions of HIDE at things class of GRAPH residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sexp 'ar-th-hide arg))

(defun ar-hide-show-graph-in-sexp-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of GRAPH residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sexp 'ar-th-hide-show arg))

(defun ar-hyphen-graph-in-sexp-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of GRAPH residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sexp 'ar-th-hyphen arg))

(defun ar-kill-graph-in-sexp-atpt (&optional arg) 
  "Employ actions of KILL at things class of GRAPH residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sexp 'ar-th-kill arg))

(defun ar-leftrightsinglequote-graph-in-sexp-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of GRAPH residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sexp 'ar-th-leftrightsinglequote arg))

(defun ar-length-graph-in-sexp-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of GRAPH residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sexp 'ar-th-length arg))

(defun ar-parentize-graph-in-sexp-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of GRAPH residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sexp 'ar-th-parentize arg))

(defun ar-quote-graph-in-sexp-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of GRAPH residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sexp 'ar-th-quote arg))

(defun ar-separate-graph-in-sexp-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of GRAPH residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sexp 'ar-th-separate arg))

(defun ar-show-graph-in-sexp-atpt (&optional arg) 
  "Employ actions of SHOW at things class of GRAPH residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sexp 'ar-th-show arg))

(defun ar-singlequote-graph-in-sexp-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of GRAPH residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sexp 'ar-th-singlequote arg))

(defun ar-slash-graph-in-sexp-atpt (&optional arg) 
  "Employ actions of SLASH at things class of GRAPH residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sexp 'ar-th-slash arg))

(defun ar-star-graph-in-sexp-atpt (&optional arg) 
  "Employ actions of STAR at things class of GRAPH residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sexp 'ar-th-star arg))

(defun ar-slashparen-graph-in-sexp-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of GRAPH residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sexp 'ar-th-slashparen arg))

(defun ar-sort-graph-in-sexp-atpt (&optional arg) 
  "Employ actions of SORT at things class of GRAPH residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sexp 'ar-th-sort arg))

(defun ar-trim-graph-in-sexp-atpt (&optional arg) 
  "Employ actions of TRIM at things class of GRAPH residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sexp 'ar-th-trim arg))

(defun ar-trim-left-graph-in-sexp-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of GRAPH residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sexp 'ar-th-trim-left arg))

(defun ar-trim-right-graph-in-sexp-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of GRAPH residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sexp 'ar-th-trim-right arg))

(defun ar-underscore-graph-in-sexp-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of GRAPH residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sexp 'ar-th-underscore arg))

(defun ar-whitespace-graph-in-sexp-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of GRAPH residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'sexp 'ar-th-whitespace arg))

(defun ar-graph-in-shstruct-atpt (&optional arg) 
  "Employ actions of  at things class of GRAPH residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'shstruct 'ar-th arg))

(defun ar-greaterangle-graph-in-shstruct-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of GRAPH residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'shstruct 'ar-th-greaterangle arg))

(defun ar-lesserangle-graph-in-shstruct-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of GRAPH residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'shstruct 'ar-th-lesserangle arg))

(defun ar-backslash-graph-in-shstruct-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of GRAPH residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'shstruct 'ar-th-backslash arg))

(defun ar-colon-graph-in-shstruct-atpt (&optional arg) 
  "Employ actions of COLON at things class of GRAPH residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'shstruct 'ar-th-colon arg))

(defun ar-beg-graph-in-shstruct-atpt (&optional arg) 
  "Employ actions of BEG at things class of GRAPH residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'shstruct 'ar-th-beg arg))

(defun ar-blok-graph-in-shstruct-atpt (&optional arg) 
  "Employ actions of BLOK at things class of GRAPH residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'shstruct 'ar-th-blok arg))

(defun ar-bounds-graph-in-shstruct-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of GRAPH residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'shstruct 'ar-th-bounds arg))

(defun ar-brace-graph-in-shstruct-atpt (&optional arg) 
  "Employ actions of BRACE at things class of GRAPH residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'shstruct 'ar-th-brace arg))

(defun ar-bracket-graph-in-shstruct-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of GRAPH residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'shstruct 'ar-th-bracket arg))

(defun ar-commatize-graph-in-shstruct-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of GRAPH residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'shstruct 'ar-th-commatize arg))

(defun ar-comment-graph-in-shstruct-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of GRAPH residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'shstruct 'ar-th-comment arg))

(defun ar-dollar-graph-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of GRAPH residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'shstruct 'ar-th-dollar arg))

(defun ar-doublebackslash-graph-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of GRAPH residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'shstruct 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-graph-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of GRAPH residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'shstruct 'ar-th-doublebacktick arg))

(defun ar-doublequote-graph-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of GRAPH residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'shstruct 'ar-th-doublequote arg))

(defun ar-doubleslash-graph-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of GRAPH residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'shstruct 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-graph-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of GRAPH residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'shstruct 'ar-th-doublebackslashparen arg))

(defun ar-end-graph-in-shstruct-atpt (&optional arg) 
  "Employ actions of END at things class of GRAPH residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'shstruct 'ar-th-end arg))

(defun ar-escape-graph-in-shstruct-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of GRAPH residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'shstruct 'ar-th-escape arg))

(defun ar-hide-graph-in-shstruct-atpt (&optional arg) 
  "Employ actions of HIDE at things class of GRAPH residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'shstruct 'ar-th-hide arg))

(defun ar-hide-show-graph-in-shstruct-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of GRAPH residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'shstruct 'ar-th-hide-show arg))

(defun ar-hyphen-graph-in-shstruct-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of GRAPH residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'shstruct 'ar-th-hyphen arg))

(defun ar-kill-graph-in-shstruct-atpt (&optional arg) 
  "Employ actions of KILL at things class of GRAPH residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'shstruct 'ar-th-kill arg))

(defun ar-leftrightsinglequote-graph-in-shstruct-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of GRAPH residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'shstruct 'ar-th-leftrightsinglequote arg))

(defun ar-length-graph-in-shstruct-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of GRAPH residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'shstruct 'ar-th-length arg))

(defun ar-parentize-graph-in-shstruct-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of GRAPH residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'shstruct 'ar-th-parentize arg))

(defun ar-quote-graph-in-shstruct-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of GRAPH residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'shstruct 'ar-th-quote arg))

(defun ar-separate-graph-in-shstruct-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of GRAPH residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'shstruct 'ar-th-separate arg))

(defun ar-show-graph-in-shstruct-atpt (&optional arg) 
  "Employ actions of SHOW at things class of GRAPH residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'shstruct 'ar-th-show arg))

(defun ar-singlequote-graph-in-shstruct-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of GRAPH residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'shstruct 'ar-th-singlequote arg))

(defun ar-slash-graph-in-shstruct-atpt (&optional arg) 
  "Employ actions of SLASH at things class of GRAPH residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'shstruct 'ar-th-slash arg))

(defun ar-star-graph-in-shstruct-atpt (&optional arg) 
  "Employ actions of STAR at things class of GRAPH residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'shstruct 'ar-th-star arg))

(defun ar-slashparen-graph-in-shstruct-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of GRAPH residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'shstruct 'ar-th-slashparen arg))

(defun ar-sort-graph-in-shstruct-atpt (&optional arg) 
  "Employ actions of SORT at things class of GRAPH residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'shstruct 'ar-th-sort arg))

(defun ar-trim-graph-in-shstruct-atpt (&optional arg) 
  "Employ actions of TRIM at things class of GRAPH residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'shstruct 'ar-th-trim arg))

(defun ar-trim-left-graph-in-shstruct-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of GRAPH residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'shstruct 'ar-th-trim-left arg))

(defun ar-trim-right-graph-in-shstruct-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of GRAPH residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'shstruct 'ar-th-trim-right arg))

(defun ar-underscore-graph-in-shstruct-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of GRAPH residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'shstruct 'ar-th-underscore arg))

(defun ar-whitespace-graph-in-shstruct-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of GRAPH residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'graph 'shstruct 'ar-th-whitespace arg))

(defun ar-lower-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of  at things class of LOWER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'greateranglednested 'ar-th arg))

(defun ar-greaterangle-lower-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of LOWER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'greateranglednested 'ar-th-greaterangle arg))

(defun ar-lesserangle-lower-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of LOWER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'greateranglednested 'ar-th-lesserangle arg))

(defun ar-backslash-lower-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of LOWER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'greateranglednested 'ar-th-backslash arg))

(defun ar-colon-lower-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of COLON at things class of LOWER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'greateranglednested 'ar-th-colon arg))

(defun ar-beg-lower-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BEG at things class of LOWER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'greateranglednested 'ar-th-beg arg))

(defun ar-blok-lower-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BLOK at things class of LOWER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'greateranglednested 'ar-th-blok arg))

(defun ar-bounds-lower-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of LOWER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'greateranglednested 'ar-th-bounds arg))

(defun ar-brace-lower-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BRACE at things class of LOWER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'greateranglednested 'ar-th-brace arg))

(defun ar-bracket-lower-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of LOWER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'greateranglednested 'ar-th-bracket arg))

(defun ar-commatize-lower-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of LOWER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'greateranglednested 'ar-th-commatize arg))

(defun ar-comment-lower-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of LOWER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'greateranglednested 'ar-th-comment arg))

(defun ar-dollar-lower-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of LOWER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'greateranglednested 'ar-th-dollar arg))

(defun ar-doublebackslash-lower-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of LOWER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'greateranglednested 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-lower-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of LOWER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'greateranglednested 'ar-th-doublebacktick arg))

(defun ar-doublequote-lower-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of LOWER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'greateranglednested 'ar-th-doublequote arg))

(defun ar-doubleslash-lower-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of LOWER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'greateranglednested 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-lower-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of LOWER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'greateranglednested 'ar-th-doublebackslashparen arg))

(defun ar-end-lower-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of END at things class of LOWER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'greateranglednested 'ar-th-end arg))

(defun ar-escape-lower-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of LOWER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'greateranglednested 'ar-th-escape arg))

(defun ar-hide-lower-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of HIDE at things class of LOWER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'greateranglednested 'ar-th-hide arg))

(defun ar-hide-show-lower-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of LOWER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'greateranglednested 'ar-th-hide-show arg))

(defun ar-hyphen-lower-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of LOWER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'greateranglednested 'ar-th-hyphen arg))

(defun ar-kill-lower-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of KILL at things class of LOWER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'greateranglednested 'ar-th-kill arg))

(defun ar-leftrightsinglequote-lower-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of LOWER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'greateranglednested 'ar-th-leftrightsinglequote arg))

(defun ar-length-lower-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of LOWER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'greateranglednested 'ar-th-length arg))

(defun ar-parentize-lower-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of LOWER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'greateranglednested 'ar-th-parentize arg))

(defun ar-quote-lower-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of LOWER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'greateranglednested 'ar-th-quote arg))

(defun ar-separate-lower-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of LOWER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'greateranglednested 'ar-th-separate arg))

(defun ar-show-lower-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SHOW at things class of LOWER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'greateranglednested 'ar-th-show arg))

(defun ar-singlequote-lower-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of LOWER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'greateranglednested 'ar-th-singlequote arg))

(defun ar-slash-lower-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SLASH at things class of LOWER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'greateranglednested 'ar-th-slash arg))

(defun ar-star-lower-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of STAR at things class of LOWER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'greateranglednested 'ar-th-star arg))

(defun ar-slashparen-lower-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of LOWER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'greateranglednested 'ar-th-slashparen arg))

(defun ar-sort-lower-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SORT at things class of LOWER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'greateranglednested 'ar-th-sort arg))

(defun ar-trim-lower-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of TRIM at things class of LOWER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'greateranglednested 'ar-th-trim arg))

(defun ar-trim-left-lower-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of LOWER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'greateranglednested 'ar-th-trim-left arg))

(defun ar-trim-right-lower-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of LOWER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'greateranglednested 'ar-th-trim-right arg))

(defun ar-underscore-lower-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of LOWER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'greateranglednested 'ar-th-underscore arg))

(defun ar-whitespace-lower-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of LOWER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'greateranglednested 'ar-th-whitespace arg))

(defun ar-lower-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of  at things class of LOWER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'lesseranglednested 'ar-th arg))

(defun ar-greaterangle-lower-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of LOWER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'lesseranglednested 'ar-th-greaterangle arg))

(defun ar-lesserangle-lower-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of LOWER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'lesseranglednested 'ar-th-lesserangle arg))

(defun ar-backslash-lower-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of LOWER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'lesseranglednested 'ar-th-backslash arg))

(defun ar-colon-lower-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of COLON at things class of LOWER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'lesseranglednested 'ar-th-colon arg))

(defun ar-beg-lower-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BEG at things class of LOWER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'lesseranglednested 'ar-th-beg arg))

(defun ar-blok-lower-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BLOK at things class of LOWER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'lesseranglednested 'ar-th-blok arg))

(defun ar-bounds-lower-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of LOWER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'lesseranglednested 'ar-th-bounds arg))

(defun ar-brace-lower-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BRACE at things class of LOWER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'lesseranglednested 'ar-th-brace arg))

(defun ar-bracket-lower-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of LOWER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'lesseranglednested 'ar-th-bracket arg))

(defun ar-commatize-lower-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of LOWER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'lesseranglednested 'ar-th-commatize arg))

(defun ar-comment-lower-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of LOWER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'lesseranglednested 'ar-th-comment arg))

(defun ar-dollar-lower-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of LOWER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'lesseranglednested 'ar-th-dollar arg))

(defun ar-doublebackslash-lower-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of LOWER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'lesseranglednested 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-lower-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of LOWER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'lesseranglednested 'ar-th-doublebacktick arg))

(defun ar-doublequote-lower-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of LOWER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'lesseranglednested 'ar-th-doublequote arg))

(defun ar-doubleslash-lower-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of LOWER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'lesseranglednested 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-lower-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of LOWER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'lesseranglednested 'ar-th-doublebackslashparen arg))

(defun ar-end-lower-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of END at things class of LOWER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'lesseranglednested 'ar-th-end arg))

(defun ar-escape-lower-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of LOWER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'lesseranglednested 'ar-th-escape arg))

(defun ar-hide-lower-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of HIDE at things class of LOWER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'lesseranglednested 'ar-th-hide arg))

(defun ar-hide-show-lower-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of LOWER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'lesseranglednested 'ar-th-hide-show arg))

(defun ar-hyphen-lower-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of LOWER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'lesseranglednested 'ar-th-hyphen arg))

(defun ar-kill-lower-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of KILL at things class of LOWER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'lesseranglednested 'ar-th-kill arg))

(defun ar-leftrightsinglequote-lower-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of LOWER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'lesseranglednested 'ar-th-leftrightsinglequote arg))

(defun ar-length-lower-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of LOWER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'lesseranglednested 'ar-th-length arg))

(defun ar-parentize-lower-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of LOWER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'lesseranglednested 'ar-th-parentize arg))

(defun ar-quote-lower-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of LOWER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'lesseranglednested 'ar-th-quote arg))

(defun ar-separate-lower-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of LOWER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'lesseranglednested 'ar-th-separate arg))

(defun ar-show-lower-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SHOW at things class of LOWER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'lesseranglednested 'ar-th-show arg))

(defun ar-singlequote-lower-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of LOWER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'lesseranglednested 'ar-th-singlequote arg))

(defun ar-slash-lower-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SLASH at things class of LOWER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'lesseranglednested 'ar-th-slash arg))

(defun ar-star-lower-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of STAR at things class of LOWER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'lesseranglednested 'ar-th-star arg))

(defun ar-slashparen-lower-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of LOWER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'lesseranglednested 'ar-th-slashparen arg))

(defun ar-sort-lower-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SORT at things class of LOWER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'lesseranglednested 'ar-th-sort arg))

(defun ar-trim-lower-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of TRIM at things class of LOWER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'lesseranglednested 'ar-th-trim arg))

(defun ar-trim-left-lower-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of LOWER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'lesseranglednested 'ar-th-trim-left arg))

(defun ar-trim-right-lower-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of LOWER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'lesseranglednested 'ar-th-trim-right arg))

(defun ar-underscore-lower-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of LOWER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'lesseranglednested 'ar-th-underscore arg))

(defun ar-whitespace-lower-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of LOWER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'lesseranglednested 'ar-th-whitespace arg))

(defun ar-lower-in-buffer-atpt (&optional arg) 
  "Employ actions of  at things class of LOWER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'buffer 'ar-th arg))

(defun ar-greaterangle-lower-in-buffer-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of LOWER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'buffer 'ar-th-greaterangle arg))

(defun ar-lesserangle-lower-in-buffer-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of LOWER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'buffer 'ar-th-lesserangle arg))

(defun ar-backslash-lower-in-buffer-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of LOWER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'buffer 'ar-th-backslash arg))

(defun ar-colon-lower-in-buffer-atpt (&optional arg) 
  "Employ actions of COLON at things class of LOWER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'buffer 'ar-th-colon arg))

(defun ar-beg-lower-in-buffer-atpt (&optional arg) 
  "Employ actions of BEG at things class of LOWER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'buffer 'ar-th-beg arg))

(defun ar-blok-lower-in-buffer-atpt (&optional arg) 
  "Employ actions of BLOK at things class of LOWER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'buffer 'ar-th-blok arg))

(defun ar-bounds-lower-in-buffer-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of LOWER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'buffer 'ar-th-bounds arg))

(defun ar-brace-lower-in-buffer-atpt (&optional arg) 
  "Employ actions of BRACE at things class of LOWER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'buffer 'ar-th-brace arg))

(defun ar-bracket-lower-in-buffer-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of LOWER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'buffer 'ar-th-bracket arg))

(defun ar-commatize-lower-in-buffer-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of LOWER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'buffer 'ar-th-commatize arg))

(defun ar-comment-lower-in-buffer-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of LOWER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'buffer 'ar-th-comment arg))

(defun ar-dollar-lower-in-buffer-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of LOWER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'buffer 'ar-th-dollar arg))

(defun ar-doublebackslash-lower-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of LOWER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'buffer 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-lower-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of LOWER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'buffer 'ar-th-doublebacktick arg))

(defun ar-doublequote-lower-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of LOWER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'buffer 'ar-th-doublequote arg))

(defun ar-doubleslash-lower-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of LOWER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'buffer 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-lower-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of LOWER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'buffer 'ar-th-doublebackslashparen arg))

(defun ar-end-lower-in-buffer-atpt (&optional arg) 
  "Employ actions of END at things class of LOWER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'buffer 'ar-th-end arg))

(defun ar-escape-lower-in-buffer-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of LOWER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'buffer 'ar-th-escape arg))

(defun ar-hide-lower-in-buffer-atpt (&optional arg) 
  "Employ actions of HIDE at things class of LOWER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'buffer 'ar-th-hide arg))

(defun ar-hide-show-lower-in-buffer-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of LOWER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'buffer 'ar-th-hide-show arg))

(defun ar-hyphen-lower-in-buffer-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of LOWER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'buffer 'ar-th-hyphen arg))

(defun ar-kill-lower-in-buffer-atpt (&optional arg) 
  "Employ actions of KILL at things class of LOWER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'buffer 'ar-th-kill arg))

(defun ar-leftrightsinglequote-lower-in-buffer-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of LOWER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'buffer 'ar-th-leftrightsinglequote arg))

(defun ar-length-lower-in-buffer-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of LOWER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'buffer 'ar-th-length arg))

(defun ar-parentize-lower-in-buffer-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of LOWER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'buffer 'ar-th-parentize arg))

(defun ar-quote-lower-in-buffer-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of LOWER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'buffer 'ar-th-quote arg))

(defun ar-separate-lower-in-buffer-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of LOWER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'buffer 'ar-th-separate arg))

(defun ar-show-lower-in-buffer-atpt (&optional arg) 
  "Employ actions of SHOW at things class of LOWER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'buffer 'ar-th-show arg))

(defun ar-singlequote-lower-in-buffer-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of LOWER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'buffer 'ar-th-singlequote arg))

(defun ar-slash-lower-in-buffer-atpt (&optional arg) 
  "Employ actions of SLASH at things class of LOWER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'buffer 'ar-th-slash arg))

(defun ar-star-lower-in-buffer-atpt (&optional arg) 
  "Employ actions of STAR at things class of LOWER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'buffer 'ar-th-star arg))

(defun ar-slashparen-lower-in-buffer-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of LOWER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'buffer 'ar-th-slashparen arg))

(defun ar-sort-lower-in-buffer-atpt (&optional arg) 
  "Employ actions of SORT at things class of LOWER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'buffer 'ar-th-sort arg))

(defun ar-trim-lower-in-buffer-atpt (&optional arg) 
  "Employ actions of TRIM at things class of LOWER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'buffer 'ar-th-trim arg))

(defun ar-trim-left-lower-in-buffer-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of LOWER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'buffer 'ar-th-trim-left arg))

(defun ar-trim-right-lower-in-buffer-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of LOWER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'buffer 'ar-th-trim-right arg))

(defun ar-underscore-lower-in-buffer-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of LOWER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'buffer 'ar-th-underscore arg))

(defun ar-whitespace-lower-in-buffer-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of LOWER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'buffer 'ar-th-whitespace arg))

(defun ar-lower-in-comment-atpt (&optional arg) 
  "Employ actions of  at things class of LOWER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'comment 'ar-th arg))

(defun ar-greaterangle-lower-in-comment-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of LOWER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'comment 'ar-th-greaterangle arg))

(defun ar-lesserangle-lower-in-comment-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of LOWER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'comment 'ar-th-lesserangle arg))

(defun ar-backslash-lower-in-comment-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of LOWER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'comment 'ar-th-backslash arg))

(defun ar-colon-lower-in-comment-atpt (&optional arg) 
  "Employ actions of COLON at things class of LOWER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'comment 'ar-th-colon arg))

(defun ar-beg-lower-in-comment-atpt (&optional arg) 
  "Employ actions of BEG at things class of LOWER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'comment 'ar-th-beg arg))

(defun ar-blok-lower-in-comment-atpt (&optional arg) 
  "Employ actions of BLOK at things class of LOWER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'comment 'ar-th-blok arg))

(defun ar-bounds-lower-in-comment-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of LOWER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'comment 'ar-th-bounds arg))

(defun ar-brace-lower-in-comment-atpt (&optional arg) 
  "Employ actions of BRACE at things class of LOWER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'comment 'ar-th-brace arg))

(defun ar-bracket-lower-in-comment-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of LOWER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'comment 'ar-th-bracket arg))

(defun ar-commatize-lower-in-comment-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of LOWER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'comment 'ar-th-commatize arg))

(defun ar-comment-lower-in-comment-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of LOWER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'comment 'ar-th-comment arg))

(defun ar-dollar-lower-in-comment-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of LOWER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'comment 'ar-th-dollar arg))

(defun ar-doublebackslash-lower-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of LOWER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'comment 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-lower-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of LOWER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'comment 'ar-th-doublebacktick arg))

(defun ar-doublequote-lower-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of LOWER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'comment 'ar-th-doublequote arg))

(defun ar-doubleslash-lower-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of LOWER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'comment 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-lower-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of LOWER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'comment 'ar-th-doublebackslashparen arg))

(defun ar-end-lower-in-comment-atpt (&optional arg) 
  "Employ actions of END at things class of LOWER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'comment 'ar-th-end arg))

(defun ar-escape-lower-in-comment-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of LOWER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'comment 'ar-th-escape arg))

(defun ar-hide-lower-in-comment-atpt (&optional arg) 
  "Employ actions of HIDE at things class of LOWER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'comment 'ar-th-hide arg))

(defun ar-hide-show-lower-in-comment-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of LOWER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'comment 'ar-th-hide-show arg))

(defun ar-hyphen-lower-in-comment-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of LOWER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'comment 'ar-th-hyphen arg))

(defun ar-kill-lower-in-comment-atpt (&optional arg) 
  "Employ actions of KILL at things class of LOWER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'comment 'ar-th-kill arg))

(defun ar-leftrightsinglequote-lower-in-comment-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of LOWER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'comment 'ar-th-leftrightsinglequote arg))

(defun ar-length-lower-in-comment-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of LOWER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'comment 'ar-th-length arg))

(defun ar-parentize-lower-in-comment-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of LOWER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'comment 'ar-th-parentize arg))

(defun ar-quote-lower-in-comment-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of LOWER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'comment 'ar-th-quote arg))

(defun ar-separate-lower-in-comment-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of LOWER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'comment 'ar-th-separate arg))

(defun ar-show-lower-in-comment-atpt (&optional arg) 
  "Employ actions of SHOW at things class of LOWER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'comment 'ar-th-show arg))

(defun ar-singlequote-lower-in-comment-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of LOWER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'comment 'ar-th-singlequote arg))

(defun ar-slash-lower-in-comment-atpt (&optional arg) 
  "Employ actions of SLASH at things class of LOWER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'comment 'ar-th-slash arg))

(defun ar-star-lower-in-comment-atpt (&optional arg) 
  "Employ actions of STAR at things class of LOWER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'comment 'ar-th-star arg))

(defun ar-slashparen-lower-in-comment-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of LOWER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'comment 'ar-th-slashparen arg))

(defun ar-sort-lower-in-comment-atpt (&optional arg) 
  "Employ actions of SORT at things class of LOWER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'comment 'ar-th-sort arg))

(defun ar-trim-lower-in-comment-atpt (&optional arg) 
  "Employ actions of TRIM at things class of LOWER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'comment 'ar-th-trim arg))

(defun ar-trim-left-lower-in-comment-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of LOWER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'comment 'ar-th-trim-left arg))

(defun ar-trim-right-lower-in-comment-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of LOWER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'comment 'ar-th-trim-right arg))

(defun ar-underscore-lower-in-comment-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of LOWER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'comment 'ar-th-underscore arg))

(defun ar-whitespace-lower-in-comment-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of LOWER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'comment 'ar-th-whitespace arg))

(defun ar-lower-in-csv-atpt (&optional arg) 
  "Employ actions of  at things class of LOWER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'csv 'ar-th arg))

(defun ar-greaterangle-lower-in-csv-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of LOWER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'csv 'ar-th-greaterangle arg))

(defun ar-lesserangle-lower-in-csv-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of LOWER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'csv 'ar-th-lesserangle arg))

(defun ar-backslash-lower-in-csv-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of LOWER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'csv 'ar-th-backslash arg))

(defun ar-colon-lower-in-csv-atpt (&optional arg) 
  "Employ actions of COLON at things class of LOWER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'csv 'ar-th-colon arg))

(defun ar-beg-lower-in-csv-atpt (&optional arg) 
  "Employ actions of BEG at things class of LOWER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'csv 'ar-th-beg arg))

(defun ar-blok-lower-in-csv-atpt (&optional arg) 
  "Employ actions of BLOK at things class of LOWER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'csv 'ar-th-blok arg))

(defun ar-bounds-lower-in-csv-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of LOWER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'csv 'ar-th-bounds arg))

(defun ar-brace-lower-in-csv-atpt (&optional arg) 
  "Employ actions of BRACE at things class of LOWER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'csv 'ar-th-brace arg))

(defun ar-bracket-lower-in-csv-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of LOWER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'csv 'ar-th-bracket arg))

(defun ar-commatize-lower-in-csv-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of LOWER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'csv 'ar-th-commatize arg))

(defun ar-comment-lower-in-csv-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of LOWER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'csv 'ar-th-comment arg))

(defun ar-dollar-lower-in-csv-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of LOWER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'csv 'ar-th-dollar arg))

(defun ar-doublebackslash-lower-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of LOWER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'csv 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-lower-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of LOWER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'csv 'ar-th-doublebacktick arg))

(defun ar-doublequote-lower-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of LOWER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'csv 'ar-th-doublequote arg))

(defun ar-doubleslash-lower-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of LOWER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'csv 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-lower-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of LOWER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'csv 'ar-th-doublebackslashparen arg))

(defun ar-end-lower-in-csv-atpt (&optional arg) 
  "Employ actions of END at things class of LOWER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'csv 'ar-th-end arg))

(defun ar-escape-lower-in-csv-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of LOWER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'csv 'ar-th-escape arg))

(defun ar-hide-lower-in-csv-atpt (&optional arg) 
  "Employ actions of HIDE at things class of LOWER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'csv 'ar-th-hide arg))

(defun ar-hide-show-lower-in-csv-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of LOWER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'csv 'ar-th-hide-show arg))

(defun ar-hyphen-lower-in-csv-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of LOWER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'csv 'ar-th-hyphen arg))

(defun ar-kill-lower-in-csv-atpt (&optional arg) 
  "Employ actions of KILL at things class of LOWER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'csv 'ar-th-kill arg))

(defun ar-leftrightsinglequote-lower-in-csv-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of LOWER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'csv 'ar-th-leftrightsinglequote arg))

(defun ar-length-lower-in-csv-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of LOWER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'csv 'ar-th-length arg))

(defun ar-parentize-lower-in-csv-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of LOWER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'csv 'ar-th-parentize arg))

(defun ar-quote-lower-in-csv-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of LOWER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'csv 'ar-th-quote arg))

(defun ar-separate-lower-in-csv-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of LOWER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'csv 'ar-th-separate arg))

(defun ar-show-lower-in-csv-atpt (&optional arg) 
  "Employ actions of SHOW at things class of LOWER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'csv 'ar-th-show arg))

(defun ar-singlequote-lower-in-csv-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of LOWER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'csv 'ar-th-singlequote arg))

(defun ar-slash-lower-in-csv-atpt (&optional arg) 
  "Employ actions of SLASH at things class of LOWER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'csv 'ar-th-slash arg))

(defun ar-star-lower-in-csv-atpt (&optional arg) 
  "Employ actions of STAR at things class of LOWER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'csv 'ar-th-star arg))

(defun ar-slashparen-lower-in-csv-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of LOWER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'csv 'ar-th-slashparen arg))

(defun ar-sort-lower-in-csv-atpt (&optional arg) 
  "Employ actions of SORT at things class of LOWER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'csv 'ar-th-sort arg))

(defun ar-trim-lower-in-csv-atpt (&optional arg) 
  "Employ actions of TRIM at things class of LOWER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'csv 'ar-th-trim arg))

(defun ar-trim-left-lower-in-csv-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of LOWER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'csv 'ar-th-trim-left arg))

(defun ar-trim-right-lower-in-csv-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of LOWER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'csv 'ar-th-trim-right arg))

(defun ar-underscore-lower-in-csv-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of LOWER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'csv 'ar-th-underscore arg))

(defun ar-whitespace-lower-in-csv-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of LOWER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'csv 'ar-th-whitespace arg))

(defun ar-lower-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of  at things class of LOWER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'filenamenondirectory 'ar-th arg))

(defun ar-greaterangle-lower-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of LOWER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'filenamenondirectory 'ar-th-greaterangle arg))

(defun ar-lesserangle-lower-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of LOWER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'filenamenondirectory 'ar-th-lesserangle arg))

(defun ar-backslash-lower-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of LOWER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'filenamenondirectory 'ar-th-backslash arg))

(defun ar-colon-lower-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of COLON at things class of LOWER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'filenamenondirectory 'ar-th-colon arg))

(defun ar-beg-lower-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BEG at things class of LOWER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'filenamenondirectory 'ar-th-beg arg))

(defun ar-blok-lower-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BLOK at things class of LOWER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'filenamenondirectory 'ar-th-blok arg))

(defun ar-bounds-lower-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of LOWER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'filenamenondirectory 'ar-th-bounds arg))

(defun ar-brace-lower-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BRACE at things class of LOWER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'filenamenondirectory 'ar-th-brace arg))

(defun ar-bracket-lower-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of LOWER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'filenamenondirectory 'ar-th-bracket arg))

(defun ar-commatize-lower-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of LOWER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'filenamenondirectory 'ar-th-commatize arg))

(defun ar-comment-lower-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of LOWER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'filenamenondirectory 'ar-th-comment arg))

(defun ar-dollar-lower-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of LOWER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'filenamenondirectory 'ar-th-dollar arg))

(defun ar-doublebackslash-lower-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of LOWER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'filenamenondirectory 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-lower-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of LOWER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'filenamenondirectory 'ar-th-doublebacktick arg))

(defun ar-doublequote-lower-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of LOWER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'filenamenondirectory 'ar-th-doublequote arg))

(defun ar-doubleslash-lower-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of LOWER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'filenamenondirectory 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-lower-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of LOWER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'filenamenondirectory 'ar-th-doublebackslashparen arg))

(defun ar-end-lower-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of END at things class of LOWER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'filenamenondirectory 'ar-th-end arg))

(defun ar-escape-lower-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of LOWER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'filenamenondirectory 'ar-th-escape arg))

(defun ar-hide-lower-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of HIDE at things class of LOWER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'filenamenondirectory 'ar-th-hide arg))

(defun ar-hide-show-lower-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of LOWER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'filenamenondirectory 'ar-th-hide-show arg))

(defun ar-hyphen-lower-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of LOWER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'filenamenondirectory 'ar-th-hyphen arg))

(defun ar-kill-lower-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of KILL at things class of LOWER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'filenamenondirectory 'ar-th-kill arg))

(defun ar-leftrightsinglequote-lower-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of LOWER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'filenamenondirectory 'ar-th-leftrightsinglequote arg))

(defun ar-length-lower-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of LOWER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'filenamenondirectory 'ar-th-length arg))

(defun ar-parentize-lower-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of LOWER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'filenamenondirectory 'ar-th-parentize arg))

(defun ar-quote-lower-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of LOWER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'filenamenondirectory 'ar-th-quote arg))

(defun ar-separate-lower-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of LOWER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'filenamenondirectory 'ar-th-separate arg))

(defun ar-show-lower-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SHOW at things class of LOWER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'filenamenondirectory 'ar-th-show arg))

(defun ar-singlequote-lower-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of LOWER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'filenamenondirectory 'ar-th-singlequote arg))

(defun ar-slash-lower-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SLASH at things class of LOWER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'filenamenondirectory 'ar-th-slash arg))

(defun ar-star-lower-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of STAR at things class of LOWER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'filenamenondirectory 'ar-th-star arg))

(defun ar-slashparen-lower-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of LOWER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'filenamenondirectory 'ar-th-slashparen arg))

(defun ar-sort-lower-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SORT at things class of LOWER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'filenamenondirectory 'ar-th-sort arg))

(defun ar-trim-lower-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of TRIM at things class of LOWER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'filenamenondirectory 'ar-th-trim arg))

(defun ar-trim-left-lower-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of LOWER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'filenamenondirectory 'ar-th-trim-left arg))

(defun ar-trim-right-lower-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of LOWER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'filenamenondirectory 'ar-th-trim-right arg))

(defun ar-underscore-lower-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of LOWER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'filenamenondirectory 'ar-th-underscore arg))

(defun ar-whitespace-lower-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of LOWER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'filenamenondirectory 'ar-th-whitespace arg))

(defun ar-lower-in-function-atpt (&optional arg) 
  "Employ actions of  at things class of LOWER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'function 'ar-th arg))

(defun ar-greaterangle-lower-in-function-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of LOWER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'function 'ar-th-greaterangle arg))

(defun ar-lesserangle-lower-in-function-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of LOWER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'function 'ar-th-lesserangle arg))

(defun ar-backslash-lower-in-function-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of LOWER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'function 'ar-th-backslash arg))

(defun ar-colon-lower-in-function-atpt (&optional arg) 
  "Employ actions of COLON at things class of LOWER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'function 'ar-th-colon arg))

(defun ar-beg-lower-in-function-atpt (&optional arg) 
  "Employ actions of BEG at things class of LOWER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'function 'ar-th-beg arg))

(defun ar-blok-lower-in-function-atpt (&optional arg) 
  "Employ actions of BLOK at things class of LOWER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'function 'ar-th-blok arg))

(defun ar-bounds-lower-in-function-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of LOWER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'function 'ar-th-bounds arg))

(defun ar-brace-lower-in-function-atpt (&optional arg) 
  "Employ actions of BRACE at things class of LOWER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'function 'ar-th-brace arg))

(defun ar-bracket-lower-in-function-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of LOWER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'function 'ar-th-bracket arg))

(defun ar-commatize-lower-in-function-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of LOWER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'function 'ar-th-commatize arg))

(defun ar-comment-lower-in-function-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of LOWER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'function 'ar-th-comment arg))

(defun ar-dollar-lower-in-function-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of LOWER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'function 'ar-th-dollar arg))

(defun ar-doublebackslash-lower-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of LOWER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'function 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-lower-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of LOWER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'function 'ar-th-doublebacktick arg))

(defun ar-doublequote-lower-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of LOWER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'function 'ar-th-doublequote arg))

(defun ar-doubleslash-lower-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of LOWER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'function 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-lower-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of LOWER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'function 'ar-th-doublebackslashparen arg))

(defun ar-end-lower-in-function-atpt (&optional arg) 
  "Employ actions of END at things class of LOWER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'function 'ar-th-end arg))

(defun ar-escape-lower-in-function-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of LOWER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'function 'ar-th-escape arg))

(defun ar-hide-lower-in-function-atpt (&optional arg) 
  "Employ actions of HIDE at things class of LOWER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'function 'ar-th-hide arg))

(defun ar-hide-show-lower-in-function-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of LOWER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'function 'ar-th-hide-show arg))

(defun ar-hyphen-lower-in-function-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of LOWER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'function 'ar-th-hyphen arg))

(defun ar-kill-lower-in-function-atpt (&optional arg) 
  "Employ actions of KILL at things class of LOWER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'function 'ar-th-kill arg))

(defun ar-leftrightsinglequote-lower-in-function-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of LOWER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'function 'ar-th-leftrightsinglequote arg))

(defun ar-length-lower-in-function-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of LOWER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'function 'ar-th-length arg))

(defun ar-parentize-lower-in-function-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of LOWER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'function 'ar-th-parentize arg))

(defun ar-quote-lower-in-function-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of LOWER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'function 'ar-th-quote arg))

(defun ar-separate-lower-in-function-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of LOWER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'function 'ar-th-separate arg))

(defun ar-show-lower-in-function-atpt (&optional arg) 
  "Employ actions of SHOW at things class of LOWER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'function 'ar-th-show arg))

(defun ar-singlequote-lower-in-function-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of LOWER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'function 'ar-th-singlequote arg))

(defun ar-slash-lower-in-function-atpt (&optional arg) 
  "Employ actions of SLASH at things class of LOWER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'function 'ar-th-slash arg))

(defun ar-star-lower-in-function-atpt (&optional arg) 
  "Employ actions of STAR at things class of LOWER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'function 'ar-th-star arg))

(defun ar-slashparen-lower-in-function-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of LOWER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'function 'ar-th-slashparen arg))

(defun ar-sort-lower-in-function-atpt (&optional arg) 
  "Employ actions of SORT at things class of LOWER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'function 'ar-th-sort arg))

(defun ar-trim-lower-in-function-atpt (&optional arg) 
  "Employ actions of TRIM at things class of LOWER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'function 'ar-th-trim arg))

(defun ar-trim-left-lower-in-function-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of LOWER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'function 'ar-th-trim-left arg))

(defun ar-trim-right-lower-in-function-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of LOWER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'function 'ar-th-trim-right arg))

(defun ar-underscore-lower-in-function-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of LOWER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'function 'ar-th-underscore arg))

(defun ar-whitespace-lower-in-function-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of LOWER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'function 'ar-th-whitespace arg))

(defun ar-lower-in-line-atpt (&optional arg) 
  "Employ actions of  at things class of LOWER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'line 'ar-th arg))

(defun ar-greaterangle-lower-in-line-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of LOWER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'line 'ar-th-greaterangle arg))

(defun ar-lesserangle-lower-in-line-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of LOWER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'line 'ar-th-lesserangle arg))

(defun ar-backslash-lower-in-line-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of LOWER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'line 'ar-th-backslash arg))

(defun ar-colon-lower-in-line-atpt (&optional arg) 
  "Employ actions of COLON at things class of LOWER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'line 'ar-th-colon arg))

(defun ar-beg-lower-in-line-atpt (&optional arg) 
  "Employ actions of BEG at things class of LOWER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'line 'ar-th-beg arg))

(defun ar-blok-lower-in-line-atpt (&optional arg) 
  "Employ actions of BLOK at things class of LOWER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'line 'ar-th-blok arg))

(defun ar-bounds-lower-in-line-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of LOWER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'line 'ar-th-bounds arg))

(defun ar-brace-lower-in-line-atpt (&optional arg) 
  "Employ actions of BRACE at things class of LOWER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'line 'ar-th-brace arg))

(defun ar-bracket-lower-in-line-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of LOWER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'line 'ar-th-bracket arg))

(defun ar-commatize-lower-in-line-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of LOWER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'line 'ar-th-commatize arg))

(defun ar-comment-lower-in-line-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of LOWER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'line 'ar-th-comment arg))

(defun ar-dollar-lower-in-line-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of LOWER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'line 'ar-th-dollar arg))

(defun ar-doublebackslash-lower-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of LOWER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'line 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-lower-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of LOWER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'line 'ar-th-doublebacktick arg))

(defun ar-doublequote-lower-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of LOWER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'line 'ar-th-doublequote arg))

(defun ar-doubleslash-lower-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of LOWER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'line 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-lower-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of LOWER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'line 'ar-th-doublebackslashparen arg))

(defun ar-end-lower-in-line-atpt (&optional arg) 
  "Employ actions of END at things class of LOWER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'line 'ar-th-end arg))

(defun ar-escape-lower-in-line-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of LOWER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'line 'ar-th-escape arg))

(defun ar-hide-lower-in-line-atpt (&optional arg) 
  "Employ actions of HIDE at things class of LOWER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'line 'ar-th-hide arg))

(defun ar-hide-show-lower-in-line-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of LOWER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'line 'ar-th-hide-show arg))

(defun ar-hyphen-lower-in-line-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of LOWER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'line 'ar-th-hyphen arg))

(defun ar-kill-lower-in-line-atpt (&optional arg) 
  "Employ actions of KILL at things class of LOWER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'line 'ar-th-kill arg))

(defun ar-leftrightsinglequote-lower-in-line-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of LOWER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'line 'ar-th-leftrightsinglequote arg))

(defun ar-length-lower-in-line-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of LOWER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'line 'ar-th-length arg))

(defun ar-parentize-lower-in-line-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of LOWER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'line 'ar-th-parentize arg))

(defun ar-quote-lower-in-line-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of LOWER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'line 'ar-th-quote arg))

(defun ar-separate-lower-in-line-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of LOWER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'line 'ar-th-separate arg))

(defun ar-show-lower-in-line-atpt (&optional arg) 
  "Employ actions of SHOW at things class of LOWER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'line 'ar-th-show arg))

(defun ar-singlequote-lower-in-line-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of LOWER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'line 'ar-th-singlequote arg))

(defun ar-slash-lower-in-line-atpt (&optional arg) 
  "Employ actions of SLASH at things class of LOWER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'line 'ar-th-slash arg))

(defun ar-star-lower-in-line-atpt (&optional arg) 
  "Employ actions of STAR at things class of LOWER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'line 'ar-th-star arg))

(defun ar-slashparen-lower-in-line-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of LOWER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'line 'ar-th-slashparen arg))

(defun ar-sort-lower-in-line-atpt (&optional arg) 
  "Employ actions of SORT at things class of LOWER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'line 'ar-th-sort arg))

(defun ar-trim-lower-in-line-atpt (&optional arg) 
  "Employ actions of TRIM at things class of LOWER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'line 'ar-th-trim arg))

(defun ar-trim-left-lower-in-line-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of LOWER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'line 'ar-th-trim-left arg))

(defun ar-trim-right-lower-in-line-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of LOWER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'line 'ar-th-trim-right arg))

(defun ar-underscore-lower-in-line-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of LOWER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'line 'ar-th-underscore arg))

(defun ar-whitespace-lower-in-line-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of LOWER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'line 'ar-th-whitespace arg))

(defun ar-lower-in-list-atpt (&optional arg) 
  "Employ actions of  at things class of LOWER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'list 'ar-th arg))

(defun ar-greaterangle-lower-in-list-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of LOWER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'list 'ar-th-greaterangle arg))

(defun ar-lesserangle-lower-in-list-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of LOWER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'list 'ar-th-lesserangle arg))

(defun ar-backslash-lower-in-list-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of LOWER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'list 'ar-th-backslash arg))

(defun ar-colon-lower-in-list-atpt (&optional arg) 
  "Employ actions of COLON at things class of LOWER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'list 'ar-th-colon arg))

(defun ar-beg-lower-in-list-atpt (&optional arg) 
  "Employ actions of BEG at things class of LOWER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'list 'ar-th-beg arg))

(defun ar-blok-lower-in-list-atpt (&optional arg) 
  "Employ actions of BLOK at things class of LOWER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'list 'ar-th-blok arg))

(defun ar-bounds-lower-in-list-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of LOWER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'list 'ar-th-bounds arg))

(defun ar-brace-lower-in-list-atpt (&optional arg) 
  "Employ actions of BRACE at things class of LOWER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'list 'ar-th-brace arg))

(defun ar-bracket-lower-in-list-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of LOWER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'list 'ar-th-bracket arg))

(defun ar-commatize-lower-in-list-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of LOWER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'list 'ar-th-commatize arg))

(defun ar-comment-lower-in-list-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of LOWER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'list 'ar-th-comment arg))

(defun ar-dollar-lower-in-list-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of LOWER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'list 'ar-th-dollar arg))

(defun ar-doublebackslash-lower-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of LOWER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'list 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-lower-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of LOWER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'list 'ar-th-doublebacktick arg))

(defun ar-doublequote-lower-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of LOWER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'list 'ar-th-doublequote arg))

(defun ar-doubleslash-lower-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of LOWER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'list 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-lower-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of LOWER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'list 'ar-th-doublebackslashparen arg))

(defun ar-end-lower-in-list-atpt (&optional arg) 
  "Employ actions of END at things class of LOWER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'list 'ar-th-end arg))

(defun ar-escape-lower-in-list-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of LOWER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'list 'ar-th-escape arg))

(defun ar-hide-lower-in-list-atpt (&optional arg) 
  "Employ actions of HIDE at things class of LOWER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'list 'ar-th-hide arg))

(defun ar-hide-show-lower-in-list-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of LOWER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'list 'ar-th-hide-show arg))

(defun ar-hyphen-lower-in-list-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of LOWER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'list 'ar-th-hyphen arg))

(defun ar-kill-lower-in-list-atpt (&optional arg) 
  "Employ actions of KILL at things class of LOWER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'list 'ar-th-kill arg))

(defun ar-leftrightsinglequote-lower-in-list-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of LOWER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'list 'ar-th-leftrightsinglequote arg))

(defun ar-length-lower-in-list-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of LOWER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'list 'ar-th-length arg))

(defun ar-parentize-lower-in-list-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of LOWER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'list 'ar-th-parentize arg))

(defun ar-quote-lower-in-list-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of LOWER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'list 'ar-th-quote arg))

(defun ar-separate-lower-in-list-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of LOWER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'list 'ar-th-separate arg))

(defun ar-show-lower-in-list-atpt (&optional arg) 
  "Employ actions of SHOW at things class of LOWER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'list 'ar-th-show arg))

(defun ar-singlequote-lower-in-list-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of LOWER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'list 'ar-th-singlequote arg))

(defun ar-slash-lower-in-list-atpt (&optional arg) 
  "Employ actions of SLASH at things class of LOWER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'list 'ar-th-slash arg))

(defun ar-star-lower-in-list-atpt (&optional arg) 
  "Employ actions of STAR at things class of LOWER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'list 'ar-th-star arg))

(defun ar-slashparen-lower-in-list-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of LOWER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'list 'ar-th-slashparen arg))

(defun ar-sort-lower-in-list-atpt (&optional arg) 
  "Employ actions of SORT at things class of LOWER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'list 'ar-th-sort arg))

(defun ar-trim-lower-in-list-atpt (&optional arg) 
  "Employ actions of TRIM at things class of LOWER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'list 'ar-th-trim arg))

(defun ar-trim-left-lower-in-list-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of LOWER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'list 'ar-th-trim-left arg))

(defun ar-trim-right-lower-in-list-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of LOWER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'list 'ar-th-trim-right arg))

(defun ar-underscore-lower-in-list-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of LOWER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'list 'ar-th-underscore arg))

(defun ar-whitespace-lower-in-list-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of LOWER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'list 'ar-th-whitespace arg))

(defun ar-lower-in-name-atpt (&optional arg) 
  "Employ actions of  at things class of LOWER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'name 'ar-th arg))

(defun ar-greaterangle-lower-in-name-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of LOWER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'name 'ar-th-greaterangle arg))

(defun ar-lesserangle-lower-in-name-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of LOWER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'name 'ar-th-lesserangle arg))

(defun ar-backslash-lower-in-name-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of LOWER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'name 'ar-th-backslash arg))

(defun ar-colon-lower-in-name-atpt (&optional arg) 
  "Employ actions of COLON at things class of LOWER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'name 'ar-th-colon arg))

(defun ar-beg-lower-in-name-atpt (&optional arg) 
  "Employ actions of BEG at things class of LOWER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'name 'ar-th-beg arg))

(defun ar-blok-lower-in-name-atpt (&optional arg) 
  "Employ actions of BLOK at things class of LOWER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'name 'ar-th-blok arg))

(defun ar-bounds-lower-in-name-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of LOWER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'name 'ar-th-bounds arg))

(defun ar-brace-lower-in-name-atpt (&optional arg) 
  "Employ actions of BRACE at things class of LOWER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'name 'ar-th-brace arg))

(defun ar-bracket-lower-in-name-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of LOWER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'name 'ar-th-bracket arg))

(defun ar-commatize-lower-in-name-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of LOWER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'name 'ar-th-commatize arg))

(defun ar-comment-lower-in-name-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of LOWER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'name 'ar-th-comment arg))

(defun ar-dollar-lower-in-name-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of LOWER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'name 'ar-th-dollar arg))

(defun ar-doublebackslash-lower-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of LOWER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'name 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-lower-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of LOWER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'name 'ar-th-doublebacktick arg))

(defun ar-doublequote-lower-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of LOWER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'name 'ar-th-doublequote arg))

(defun ar-doubleslash-lower-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of LOWER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'name 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-lower-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of LOWER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'name 'ar-th-doublebackslashparen arg))

(defun ar-end-lower-in-name-atpt (&optional arg) 
  "Employ actions of END at things class of LOWER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'name 'ar-th-end arg))

(defun ar-escape-lower-in-name-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of LOWER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'name 'ar-th-escape arg))

(defun ar-hide-lower-in-name-atpt (&optional arg) 
  "Employ actions of HIDE at things class of LOWER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'name 'ar-th-hide arg))

(defun ar-hide-show-lower-in-name-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of LOWER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'name 'ar-th-hide-show arg))

(defun ar-hyphen-lower-in-name-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of LOWER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'name 'ar-th-hyphen arg))

(defun ar-kill-lower-in-name-atpt (&optional arg) 
  "Employ actions of KILL at things class of LOWER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'name 'ar-th-kill arg))

(defun ar-leftrightsinglequote-lower-in-name-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of LOWER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'name 'ar-th-leftrightsinglequote arg))

(defun ar-length-lower-in-name-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of LOWER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'name 'ar-th-length arg))

(defun ar-parentize-lower-in-name-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of LOWER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'name 'ar-th-parentize arg))

(defun ar-quote-lower-in-name-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of LOWER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'name 'ar-th-quote arg))

(defun ar-separate-lower-in-name-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of LOWER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'name 'ar-th-separate arg))

(defun ar-show-lower-in-name-atpt (&optional arg) 
  "Employ actions of SHOW at things class of LOWER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'name 'ar-th-show arg))

(defun ar-singlequote-lower-in-name-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of LOWER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'name 'ar-th-singlequote arg))

(defun ar-slash-lower-in-name-atpt (&optional arg) 
  "Employ actions of SLASH at things class of LOWER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'name 'ar-th-slash arg))

(defun ar-star-lower-in-name-atpt (&optional arg) 
  "Employ actions of STAR at things class of LOWER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'name 'ar-th-star arg))

(defun ar-slashparen-lower-in-name-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of LOWER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'name 'ar-th-slashparen arg))

(defun ar-sort-lower-in-name-atpt (&optional arg) 
  "Employ actions of SORT at things class of LOWER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'name 'ar-th-sort arg))

(defun ar-trim-lower-in-name-atpt (&optional arg) 
  "Employ actions of TRIM at things class of LOWER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'name 'ar-th-trim arg))

(defun ar-trim-left-lower-in-name-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of LOWER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'name 'ar-th-trim-left arg))

(defun ar-trim-right-lower-in-name-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of LOWER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'name 'ar-th-trim-right arg))

(defun ar-underscore-lower-in-name-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of LOWER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'name 'ar-th-underscore arg))

(defun ar-whitespace-lower-in-name-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of LOWER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'name 'ar-th-whitespace arg))

(defun ar-lower-in-page-atpt (&optional arg) 
  "Employ actions of  at things class of LOWER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'page 'ar-th arg))

(defun ar-greaterangle-lower-in-page-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of LOWER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'page 'ar-th-greaterangle arg))

(defun ar-lesserangle-lower-in-page-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of LOWER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'page 'ar-th-lesserangle arg))

(defun ar-backslash-lower-in-page-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of LOWER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'page 'ar-th-backslash arg))

(defun ar-colon-lower-in-page-atpt (&optional arg) 
  "Employ actions of COLON at things class of LOWER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'page 'ar-th-colon arg))

(defun ar-beg-lower-in-page-atpt (&optional arg) 
  "Employ actions of BEG at things class of LOWER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'page 'ar-th-beg arg))

(defun ar-blok-lower-in-page-atpt (&optional arg) 
  "Employ actions of BLOK at things class of LOWER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'page 'ar-th-blok arg))

(defun ar-bounds-lower-in-page-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of LOWER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'page 'ar-th-bounds arg))

(defun ar-brace-lower-in-page-atpt (&optional arg) 
  "Employ actions of BRACE at things class of LOWER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'page 'ar-th-brace arg))

(defun ar-bracket-lower-in-page-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of LOWER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'page 'ar-th-bracket arg))

(defun ar-commatize-lower-in-page-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of LOWER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'page 'ar-th-commatize arg))

(defun ar-comment-lower-in-page-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of LOWER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'page 'ar-th-comment arg))

(defun ar-dollar-lower-in-page-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of LOWER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'page 'ar-th-dollar arg))

(defun ar-doublebackslash-lower-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of LOWER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'page 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-lower-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of LOWER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'page 'ar-th-doublebacktick arg))

(defun ar-doublequote-lower-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of LOWER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'page 'ar-th-doublequote arg))

(defun ar-doubleslash-lower-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of LOWER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'page 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-lower-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of LOWER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'page 'ar-th-doublebackslashparen arg))

(defun ar-end-lower-in-page-atpt (&optional arg) 
  "Employ actions of END at things class of LOWER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'page 'ar-th-end arg))

(defun ar-escape-lower-in-page-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of LOWER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'page 'ar-th-escape arg))

(defun ar-hide-lower-in-page-atpt (&optional arg) 
  "Employ actions of HIDE at things class of LOWER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'page 'ar-th-hide arg))

(defun ar-hide-show-lower-in-page-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of LOWER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'page 'ar-th-hide-show arg))

(defun ar-hyphen-lower-in-page-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of LOWER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'page 'ar-th-hyphen arg))

(defun ar-kill-lower-in-page-atpt (&optional arg) 
  "Employ actions of KILL at things class of LOWER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'page 'ar-th-kill arg))

(defun ar-leftrightsinglequote-lower-in-page-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of LOWER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'page 'ar-th-leftrightsinglequote arg))

(defun ar-length-lower-in-page-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of LOWER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'page 'ar-th-length arg))

(defun ar-parentize-lower-in-page-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of LOWER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'page 'ar-th-parentize arg))

(defun ar-quote-lower-in-page-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of LOWER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'page 'ar-th-quote arg))

(defun ar-separate-lower-in-page-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of LOWER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'page 'ar-th-separate arg))

(defun ar-show-lower-in-page-atpt (&optional arg) 
  "Employ actions of SHOW at things class of LOWER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'page 'ar-th-show arg))

(defun ar-singlequote-lower-in-page-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of LOWER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'page 'ar-th-singlequote arg))

(defun ar-slash-lower-in-page-atpt (&optional arg) 
  "Employ actions of SLASH at things class of LOWER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'page 'ar-th-slash arg))

(defun ar-star-lower-in-page-atpt (&optional arg) 
  "Employ actions of STAR at things class of LOWER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'page 'ar-th-star arg))

(defun ar-slashparen-lower-in-page-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of LOWER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'page 'ar-th-slashparen arg))

(defun ar-sort-lower-in-page-atpt (&optional arg) 
  "Employ actions of SORT at things class of LOWER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'page 'ar-th-sort arg))

(defun ar-trim-lower-in-page-atpt (&optional arg) 
  "Employ actions of TRIM at things class of LOWER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'page 'ar-th-trim arg))

(defun ar-trim-left-lower-in-page-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of LOWER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'page 'ar-th-trim-left arg))

(defun ar-trim-right-lower-in-page-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of LOWER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'page 'ar-th-trim-right arg))

(defun ar-underscore-lower-in-page-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of LOWER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'page 'ar-th-underscore arg))

(defun ar-whitespace-lower-in-page-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of LOWER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'page 'ar-th-whitespace arg))

(defun ar-lower-in-paragraph-atpt (&optional arg) 
  "Employ actions of  at things class of LOWER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'paragraph 'ar-th arg))

(defun ar-greaterangle-lower-in-paragraph-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of LOWER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'paragraph 'ar-th-greaterangle arg))

(defun ar-lesserangle-lower-in-paragraph-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of LOWER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'paragraph 'ar-th-lesserangle arg))

(defun ar-backslash-lower-in-paragraph-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of LOWER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'paragraph 'ar-th-backslash arg))

(defun ar-colon-lower-in-paragraph-atpt (&optional arg) 
  "Employ actions of COLON at things class of LOWER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'paragraph 'ar-th-colon arg))

(defun ar-beg-lower-in-paragraph-atpt (&optional arg) 
  "Employ actions of BEG at things class of LOWER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'paragraph 'ar-th-beg arg))

(defun ar-blok-lower-in-paragraph-atpt (&optional arg) 
  "Employ actions of BLOK at things class of LOWER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'paragraph 'ar-th-blok arg))

(defun ar-bounds-lower-in-paragraph-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of LOWER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'paragraph 'ar-th-bounds arg))

(defun ar-brace-lower-in-paragraph-atpt (&optional arg) 
  "Employ actions of BRACE at things class of LOWER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'paragraph 'ar-th-brace arg))

(defun ar-bracket-lower-in-paragraph-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of LOWER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'paragraph 'ar-th-bracket arg))

(defun ar-commatize-lower-in-paragraph-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of LOWER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'paragraph 'ar-th-commatize arg))

(defun ar-comment-lower-in-paragraph-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of LOWER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'paragraph 'ar-th-comment arg))

(defun ar-dollar-lower-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of LOWER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'paragraph 'ar-th-dollar arg))

(defun ar-doublebackslash-lower-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of LOWER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'paragraph 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-lower-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of LOWER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'paragraph 'ar-th-doublebacktick arg))

(defun ar-doublequote-lower-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of LOWER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'paragraph 'ar-th-doublequote arg))

(defun ar-doubleslash-lower-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of LOWER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'paragraph 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-lower-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of LOWER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'paragraph 'ar-th-doublebackslashparen arg))

(defun ar-end-lower-in-paragraph-atpt (&optional arg) 
  "Employ actions of END at things class of LOWER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'paragraph 'ar-th-end arg))

(defun ar-escape-lower-in-paragraph-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of LOWER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'paragraph 'ar-th-escape arg))

(defun ar-hide-lower-in-paragraph-atpt (&optional arg) 
  "Employ actions of HIDE at things class of LOWER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'paragraph 'ar-th-hide arg))

(defun ar-hide-show-lower-in-paragraph-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of LOWER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'paragraph 'ar-th-hide-show arg))

(defun ar-hyphen-lower-in-paragraph-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of LOWER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'paragraph 'ar-th-hyphen arg))

(defun ar-kill-lower-in-paragraph-atpt (&optional arg) 
  "Employ actions of KILL at things class of LOWER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'paragraph 'ar-th-kill arg))

(defun ar-leftrightsinglequote-lower-in-paragraph-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of LOWER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'paragraph 'ar-th-leftrightsinglequote arg))

(defun ar-length-lower-in-paragraph-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of LOWER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'paragraph 'ar-th-length arg))

(defun ar-parentize-lower-in-paragraph-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of LOWER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'paragraph 'ar-th-parentize arg))

(defun ar-quote-lower-in-paragraph-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of LOWER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'paragraph 'ar-th-quote arg))

(defun ar-separate-lower-in-paragraph-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of LOWER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'paragraph 'ar-th-separate arg))

(defun ar-show-lower-in-paragraph-atpt (&optional arg) 
  "Employ actions of SHOW at things class of LOWER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'paragraph 'ar-th-show arg))

(defun ar-singlequote-lower-in-paragraph-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of LOWER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'paragraph 'ar-th-singlequote arg))

(defun ar-slash-lower-in-paragraph-atpt (&optional arg) 
  "Employ actions of SLASH at things class of LOWER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'paragraph 'ar-th-slash arg))

(defun ar-star-lower-in-paragraph-atpt (&optional arg) 
  "Employ actions of STAR at things class of LOWER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'paragraph 'ar-th-star arg))

(defun ar-slashparen-lower-in-paragraph-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of LOWER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'paragraph 'ar-th-slashparen arg))

(defun ar-sort-lower-in-paragraph-atpt (&optional arg) 
  "Employ actions of SORT at things class of LOWER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'paragraph 'ar-th-sort arg))

(defun ar-trim-lower-in-paragraph-atpt (&optional arg) 
  "Employ actions of TRIM at things class of LOWER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'paragraph 'ar-th-trim arg))

(defun ar-trim-left-lower-in-paragraph-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of LOWER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'paragraph 'ar-th-trim-left arg))

(defun ar-trim-right-lower-in-paragraph-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of LOWER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'paragraph 'ar-th-trim-right arg))

(defun ar-underscore-lower-in-paragraph-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of LOWER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'paragraph 'ar-th-underscore arg))

(defun ar-whitespace-lower-in-paragraph-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of LOWER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'paragraph 'ar-th-whitespace arg))

(defun ar-lower-in-region-atpt (&optional arg) 
  "Employ actions of  at things class of LOWER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'region 'ar-th arg))

(defun ar-greaterangle-lower-in-region-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of LOWER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'region 'ar-th-greaterangle arg))

(defun ar-lesserangle-lower-in-region-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of LOWER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'region 'ar-th-lesserangle arg))

(defun ar-backslash-lower-in-region-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of LOWER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'region 'ar-th-backslash arg))

(defun ar-colon-lower-in-region-atpt (&optional arg) 
  "Employ actions of COLON at things class of LOWER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'region 'ar-th-colon arg))

(defun ar-beg-lower-in-region-atpt (&optional arg) 
  "Employ actions of BEG at things class of LOWER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'region 'ar-th-beg arg))

(defun ar-blok-lower-in-region-atpt (&optional arg) 
  "Employ actions of BLOK at things class of LOWER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'region 'ar-th-blok arg))

(defun ar-bounds-lower-in-region-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of LOWER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'region 'ar-th-bounds arg))

(defun ar-brace-lower-in-region-atpt (&optional arg) 
  "Employ actions of BRACE at things class of LOWER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'region 'ar-th-brace arg))

(defun ar-bracket-lower-in-region-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of LOWER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'region 'ar-th-bracket arg))

(defun ar-commatize-lower-in-region-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of LOWER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'region 'ar-th-commatize arg))

(defun ar-comment-lower-in-region-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of LOWER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'region 'ar-th-comment arg))

(defun ar-dollar-lower-in-region-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of LOWER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'region 'ar-th-dollar arg))

(defun ar-doublebackslash-lower-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of LOWER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'region 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-lower-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of LOWER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'region 'ar-th-doublebacktick arg))

(defun ar-doublequote-lower-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of LOWER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'region 'ar-th-doublequote arg))

(defun ar-doubleslash-lower-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of LOWER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'region 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-lower-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of LOWER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'region 'ar-th-doublebackslashparen arg))

(defun ar-end-lower-in-region-atpt (&optional arg) 
  "Employ actions of END at things class of LOWER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'region 'ar-th-end arg))

(defun ar-escape-lower-in-region-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of LOWER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'region 'ar-th-escape arg))

(defun ar-hide-lower-in-region-atpt (&optional arg) 
  "Employ actions of HIDE at things class of LOWER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'region 'ar-th-hide arg))

(defun ar-hide-show-lower-in-region-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of LOWER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'region 'ar-th-hide-show arg))

(defun ar-hyphen-lower-in-region-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of LOWER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'region 'ar-th-hyphen arg))

(defun ar-kill-lower-in-region-atpt (&optional arg) 
  "Employ actions of KILL at things class of LOWER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'region 'ar-th-kill arg))

(defun ar-leftrightsinglequote-lower-in-region-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of LOWER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'region 'ar-th-leftrightsinglequote arg))

(defun ar-length-lower-in-region-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of LOWER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'region 'ar-th-length arg))

(defun ar-parentize-lower-in-region-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of LOWER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'region 'ar-th-parentize arg))

(defun ar-quote-lower-in-region-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of LOWER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'region 'ar-th-quote arg))

(defun ar-separate-lower-in-region-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of LOWER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'region 'ar-th-separate arg))

(defun ar-show-lower-in-region-atpt (&optional arg) 
  "Employ actions of SHOW at things class of LOWER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'region 'ar-th-show arg))

(defun ar-singlequote-lower-in-region-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of LOWER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'region 'ar-th-singlequote arg))

(defun ar-slash-lower-in-region-atpt (&optional arg) 
  "Employ actions of SLASH at things class of LOWER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'region 'ar-th-slash arg))

(defun ar-star-lower-in-region-atpt (&optional arg) 
  "Employ actions of STAR at things class of LOWER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'region 'ar-th-star arg))

(defun ar-slashparen-lower-in-region-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of LOWER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'region 'ar-th-slashparen arg))

(defun ar-sort-lower-in-region-atpt (&optional arg) 
  "Employ actions of SORT at things class of LOWER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'region 'ar-th-sort arg))

(defun ar-trim-lower-in-region-atpt (&optional arg) 
  "Employ actions of TRIM at things class of LOWER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'region 'ar-th-trim arg))

(defun ar-trim-left-lower-in-region-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of LOWER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'region 'ar-th-trim-left arg))

(defun ar-trim-right-lower-in-region-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of LOWER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'region 'ar-th-trim-right arg))

(defun ar-underscore-lower-in-region-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of LOWER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'region 'ar-th-underscore arg))

(defun ar-whitespace-lower-in-region-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of LOWER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'region 'ar-th-whitespace arg))

(defun ar-lower-in-sentence-atpt (&optional arg) 
  "Employ actions of  at things class of LOWER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sentence 'ar-th arg))

(defun ar-greaterangle-lower-in-sentence-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of LOWER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sentence 'ar-th-greaterangle arg))

(defun ar-lesserangle-lower-in-sentence-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of LOWER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sentence 'ar-th-lesserangle arg))

(defun ar-backslash-lower-in-sentence-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of LOWER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sentence 'ar-th-backslash arg))

(defun ar-colon-lower-in-sentence-atpt (&optional arg) 
  "Employ actions of COLON at things class of LOWER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sentence 'ar-th-colon arg))

(defun ar-beg-lower-in-sentence-atpt (&optional arg) 
  "Employ actions of BEG at things class of LOWER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sentence 'ar-th-beg arg))

(defun ar-blok-lower-in-sentence-atpt (&optional arg) 
  "Employ actions of BLOK at things class of LOWER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sentence 'ar-th-blok arg))

(defun ar-bounds-lower-in-sentence-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of LOWER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sentence 'ar-th-bounds arg))

(defun ar-brace-lower-in-sentence-atpt (&optional arg) 
  "Employ actions of BRACE at things class of LOWER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sentence 'ar-th-brace arg))

(defun ar-bracket-lower-in-sentence-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of LOWER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sentence 'ar-th-bracket arg))

(defun ar-commatize-lower-in-sentence-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of LOWER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sentence 'ar-th-commatize arg))

(defun ar-comment-lower-in-sentence-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of LOWER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sentence 'ar-th-comment arg))

(defun ar-dollar-lower-in-sentence-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of LOWER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sentence 'ar-th-dollar arg))

(defun ar-doublebackslash-lower-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of LOWER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sentence 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-lower-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of LOWER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sentence 'ar-th-doublebacktick arg))

(defun ar-doublequote-lower-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of LOWER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sentence 'ar-th-doublequote arg))

(defun ar-doubleslash-lower-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of LOWER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sentence 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-lower-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of LOWER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sentence 'ar-th-doublebackslashparen arg))

(defun ar-end-lower-in-sentence-atpt (&optional arg) 
  "Employ actions of END at things class of LOWER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sentence 'ar-th-end arg))

(defun ar-escape-lower-in-sentence-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of LOWER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sentence 'ar-th-escape arg))

(defun ar-hide-lower-in-sentence-atpt (&optional arg) 
  "Employ actions of HIDE at things class of LOWER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sentence 'ar-th-hide arg))

(defun ar-hide-show-lower-in-sentence-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of LOWER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sentence 'ar-th-hide-show arg))

(defun ar-hyphen-lower-in-sentence-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of LOWER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sentence 'ar-th-hyphen arg))

(defun ar-kill-lower-in-sentence-atpt (&optional arg) 
  "Employ actions of KILL at things class of LOWER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sentence 'ar-th-kill arg))

(defun ar-leftrightsinglequote-lower-in-sentence-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of LOWER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sentence 'ar-th-leftrightsinglequote arg))

(defun ar-length-lower-in-sentence-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of LOWER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sentence 'ar-th-length arg))

(defun ar-parentize-lower-in-sentence-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of LOWER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sentence 'ar-th-parentize arg))

(defun ar-quote-lower-in-sentence-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of LOWER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sentence 'ar-th-quote arg))

(defun ar-separate-lower-in-sentence-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of LOWER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sentence 'ar-th-separate arg))

(defun ar-show-lower-in-sentence-atpt (&optional arg) 
  "Employ actions of SHOW at things class of LOWER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sentence 'ar-th-show arg))

(defun ar-singlequote-lower-in-sentence-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of LOWER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sentence 'ar-th-singlequote arg))

(defun ar-slash-lower-in-sentence-atpt (&optional arg) 
  "Employ actions of SLASH at things class of LOWER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sentence 'ar-th-slash arg))

(defun ar-star-lower-in-sentence-atpt (&optional arg) 
  "Employ actions of STAR at things class of LOWER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sentence 'ar-th-star arg))

(defun ar-slashparen-lower-in-sentence-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of LOWER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sentence 'ar-th-slashparen arg))

(defun ar-sort-lower-in-sentence-atpt (&optional arg) 
  "Employ actions of SORT at things class of LOWER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sentence 'ar-th-sort arg))

(defun ar-trim-lower-in-sentence-atpt (&optional arg) 
  "Employ actions of TRIM at things class of LOWER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sentence 'ar-th-trim arg))

(defun ar-trim-left-lower-in-sentence-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of LOWER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sentence 'ar-th-trim-left arg))

(defun ar-trim-right-lower-in-sentence-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of LOWER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sentence 'ar-th-trim-right arg))

(defun ar-underscore-lower-in-sentence-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of LOWER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sentence 'ar-th-underscore arg))

(defun ar-whitespace-lower-in-sentence-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of LOWER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sentence 'ar-th-whitespace arg))

(defun ar-lower-in-sexp-atpt (&optional arg) 
  "Employ actions of  at things class of LOWER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sexp 'ar-th arg))

(defun ar-greaterangle-lower-in-sexp-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of LOWER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sexp 'ar-th-greaterangle arg))

(defun ar-lesserangle-lower-in-sexp-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of LOWER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sexp 'ar-th-lesserangle arg))

(defun ar-backslash-lower-in-sexp-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of LOWER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sexp 'ar-th-backslash arg))

(defun ar-colon-lower-in-sexp-atpt (&optional arg) 
  "Employ actions of COLON at things class of LOWER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sexp 'ar-th-colon arg))

(defun ar-beg-lower-in-sexp-atpt (&optional arg) 
  "Employ actions of BEG at things class of LOWER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sexp 'ar-th-beg arg))

(defun ar-blok-lower-in-sexp-atpt (&optional arg) 
  "Employ actions of BLOK at things class of LOWER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sexp 'ar-th-blok arg))

(defun ar-bounds-lower-in-sexp-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of LOWER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sexp 'ar-th-bounds arg))

(defun ar-brace-lower-in-sexp-atpt (&optional arg) 
  "Employ actions of BRACE at things class of LOWER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sexp 'ar-th-brace arg))

(defun ar-bracket-lower-in-sexp-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of LOWER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sexp 'ar-th-bracket arg))

(defun ar-commatize-lower-in-sexp-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of LOWER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sexp 'ar-th-commatize arg))

(defun ar-comment-lower-in-sexp-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of LOWER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sexp 'ar-th-comment arg))

(defun ar-dollar-lower-in-sexp-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of LOWER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sexp 'ar-th-dollar arg))

(defun ar-doublebackslash-lower-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of LOWER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sexp 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-lower-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of LOWER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sexp 'ar-th-doublebacktick arg))

(defun ar-doublequote-lower-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of LOWER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sexp 'ar-th-doublequote arg))

(defun ar-doubleslash-lower-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of LOWER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sexp 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-lower-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of LOWER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sexp 'ar-th-doublebackslashparen arg))

(defun ar-end-lower-in-sexp-atpt (&optional arg) 
  "Employ actions of END at things class of LOWER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sexp 'ar-th-end arg))

(defun ar-escape-lower-in-sexp-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of LOWER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sexp 'ar-th-escape arg))

(defun ar-hide-lower-in-sexp-atpt (&optional arg) 
  "Employ actions of HIDE at things class of LOWER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sexp 'ar-th-hide arg))

(defun ar-hide-show-lower-in-sexp-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of LOWER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sexp 'ar-th-hide-show arg))

(defun ar-hyphen-lower-in-sexp-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of LOWER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sexp 'ar-th-hyphen arg))

(defun ar-kill-lower-in-sexp-atpt (&optional arg) 
  "Employ actions of KILL at things class of LOWER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sexp 'ar-th-kill arg))

(defun ar-leftrightsinglequote-lower-in-sexp-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of LOWER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sexp 'ar-th-leftrightsinglequote arg))

(defun ar-length-lower-in-sexp-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of LOWER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sexp 'ar-th-length arg))

(defun ar-parentize-lower-in-sexp-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of LOWER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sexp 'ar-th-parentize arg))

(defun ar-quote-lower-in-sexp-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of LOWER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sexp 'ar-th-quote arg))

(defun ar-separate-lower-in-sexp-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of LOWER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sexp 'ar-th-separate arg))

(defun ar-show-lower-in-sexp-atpt (&optional arg) 
  "Employ actions of SHOW at things class of LOWER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sexp 'ar-th-show arg))

(defun ar-singlequote-lower-in-sexp-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of LOWER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sexp 'ar-th-singlequote arg))

(defun ar-slash-lower-in-sexp-atpt (&optional arg) 
  "Employ actions of SLASH at things class of LOWER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sexp 'ar-th-slash arg))

(defun ar-star-lower-in-sexp-atpt (&optional arg) 
  "Employ actions of STAR at things class of LOWER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sexp 'ar-th-star arg))

(defun ar-slashparen-lower-in-sexp-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of LOWER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sexp 'ar-th-slashparen arg))

(defun ar-sort-lower-in-sexp-atpt (&optional arg) 
  "Employ actions of SORT at things class of LOWER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sexp 'ar-th-sort arg))

(defun ar-trim-lower-in-sexp-atpt (&optional arg) 
  "Employ actions of TRIM at things class of LOWER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sexp 'ar-th-trim arg))

(defun ar-trim-left-lower-in-sexp-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of LOWER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sexp 'ar-th-trim-left arg))

(defun ar-trim-right-lower-in-sexp-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of LOWER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sexp 'ar-th-trim-right arg))

(defun ar-underscore-lower-in-sexp-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of LOWER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sexp 'ar-th-underscore arg))

(defun ar-whitespace-lower-in-sexp-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of LOWER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'sexp 'ar-th-whitespace arg))

(defun ar-lower-in-shstruct-atpt (&optional arg) 
  "Employ actions of  at things class of LOWER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'shstruct 'ar-th arg))

(defun ar-greaterangle-lower-in-shstruct-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of LOWER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'shstruct 'ar-th-greaterangle arg))

(defun ar-lesserangle-lower-in-shstruct-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of LOWER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'shstruct 'ar-th-lesserangle arg))

(defun ar-backslash-lower-in-shstruct-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of LOWER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'shstruct 'ar-th-backslash arg))

(defun ar-colon-lower-in-shstruct-atpt (&optional arg) 
  "Employ actions of COLON at things class of LOWER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'shstruct 'ar-th-colon arg))

(defun ar-beg-lower-in-shstruct-atpt (&optional arg) 
  "Employ actions of BEG at things class of LOWER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'shstruct 'ar-th-beg arg))

(defun ar-blok-lower-in-shstruct-atpt (&optional arg) 
  "Employ actions of BLOK at things class of LOWER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'shstruct 'ar-th-blok arg))

(defun ar-bounds-lower-in-shstruct-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of LOWER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'shstruct 'ar-th-bounds arg))

(defun ar-brace-lower-in-shstruct-atpt (&optional arg) 
  "Employ actions of BRACE at things class of LOWER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'shstruct 'ar-th-brace arg))

(defun ar-bracket-lower-in-shstruct-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of LOWER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'shstruct 'ar-th-bracket arg))

(defun ar-commatize-lower-in-shstruct-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of LOWER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'shstruct 'ar-th-commatize arg))

(defun ar-comment-lower-in-shstruct-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of LOWER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'shstruct 'ar-th-comment arg))

(defun ar-dollar-lower-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of LOWER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'shstruct 'ar-th-dollar arg))

(defun ar-doublebackslash-lower-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of LOWER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'shstruct 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-lower-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of LOWER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'shstruct 'ar-th-doublebacktick arg))

(defun ar-doublequote-lower-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of LOWER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'shstruct 'ar-th-doublequote arg))

(defun ar-doubleslash-lower-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of LOWER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'shstruct 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-lower-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of LOWER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'shstruct 'ar-th-doublebackslashparen arg))

(defun ar-end-lower-in-shstruct-atpt (&optional arg) 
  "Employ actions of END at things class of LOWER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'shstruct 'ar-th-end arg))

(defun ar-escape-lower-in-shstruct-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of LOWER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'shstruct 'ar-th-escape arg))

(defun ar-hide-lower-in-shstruct-atpt (&optional arg) 
  "Employ actions of HIDE at things class of LOWER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'shstruct 'ar-th-hide arg))

(defun ar-hide-show-lower-in-shstruct-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of LOWER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'shstruct 'ar-th-hide-show arg))

(defun ar-hyphen-lower-in-shstruct-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of LOWER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'shstruct 'ar-th-hyphen arg))

(defun ar-kill-lower-in-shstruct-atpt (&optional arg) 
  "Employ actions of KILL at things class of LOWER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'shstruct 'ar-th-kill arg))

(defun ar-leftrightsinglequote-lower-in-shstruct-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of LOWER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'shstruct 'ar-th-leftrightsinglequote arg))

(defun ar-length-lower-in-shstruct-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of LOWER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'shstruct 'ar-th-length arg))

(defun ar-parentize-lower-in-shstruct-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of LOWER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'shstruct 'ar-th-parentize arg))

(defun ar-quote-lower-in-shstruct-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of LOWER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'shstruct 'ar-th-quote arg))

(defun ar-separate-lower-in-shstruct-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of LOWER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'shstruct 'ar-th-separate arg))

(defun ar-show-lower-in-shstruct-atpt (&optional arg) 
  "Employ actions of SHOW at things class of LOWER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'shstruct 'ar-th-show arg))

(defun ar-singlequote-lower-in-shstruct-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of LOWER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'shstruct 'ar-th-singlequote arg))

(defun ar-slash-lower-in-shstruct-atpt (&optional arg) 
  "Employ actions of SLASH at things class of LOWER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'shstruct 'ar-th-slash arg))

(defun ar-star-lower-in-shstruct-atpt (&optional arg) 
  "Employ actions of STAR at things class of LOWER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'shstruct 'ar-th-star arg))

(defun ar-slashparen-lower-in-shstruct-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of LOWER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'shstruct 'ar-th-slashparen arg))

(defun ar-sort-lower-in-shstruct-atpt (&optional arg) 
  "Employ actions of SORT at things class of LOWER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'shstruct 'ar-th-sort arg))

(defun ar-trim-lower-in-shstruct-atpt (&optional arg) 
  "Employ actions of TRIM at things class of LOWER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'shstruct 'ar-th-trim arg))

(defun ar-trim-left-lower-in-shstruct-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of LOWER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'shstruct 'ar-th-trim-left arg))

(defun ar-trim-right-lower-in-shstruct-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of LOWER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'shstruct 'ar-th-trim-right arg))

(defun ar-underscore-lower-in-shstruct-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of LOWER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'shstruct 'ar-th-underscore arg))

(defun ar-whitespace-lower-in-shstruct-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of LOWER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'lower 'shstruct 'ar-th-whitespace arg))

(defun ar-nonascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of  at things class of NONASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'greateranglednested 'ar-th arg))

(defun ar-greaterangle-nonascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of NONASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'greateranglednested 'ar-th-greaterangle arg))

(defun ar-lesserangle-nonascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of NONASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'greateranglednested 'ar-th-lesserangle arg))

(defun ar-backslash-nonascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of NONASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'greateranglednested 'ar-th-backslash arg))

(defun ar-colon-nonascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of COLON at things class of NONASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'greateranglednested 'ar-th-colon arg))

(defun ar-beg-nonascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BEG at things class of NONASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'greateranglednested 'ar-th-beg arg))

(defun ar-blok-nonascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BLOK at things class of NONASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'greateranglednested 'ar-th-blok arg))

(defun ar-bounds-nonascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of NONASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'greateranglednested 'ar-th-bounds arg))

(defun ar-brace-nonascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BRACE at things class of NONASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'greateranglednested 'ar-th-brace arg))

(defun ar-bracket-nonascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of NONASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'greateranglednested 'ar-th-bracket arg))

(defun ar-commatize-nonascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of NONASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'greateranglednested 'ar-th-commatize arg))

(defun ar-comment-nonascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of NONASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'greateranglednested 'ar-th-comment arg))

(defun ar-dollar-nonascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of NONASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'greateranglednested 'ar-th-dollar arg))

(defun ar-doublebackslash-nonascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of NONASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'greateranglednested 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-nonascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of NONASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'greateranglednested 'ar-th-doublebacktick arg))

(defun ar-doublequote-nonascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of NONASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'greateranglednested 'ar-th-doublequote arg))

(defun ar-doubleslash-nonascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of NONASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'greateranglednested 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-nonascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of NONASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'greateranglednested 'ar-th-doublebackslashparen arg))

(defun ar-end-nonascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of END at things class of NONASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'greateranglednested 'ar-th-end arg))

(defun ar-escape-nonascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of NONASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'greateranglednested 'ar-th-escape arg))

(defun ar-hide-nonascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of HIDE at things class of NONASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'greateranglednested 'ar-th-hide arg))

(defun ar-hide-show-nonascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of NONASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'greateranglednested 'ar-th-hide-show arg))

(defun ar-hyphen-nonascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of NONASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'greateranglednested 'ar-th-hyphen arg))

(defun ar-kill-nonascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of KILL at things class of NONASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'greateranglednested 'ar-th-kill arg))

(defun ar-leftrightsinglequote-nonascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of NONASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'greateranglednested 'ar-th-leftrightsinglequote arg))

(defun ar-length-nonascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of NONASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'greateranglednested 'ar-th-length arg))

(defun ar-parentize-nonascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of NONASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'greateranglednested 'ar-th-parentize arg))

(defun ar-quote-nonascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of NONASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'greateranglednested 'ar-th-quote arg))

(defun ar-separate-nonascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of NONASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'greateranglednested 'ar-th-separate arg))

(defun ar-show-nonascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SHOW at things class of NONASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'greateranglednested 'ar-th-show arg))

(defun ar-singlequote-nonascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of NONASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'greateranglednested 'ar-th-singlequote arg))

(defun ar-slash-nonascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SLASH at things class of NONASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'greateranglednested 'ar-th-slash arg))

(defun ar-star-nonascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of STAR at things class of NONASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'greateranglednested 'ar-th-star arg))

(defun ar-slashparen-nonascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of NONASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'greateranglednested 'ar-th-slashparen arg))

(defun ar-sort-nonascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SORT at things class of NONASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'greateranglednested 'ar-th-sort arg))

(defun ar-trim-nonascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of TRIM at things class of NONASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'greateranglednested 'ar-th-trim arg))

(defun ar-trim-left-nonascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of NONASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'greateranglednested 'ar-th-trim-left arg))

(defun ar-trim-right-nonascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of NONASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'greateranglednested 'ar-th-trim-right arg))

(defun ar-underscore-nonascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of NONASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'greateranglednested 'ar-th-underscore arg))

(defun ar-whitespace-nonascii-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of NONASCII residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'greateranglednested 'ar-th-whitespace arg))

(defun ar-nonascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of  at things class of NONASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'lesseranglednested 'ar-th arg))

(defun ar-greaterangle-nonascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of NONASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'lesseranglednested 'ar-th-greaterangle arg))

(defun ar-lesserangle-nonascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of NONASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'lesseranglednested 'ar-th-lesserangle arg))

(defun ar-backslash-nonascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of NONASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'lesseranglednested 'ar-th-backslash arg))

(defun ar-colon-nonascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of COLON at things class of NONASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'lesseranglednested 'ar-th-colon arg))

(defun ar-beg-nonascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BEG at things class of NONASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'lesseranglednested 'ar-th-beg arg))

(defun ar-blok-nonascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BLOK at things class of NONASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'lesseranglednested 'ar-th-blok arg))

(defun ar-bounds-nonascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of NONASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'lesseranglednested 'ar-th-bounds arg))

(defun ar-brace-nonascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BRACE at things class of NONASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'lesseranglednested 'ar-th-brace arg))

(defun ar-bracket-nonascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of NONASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'lesseranglednested 'ar-th-bracket arg))

(defun ar-commatize-nonascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of NONASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'lesseranglednested 'ar-th-commatize arg))

(defun ar-comment-nonascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of NONASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'lesseranglednested 'ar-th-comment arg))

(defun ar-dollar-nonascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of NONASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'lesseranglednested 'ar-th-dollar arg))

(defun ar-doublebackslash-nonascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of NONASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'lesseranglednested 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-nonascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of NONASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'lesseranglednested 'ar-th-doublebacktick arg))

(defun ar-doublequote-nonascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of NONASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'lesseranglednested 'ar-th-doublequote arg))

(defun ar-doubleslash-nonascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of NONASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'lesseranglednested 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-nonascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of NONASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'lesseranglednested 'ar-th-doublebackslashparen arg))

(defun ar-end-nonascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of END at things class of NONASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'lesseranglednested 'ar-th-end arg))

(defun ar-escape-nonascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of NONASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'lesseranglednested 'ar-th-escape arg))

(defun ar-hide-nonascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of HIDE at things class of NONASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'lesseranglednested 'ar-th-hide arg))

(defun ar-hide-show-nonascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of NONASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'lesseranglednested 'ar-th-hide-show arg))

(defun ar-hyphen-nonascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of NONASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'lesseranglednested 'ar-th-hyphen arg))

(defun ar-kill-nonascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of KILL at things class of NONASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'lesseranglednested 'ar-th-kill arg))

(defun ar-leftrightsinglequote-nonascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of NONASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'lesseranglednested 'ar-th-leftrightsinglequote arg))

(defun ar-length-nonascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of NONASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'lesseranglednested 'ar-th-length arg))

(defun ar-parentize-nonascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of NONASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'lesseranglednested 'ar-th-parentize arg))

(defun ar-quote-nonascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of NONASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'lesseranglednested 'ar-th-quote arg))

(defun ar-separate-nonascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of NONASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'lesseranglednested 'ar-th-separate arg))

(defun ar-show-nonascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SHOW at things class of NONASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'lesseranglednested 'ar-th-show arg))

(defun ar-singlequote-nonascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of NONASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'lesseranglednested 'ar-th-singlequote arg))

(defun ar-slash-nonascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SLASH at things class of NONASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'lesseranglednested 'ar-th-slash arg))

(defun ar-star-nonascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of STAR at things class of NONASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'lesseranglednested 'ar-th-star arg))

(defun ar-slashparen-nonascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of NONASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'lesseranglednested 'ar-th-slashparen arg))

(defun ar-sort-nonascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SORT at things class of NONASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'lesseranglednested 'ar-th-sort arg))

(defun ar-trim-nonascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of TRIM at things class of NONASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'lesseranglednested 'ar-th-trim arg))

(defun ar-trim-left-nonascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of NONASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'lesseranglednested 'ar-th-trim-left arg))

(defun ar-trim-right-nonascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of NONASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'lesseranglednested 'ar-th-trim-right arg))

(defun ar-underscore-nonascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of NONASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'lesseranglednested 'ar-th-underscore arg))

(defun ar-whitespace-nonascii-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of NONASCII residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'lesseranglednested 'ar-th-whitespace arg))

(defun ar-nonascii-in-buffer-atpt (&optional arg) 
  "Employ actions of  at things class of NONASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'buffer 'ar-th arg))

(defun ar-greaterangle-nonascii-in-buffer-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of NONASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'buffer 'ar-th-greaterangle arg))

(defun ar-lesserangle-nonascii-in-buffer-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of NONASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'buffer 'ar-th-lesserangle arg))

(defun ar-backslash-nonascii-in-buffer-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of NONASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'buffer 'ar-th-backslash arg))

(defun ar-colon-nonascii-in-buffer-atpt (&optional arg) 
  "Employ actions of COLON at things class of NONASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'buffer 'ar-th-colon arg))

(defun ar-beg-nonascii-in-buffer-atpt (&optional arg) 
  "Employ actions of BEG at things class of NONASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'buffer 'ar-th-beg arg))

(defun ar-blok-nonascii-in-buffer-atpt (&optional arg) 
  "Employ actions of BLOK at things class of NONASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'buffer 'ar-th-blok arg))

(defun ar-bounds-nonascii-in-buffer-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of NONASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'buffer 'ar-th-bounds arg))

(defun ar-brace-nonascii-in-buffer-atpt (&optional arg) 
  "Employ actions of BRACE at things class of NONASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'buffer 'ar-th-brace arg))

(defun ar-bracket-nonascii-in-buffer-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of NONASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'buffer 'ar-th-bracket arg))

(defun ar-commatize-nonascii-in-buffer-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of NONASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'buffer 'ar-th-commatize arg))

(defun ar-comment-nonascii-in-buffer-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of NONASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'buffer 'ar-th-comment arg))

(defun ar-dollar-nonascii-in-buffer-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of NONASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'buffer 'ar-th-dollar arg))

(defun ar-doublebackslash-nonascii-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of NONASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'buffer 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-nonascii-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of NONASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'buffer 'ar-th-doublebacktick arg))

(defun ar-doublequote-nonascii-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of NONASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'buffer 'ar-th-doublequote arg))

(defun ar-doubleslash-nonascii-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of NONASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'buffer 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-nonascii-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of NONASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'buffer 'ar-th-doublebackslashparen arg))

(defun ar-end-nonascii-in-buffer-atpt (&optional arg) 
  "Employ actions of END at things class of NONASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'buffer 'ar-th-end arg))

(defun ar-escape-nonascii-in-buffer-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of NONASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'buffer 'ar-th-escape arg))

(defun ar-hide-nonascii-in-buffer-atpt (&optional arg) 
  "Employ actions of HIDE at things class of NONASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'buffer 'ar-th-hide arg))

(defun ar-hide-show-nonascii-in-buffer-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of NONASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'buffer 'ar-th-hide-show arg))

(defun ar-hyphen-nonascii-in-buffer-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of NONASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'buffer 'ar-th-hyphen arg))

(defun ar-kill-nonascii-in-buffer-atpt (&optional arg) 
  "Employ actions of KILL at things class of NONASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'buffer 'ar-th-kill arg))

(defun ar-leftrightsinglequote-nonascii-in-buffer-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of NONASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'buffer 'ar-th-leftrightsinglequote arg))

(defun ar-length-nonascii-in-buffer-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of NONASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'buffer 'ar-th-length arg))

(defun ar-parentize-nonascii-in-buffer-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of NONASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'buffer 'ar-th-parentize arg))

(defun ar-quote-nonascii-in-buffer-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of NONASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'buffer 'ar-th-quote arg))

(defun ar-separate-nonascii-in-buffer-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of NONASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'buffer 'ar-th-separate arg))

(defun ar-show-nonascii-in-buffer-atpt (&optional arg) 
  "Employ actions of SHOW at things class of NONASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'buffer 'ar-th-show arg))

(defun ar-singlequote-nonascii-in-buffer-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of NONASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'buffer 'ar-th-singlequote arg))

(defun ar-slash-nonascii-in-buffer-atpt (&optional arg) 
  "Employ actions of SLASH at things class of NONASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'buffer 'ar-th-slash arg))

(defun ar-star-nonascii-in-buffer-atpt (&optional arg) 
  "Employ actions of STAR at things class of NONASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'buffer 'ar-th-star arg))

(defun ar-slashparen-nonascii-in-buffer-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of NONASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'buffer 'ar-th-slashparen arg))

(defun ar-sort-nonascii-in-buffer-atpt (&optional arg) 
  "Employ actions of SORT at things class of NONASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'buffer 'ar-th-sort arg))

(defun ar-trim-nonascii-in-buffer-atpt (&optional arg) 
  "Employ actions of TRIM at things class of NONASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'buffer 'ar-th-trim arg))

(defun ar-trim-left-nonascii-in-buffer-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of NONASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'buffer 'ar-th-trim-left arg))

(defun ar-trim-right-nonascii-in-buffer-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of NONASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'buffer 'ar-th-trim-right arg))

(defun ar-underscore-nonascii-in-buffer-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of NONASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'buffer 'ar-th-underscore arg))

(defun ar-whitespace-nonascii-in-buffer-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of NONASCII residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'buffer 'ar-th-whitespace arg))

(defun ar-nonascii-in-comment-atpt (&optional arg) 
  "Employ actions of  at things class of NONASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'comment 'ar-th arg))

(defun ar-greaterangle-nonascii-in-comment-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of NONASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'comment 'ar-th-greaterangle arg))

(defun ar-lesserangle-nonascii-in-comment-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of NONASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'comment 'ar-th-lesserangle arg))

(defun ar-backslash-nonascii-in-comment-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of NONASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'comment 'ar-th-backslash arg))

(defun ar-colon-nonascii-in-comment-atpt (&optional arg) 
  "Employ actions of COLON at things class of NONASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'comment 'ar-th-colon arg))

(defun ar-beg-nonascii-in-comment-atpt (&optional arg) 
  "Employ actions of BEG at things class of NONASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'comment 'ar-th-beg arg))

(defun ar-blok-nonascii-in-comment-atpt (&optional arg) 
  "Employ actions of BLOK at things class of NONASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'comment 'ar-th-blok arg))

(defun ar-bounds-nonascii-in-comment-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of NONASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'comment 'ar-th-bounds arg))

(defun ar-brace-nonascii-in-comment-atpt (&optional arg) 
  "Employ actions of BRACE at things class of NONASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'comment 'ar-th-brace arg))

(defun ar-bracket-nonascii-in-comment-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of NONASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'comment 'ar-th-bracket arg))

(defun ar-commatize-nonascii-in-comment-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of NONASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'comment 'ar-th-commatize arg))

(defun ar-comment-nonascii-in-comment-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of NONASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'comment 'ar-th-comment arg))

(defun ar-dollar-nonascii-in-comment-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of NONASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'comment 'ar-th-dollar arg))

(defun ar-doublebackslash-nonascii-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of NONASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'comment 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-nonascii-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of NONASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'comment 'ar-th-doublebacktick arg))

(defun ar-doublequote-nonascii-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of NONASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'comment 'ar-th-doublequote arg))

(defun ar-doubleslash-nonascii-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of NONASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'comment 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-nonascii-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of NONASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'comment 'ar-th-doublebackslashparen arg))

(defun ar-end-nonascii-in-comment-atpt (&optional arg) 
  "Employ actions of END at things class of NONASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'comment 'ar-th-end arg))

(defun ar-escape-nonascii-in-comment-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of NONASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'comment 'ar-th-escape arg))

(defun ar-hide-nonascii-in-comment-atpt (&optional arg) 
  "Employ actions of HIDE at things class of NONASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'comment 'ar-th-hide arg))

(defun ar-hide-show-nonascii-in-comment-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of NONASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'comment 'ar-th-hide-show arg))

(defun ar-hyphen-nonascii-in-comment-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of NONASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'comment 'ar-th-hyphen arg))

(defun ar-kill-nonascii-in-comment-atpt (&optional arg) 
  "Employ actions of KILL at things class of NONASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'comment 'ar-th-kill arg))

(defun ar-leftrightsinglequote-nonascii-in-comment-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of NONASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'comment 'ar-th-leftrightsinglequote arg))

(defun ar-length-nonascii-in-comment-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of NONASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'comment 'ar-th-length arg))

(defun ar-parentize-nonascii-in-comment-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of NONASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'comment 'ar-th-parentize arg))

(defun ar-quote-nonascii-in-comment-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of NONASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'comment 'ar-th-quote arg))

(defun ar-separate-nonascii-in-comment-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of NONASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'comment 'ar-th-separate arg))

(defun ar-show-nonascii-in-comment-atpt (&optional arg) 
  "Employ actions of SHOW at things class of NONASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'comment 'ar-th-show arg))

(defun ar-singlequote-nonascii-in-comment-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of NONASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'comment 'ar-th-singlequote arg))

(defun ar-slash-nonascii-in-comment-atpt (&optional arg) 
  "Employ actions of SLASH at things class of NONASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'comment 'ar-th-slash arg))

(defun ar-star-nonascii-in-comment-atpt (&optional arg) 
  "Employ actions of STAR at things class of NONASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'comment 'ar-th-star arg))

(defun ar-slashparen-nonascii-in-comment-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of NONASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'comment 'ar-th-slashparen arg))

(defun ar-sort-nonascii-in-comment-atpt (&optional arg) 
  "Employ actions of SORT at things class of NONASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'comment 'ar-th-sort arg))

(defun ar-trim-nonascii-in-comment-atpt (&optional arg) 
  "Employ actions of TRIM at things class of NONASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'comment 'ar-th-trim arg))

(defun ar-trim-left-nonascii-in-comment-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of NONASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'comment 'ar-th-trim-left arg))

(defun ar-trim-right-nonascii-in-comment-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of NONASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'comment 'ar-th-trim-right arg))

(defun ar-underscore-nonascii-in-comment-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of NONASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'comment 'ar-th-underscore arg))

(defun ar-whitespace-nonascii-in-comment-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of NONASCII residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'comment 'ar-th-whitespace arg))

(defun ar-nonascii-in-csv-atpt (&optional arg) 
  "Employ actions of  at things class of NONASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'csv 'ar-th arg))

(defun ar-greaterangle-nonascii-in-csv-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of NONASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'csv 'ar-th-greaterangle arg))

(defun ar-lesserangle-nonascii-in-csv-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of NONASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'csv 'ar-th-lesserangle arg))

(defun ar-backslash-nonascii-in-csv-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of NONASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'csv 'ar-th-backslash arg))

(defun ar-colon-nonascii-in-csv-atpt (&optional arg) 
  "Employ actions of COLON at things class of NONASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'csv 'ar-th-colon arg))

(defun ar-beg-nonascii-in-csv-atpt (&optional arg) 
  "Employ actions of BEG at things class of NONASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'csv 'ar-th-beg arg))

(defun ar-blok-nonascii-in-csv-atpt (&optional arg) 
  "Employ actions of BLOK at things class of NONASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'csv 'ar-th-blok arg))

(defun ar-bounds-nonascii-in-csv-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of NONASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'csv 'ar-th-bounds arg))

(defun ar-brace-nonascii-in-csv-atpt (&optional arg) 
  "Employ actions of BRACE at things class of NONASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'csv 'ar-th-brace arg))

(defun ar-bracket-nonascii-in-csv-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of NONASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'csv 'ar-th-bracket arg))

(defun ar-commatize-nonascii-in-csv-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of NONASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'csv 'ar-th-commatize arg))

(defun ar-comment-nonascii-in-csv-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of NONASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'csv 'ar-th-comment arg))

(defun ar-dollar-nonascii-in-csv-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of NONASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'csv 'ar-th-dollar arg))

(defun ar-doublebackslash-nonascii-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of NONASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'csv 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-nonascii-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of NONASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'csv 'ar-th-doublebacktick arg))

(defun ar-doublequote-nonascii-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of NONASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'csv 'ar-th-doublequote arg))

(defun ar-doubleslash-nonascii-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of NONASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'csv 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-nonascii-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of NONASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'csv 'ar-th-doublebackslashparen arg))

(defun ar-end-nonascii-in-csv-atpt (&optional arg) 
  "Employ actions of END at things class of NONASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'csv 'ar-th-end arg))

(defun ar-escape-nonascii-in-csv-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of NONASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'csv 'ar-th-escape arg))

(defun ar-hide-nonascii-in-csv-atpt (&optional arg) 
  "Employ actions of HIDE at things class of NONASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'csv 'ar-th-hide arg))

(defun ar-hide-show-nonascii-in-csv-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of NONASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'csv 'ar-th-hide-show arg))

(defun ar-hyphen-nonascii-in-csv-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of NONASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'csv 'ar-th-hyphen arg))

(defun ar-kill-nonascii-in-csv-atpt (&optional arg) 
  "Employ actions of KILL at things class of NONASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'csv 'ar-th-kill arg))

(defun ar-leftrightsinglequote-nonascii-in-csv-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of NONASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'csv 'ar-th-leftrightsinglequote arg))

(defun ar-length-nonascii-in-csv-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of NONASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'csv 'ar-th-length arg))

(defun ar-parentize-nonascii-in-csv-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of NONASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'csv 'ar-th-parentize arg))

(defun ar-quote-nonascii-in-csv-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of NONASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'csv 'ar-th-quote arg))

(defun ar-separate-nonascii-in-csv-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of NONASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'csv 'ar-th-separate arg))

(defun ar-show-nonascii-in-csv-atpt (&optional arg) 
  "Employ actions of SHOW at things class of NONASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'csv 'ar-th-show arg))

(defun ar-singlequote-nonascii-in-csv-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of NONASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'csv 'ar-th-singlequote arg))

(defun ar-slash-nonascii-in-csv-atpt (&optional arg) 
  "Employ actions of SLASH at things class of NONASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'csv 'ar-th-slash arg))

(defun ar-star-nonascii-in-csv-atpt (&optional arg) 
  "Employ actions of STAR at things class of NONASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'csv 'ar-th-star arg))

(defun ar-slashparen-nonascii-in-csv-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of NONASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'csv 'ar-th-slashparen arg))

(defun ar-sort-nonascii-in-csv-atpt (&optional arg) 
  "Employ actions of SORT at things class of NONASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'csv 'ar-th-sort arg))

(defun ar-trim-nonascii-in-csv-atpt (&optional arg) 
  "Employ actions of TRIM at things class of NONASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'csv 'ar-th-trim arg))

(defun ar-trim-left-nonascii-in-csv-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of NONASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'csv 'ar-th-trim-left arg))

(defun ar-trim-right-nonascii-in-csv-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of NONASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'csv 'ar-th-trim-right arg))

(defun ar-underscore-nonascii-in-csv-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of NONASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'csv 'ar-th-underscore arg))

(defun ar-whitespace-nonascii-in-csv-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of NONASCII residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'csv 'ar-th-whitespace arg))

(defun ar-nonascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of  at things class of NONASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'filenamenondirectory 'ar-th arg))

(defun ar-greaterangle-nonascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of NONASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'filenamenondirectory 'ar-th-greaterangle arg))

(defun ar-lesserangle-nonascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of NONASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'filenamenondirectory 'ar-th-lesserangle arg))

(defun ar-backslash-nonascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of NONASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'filenamenondirectory 'ar-th-backslash arg))

(defun ar-colon-nonascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of COLON at things class of NONASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'filenamenondirectory 'ar-th-colon arg))

(defun ar-beg-nonascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BEG at things class of NONASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'filenamenondirectory 'ar-th-beg arg))

(defun ar-blok-nonascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BLOK at things class of NONASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'filenamenondirectory 'ar-th-blok arg))

(defun ar-bounds-nonascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of NONASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'filenamenondirectory 'ar-th-bounds arg))

(defun ar-brace-nonascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BRACE at things class of NONASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'filenamenondirectory 'ar-th-brace arg))

(defun ar-bracket-nonascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of NONASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'filenamenondirectory 'ar-th-bracket arg))

(defun ar-commatize-nonascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of NONASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'filenamenondirectory 'ar-th-commatize arg))

(defun ar-comment-nonascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of NONASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'filenamenondirectory 'ar-th-comment arg))

(defun ar-dollar-nonascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of NONASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'filenamenondirectory 'ar-th-dollar arg))

(defun ar-doublebackslash-nonascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of NONASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'filenamenondirectory 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-nonascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of NONASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'filenamenondirectory 'ar-th-doublebacktick arg))

(defun ar-doublequote-nonascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of NONASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'filenamenondirectory 'ar-th-doublequote arg))

(defun ar-doubleslash-nonascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of NONASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'filenamenondirectory 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-nonascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of NONASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'filenamenondirectory 'ar-th-doublebackslashparen arg))

(defun ar-end-nonascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of END at things class of NONASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'filenamenondirectory 'ar-th-end arg))

(defun ar-escape-nonascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of NONASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'filenamenondirectory 'ar-th-escape arg))

(defun ar-hide-nonascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of HIDE at things class of NONASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'filenamenondirectory 'ar-th-hide arg))

(defun ar-hide-show-nonascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of NONASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'filenamenondirectory 'ar-th-hide-show arg))

(defun ar-hyphen-nonascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of NONASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'filenamenondirectory 'ar-th-hyphen arg))

(defun ar-kill-nonascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of KILL at things class of NONASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'filenamenondirectory 'ar-th-kill arg))

(defun ar-leftrightsinglequote-nonascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of NONASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'filenamenondirectory 'ar-th-leftrightsinglequote arg))

(defun ar-length-nonascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of NONASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'filenamenondirectory 'ar-th-length arg))

(defun ar-parentize-nonascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of NONASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'filenamenondirectory 'ar-th-parentize arg))

(defun ar-quote-nonascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of NONASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'filenamenondirectory 'ar-th-quote arg))

(defun ar-separate-nonascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of NONASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'filenamenondirectory 'ar-th-separate arg))

(defun ar-show-nonascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SHOW at things class of NONASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'filenamenondirectory 'ar-th-show arg))

(defun ar-singlequote-nonascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of NONASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'filenamenondirectory 'ar-th-singlequote arg))

(defun ar-slash-nonascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SLASH at things class of NONASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'filenamenondirectory 'ar-th-slash arg))

(defun ar-star-nonascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of STAR at things class of NONASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'filenamenondirectory 'ar-th-star arg))

(defun ar-slashparen-nonascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of NONASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'filenamenondirectory 'ar-th-slashparen arg))

(defun ar-sort-nonascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SORT at things class of NONASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'filenamenondirectory 'ar-th-sort arg))

(defun ar-trim-nonascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of TRIM at things class of NONASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'filenamenondirectory 'ar-th-trim arg))

(defun ar-trim-left-nonascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of NONASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'filenamenondirectory 'ar-th-trim-left arg))

(defun ar-trim-right-nonascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of NONASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'filenamenondirectory 'ar-th-trim-right arg))

(defun ar-underscore-nonascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of NONASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'filenamenondirectory 'ar-th-underscore arg))

(defun ar-whitespace-nonascii-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of NONASCII residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'filenamenondirectory 'ar-th-whitespace arg))

(defun ar-nonascii-in-function-atpt (&optional arg) 
  "Employ actions of  at things class of NONASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'function 'ar-th arg))

(defun ar-greaterangle-nonascii-in-function-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of NONASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'function 'ar-th-greaterangle arg))

(defun ar-lesserangle-nonascii-in-function-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of NONASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'function 'ar-th-lesserangle arg))

(defun ar-backslash-nonascii-in-function-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of NONASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'function 'ar-th-backslash arg))

(defun ar-colon-nonascii-in-function-atpt (&optional arg) 
  "Employ actions of COLON at things class of NONASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'function 'ar-th-colon arg))

(defun ar-beg-nonascii-in-function-atpt (&optional arg) 
  "Employ actions of BEG at things class of NONASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'function 'ar-th-beg arg))

(defun ar-blok-nonascii-in-function-atpt (&optional arg) 
  "Employ actions of BLOK at things class of NONASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'function 'ar-th-blok arg))

(defun ar-bounds-nonascii-in-function-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of NONASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'function 'ar-th-bounds arg))

(defun ar-brace-nonascii-in-function-atpt (&optional arg) 
  "Employ actions of BRACE at things class of NONASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'function 'ar-th-brace arg))

(defun ar-bracket-nonascii-in-function-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of NONASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'function 'ar-th-bracket arg))

(defun ar-commatize-nonascii-in-function-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of NONASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'function 'ar-th-commatize arg))

(defun ar-comment-nonascii-in-function-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of NONASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'function 'ar-th-comment arg))

(defun ar-dollar-nonascii-in-function-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of NONASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'function 'ar-th-dollar arg))

(defun ar-doublebackslash-nonascii-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of NONASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'function 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-nonascii-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of NONASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'function 'ar-th-doublebacktick arg))

(defun ar-doublequote-nonascii-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of NONASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'function 'ar-th-doublequote arg))

(defun ar-doubleslash-nonascii-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of NONASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'function 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-nonascii-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of NONASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'function 'ar-th-doublebackslashparen arg))

(defun ar-end-nonascii-in-function-atpt (&optional arg) 
  "Employ actions of END at things class of NONASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'function 'ar-th-end arg))

(defun ar-escape-nonascii-in-function-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of NONASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'function 'ar-th-escape arg))

(defun ar-hide-nonascii-in-function-atpt (&optional arg) 
  "Employ actions of HIDE at things class of NONASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'function 'ar-th-hide arg))

(defun ar-hide-show-nonascii-in-function-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of NONASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'function 'ar-th-hide-show arg))

(defun ar-hyphen-nonascii-in-function-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of NONASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'function 'ar-th-hyphen arg))

(defun ar-kill-nonascii-in-function-atpt (&optional arg) 
  "Employ actions of KILL at things class of NONASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'function 'ar-th-kill arg))

(defun ar-leftrightsinglequote-nonascii-in-function-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of NONASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'function 'ar-th-leftrightsinglequote arg))

(defun ar-length-nonascii-in-function-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of NONASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'function 'ar-th-length arg))

(defun ar-parentize-nonascii-in-function-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of NONASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'function 'ar-th-parentize arg))

(defun ar-quote-nonascii-in-function-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of NONASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'function 'ar-th-quote arg))

(defun ar-separate-nonascii-in-function-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of NONASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'function 'ar-th-separate arg))

(defun ar-show-nonascii-in-function-atpt (&optional arg) 
  "Employ actions of SHOW at things class of NONASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'function 'ar-th-show arg))

(defun ar-singlequote-nonascii-in-function-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of NONASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'function 'ar-th-singlequote arg))

(defun ar-slash-nonascii-in-function-atpt (&optional arg) 
  "Employ actions of SLASH at things class of NONASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'function 'ar-th-slash arg))

(defun ar-star-nonascii-in-function-atpt (&optional arg) 
  "Employ actions of STAR at things class of NONASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'function 'ar-th-star arg))

(defun ar-slashparen-nonascii-in-function-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of NONASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'function 'ar-th-slashparen arg))

(defun ar-sort-nonascii-in-function-atpt (&optional arg) 
  "Employ actions of SORT at things class of NONASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'function 'ar-th-sort arg))

(defun ar-trim-nonascii-in-function-atpt (&optional arg) 
  "Employ actions of TRIM at things class of NONASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'function 'ar-th-trim arg))

(defun ar-trim-left-nonascii-in-function-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of NONASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'function 'ar-th-trim-left arg))

(defun ar-trim-right-nonascii-in-function-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of NONASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'function 'ar-th-trim-right arg))

(defun ar-underscore-nonascii-in-function-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of NONASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'function 'ar-th-underscore arg))

(defun ar-whitespace-nonascii-in-function-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of NONASCII residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'function 'ar-th-whitespace arg))

(defun ar-nonascii-in-line-atpt (&optional arg) 
  "Employ actions of  at things class of NONASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'line 'ar-th arg))

(defun ar-greaterangle-nonascii-in-line-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of NONASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'line 'ar-th-greaterangle arg))

(defun ar-lesserangle-nonascii-in-line-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of NONASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'line 'ar-th-lesserangle arg))

(defun ar-backslash-nonascii-in-line-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of NONASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'line 'ar-th-backslash arg))

(defun ar-colon-nonascii-in-line-atpt (&optional arg) 
  "Employ actions of COLON at things class of NONASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'line 'ar-th-colon arg))

(defun ar-beg-nonascii-in-line-atpt (&optional arg) 
  "Employ actions of BEG at things class of NONASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'line 'ar-th-beg arg))

(defun ar-blok-nonascii-in-line-atpt (&optional arg) 
  "Employ actions of BLOK at things class of NONASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'line 'ar-th-blok arg))

(defun ar-bounds-nonascii-in-line-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of NONASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'line 'ar-th-bounds arg))

(defun ar-brace-nonascii-in-line-atpt (&optional arg) 
  "Employ actions of BRACE at things class of NONASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'line 'ar-th-brace arg))

(defun ar-bracket-nonascii-in-line-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of NONASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'line 'ar-th-bracket arg))

(defun ar-commatize-nonascii-in-line-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of NONASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'line 'ar-th-commatize arg))

(defun ar-comment-nonascii-in-line-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of NONASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'line 'ar-th-comment arg))

(defun ar-dollar-nonascii-in-line-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of NONASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'line 'ar-th-dollar arg))

(defun ar-doublebackslash-nonascii-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of NONASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'line 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-nonascii-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of NONASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'line 'ar-th-doublebacktick arg))

(defun ar-doublequote-nonascii-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of NONASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'line 'ar-th-doublequote arg))

(defun ar-doubleslash-nonascii-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of NONASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'line 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-nonascii-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of NONASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'line 'ar-th-doublebackslashparen arg))

(defun ar-end-nonascii-in-line-atpt (&optional arg) 
  "Employ actions of END at things class of NONASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'line 'ar-th-end arg))

(defun ar-escape-nonascii-in-line-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of NONASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'line 'ar-th-escape arg))

(defun ar-hide-nonascii-in-line-atpt (&optional arg) 
  "Employ actions of HIDE at things class of NONASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'line 'ar-th-hide arg))

(defun ar-hide-show-nonascii-in-line-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of NONASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'line 'ar-th-hide-show arg))

(defun ar-hyphen-nonascii-in-line-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of NONASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'line 'ar-th-hyphen arg))

(defun ar-kill-nonascii-in-line-atpt (&optional arg) 
  "Employ actions of KILL at things class of NONASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'line 'ar-th-kill arg))

(defun ar-leftrightsinglequote-nonascii-in-line-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of NONASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'line 'ar-th-leftrightsinglequote arg))

(defun ar-length-nonascii-in-line-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of NONASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'line 'ar-th-length arg))

(defun ar-parentize-nonascii-in-line-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of NONASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'line 'ar-th-parentize arg))

(defun ar-quote-nonascii-in-line-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of NONASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'line 'ar-th-quote arg))

(defun ar-separate-nonascii-in-line-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of NONASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'line 'ar-th-separate arg))

(defun ar-show-nonascii-in-line-atpt (&optional arg) 
  "Employ actions of SHOW at things class of NONASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'line 'ar-th-show arg))

(defun ar-singlequote-nonascii-in-line-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of NONASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'line 'ar-th-singlequote arg))

(defun ar-slash-nonascii-in-line-atpt (&optional arg) 
  "Employ actions of SLASH at things class of NONASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'line 'ar-th-slash arg))

(defun ar-star-nonascii-in-line-atpt (&optional arg) 
  "Employ actions of STAR at things class of NONASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'line 'ar-th-star arg))

(defun ar-slashparen-nonascii-in-line-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of NONASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'line 'ar-th-slashparen arg))

(defun ar-sort-nonascii-in-line-atpt (&optional arg) 
  "Employ actions of SORT at things class of NONASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'line 'ar-th-sort arg))

(defun ar-trim-nonascii-in-line-atpt (&optional arg) 
  "Employ actions of TRIM at things class of NONASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'line 'ar-th-trim arg))

(defun ar-trim-left-nonascii-in-line-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of NONASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'line 'ar-th-trim-left arg))

(defun ar-trim-right-nonascii-in-line-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of NONASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'line 'ar-th-trim-right arg))

(defun ar-underscore-nonascii-in-line-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of NONASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'line 'ar-th-underscore arg))

(defun ar-whitespace-nonascii-in-line-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of NONASCII residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'line 'ar-th-whitespace arg))

(defun ar-nonascii-in-list-atpt (&optional arg) 
  "Employ actions of  at things class of NONASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'list 'ar-th arg))

(defun ar-greaterangle-nonascii-in-list-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of NONASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'list 'ar-th-greaterangle arg))

(defun ar-lesserangle-nonascii-in-list-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of NONASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'list 'ar-th-lesserangle arg))

(defun ar-backslash-nonascii-in-list-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of NONASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'list 'ar-th-backslash arg))

(defun ar-colon-nonascii-in-list-atpt (&optional arg) 
  "Employ actions of COLON at things class of NONASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'list 'ar-th-colon arg))

(defun ar-beg-nonascii-in-list-atpt (&optional arg) 
  "Employ actions of BEG at things class of NONASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'list 'ar-th-beg arg))

(defun ar-blok-nonascii-in-list-atpt (&optional arg) 
  "Employ actions of BLOK at things class of NONASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'list 'ar-th-blok arg))

(defun ar-bounds-nonascii-in-list-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of NONASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'list 'ar-th-bounds arg))

(defun ar-brace-nonascii-in-list-atpt (&optional arg) 
  "Employ actions of BRACE at things class of NONASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'list 'ar-th-brace arg))

(defun ar-bracket-nonascii-in-list-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of NONASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'list 'ar-th-bracket arg))

(defun ar-commatize-nonascii-in-list-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of NONASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'list 'ar-th-commatize arg))

(defun ar-comment-nonascii-in-list-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of NONASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'list 'ar-th-comment arg))

(defun ar-dollar-nonascii-in-list-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of NONASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'list 'ar-th-dollar arg))

(defun ar-doublebackslash-nonascii-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of NONASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'list 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-nonascii-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of NONASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'list 'ar-th-doublebacktick arg))

(defun ar-doublequote-nonascii-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of NONASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'list 'ar-th-doublequote arg))

(defun ar-doubleslash-nonascii-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of NONASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'list 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-nonascii-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of NONASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'list 'ar-th-doublebackslashparen arg))

(defun ar-end-nonascii-in-list-atpt (&optional arg) 
  "Employ actions of END at things class of NONASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'list 'ar-th-end arg))

(defun ar-escape-nonascii-in-list-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of NONASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'list 'ar-th-escape arg))

(defun ar-hide-nonascii-in-list-atpt (&optional arg) 
  "Employ actions of HIDE at things class of NONASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'list 'ar-th-hide arg))

(defun ar-hide-show-nonascii-in-list-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of NONASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'list 'ar-th-hide-show arg))

(defun ar-hyphen-nonascii-in-list-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of NONASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'list 'ar-th-hyphen arg))

(defun ar-kill-nonascii-in-list-atpt (&optional arg) 
  "Employ actions of KILL at things class of NONASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'list 'ar-th-kill arg))

(defun ar-leftrightsinglequote-nonascii-in-list-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of NONASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'list 'ar-th-leftrightsinglequote arg))

(defun ar-length-nonascii-in-list-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of NONASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'list 'ar-th-length arg))

(defun ar-parentize-nonascii-in-list-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of NONASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'list 'ar-th-parentize arg))

(defun ar-quote-nonascii-in-list-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of NONASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'list 'ar-th-quote arg))

(defun ar-separate-nonascii-in-list-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of NONASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'list 'ar-th-separate arg))

(defun ar-show-nonascii-in-list-atpt (&optional arg) 
  "Employ actions of SHOW at things class of NONASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'list 'ar-th-show arg))

(defun ar-singlequote-nonascii-in-list-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of NONASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'list 'ar-th-singlequote arg))

(defun ar-slash-nonascii-in-list-atpt (&optional arg) 
  "Employ actions of SLASH at things class of NONASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'list 'ar-th-slash arg))

(defun ar-star-nonascii-in-list-atpt (&optional arg) 
  "Employ actions of STAR at things class of NONASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'list 'ar-th-star arg))

(defun ar-slashparen-nonascii-in-list-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of NONASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'list 'ar-th-slashparen arg))

(defun ar-sort-nonascii-in-list-atpt (&optional arg) 
  "Employ actions of SORT at things class of NONASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'list 'ar-th-sort arg))

(defun ar-trim-nonascii-in-list-atpt (&optional arg) 
  "Employ actions of TRIM at things class of NONASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'list 'ar-th-trim arg))

(defun ar-trim-left-nonascii-in-list-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of NONASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'list 'ar-th-trim-left arg))

(defun ar-trim-right-nonascii-in-list-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of NONASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'list 'ar-th-trim-right arg))

(defun ar-underscore-nonascii-in-list-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of NONASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'list 'ar-th-underscore arg))

(defun ar-whitespace-nonascii-in-list-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of NONASCII residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'list 'ar-th-whitespace arg))

(defun ar-nonascii-in-name-atpt (&optional arg) 
  "Employ actions of  at things class of NONASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'name 'ar-th arg))

(defun ar-greaterangle-nonascii-in-name-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of NONASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'name 'ar-th-greaterangle arg))

(defun ar-lesserangle-nonascii-in-name-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of NONASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'name 'ar-th-lesserangle arg))

(defun ar-backslash-nonascii-in-name-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of NONASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'name 'ar-th-backslash arg))

(defun ar-colon-nonascii-in-name-atpt (&optional arg) 
  "Employ actions of COLON at things class of NONASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'name 'ar-th-colon arg))

(defun ar-beg-nonascii-in-name-atpt (&optional arg) 
  "Employ actions of BEG at things class of NONASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'name 'ar-th-beg arg))

(defun ar-blok-nonascii-in-name-atpt (&optional arg) 
  "Employ actions of BLOK at things class of NONASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'name 'ar-th-blok arg))

(defun ar-bounds-nonascii-in-name-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of NONASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'name 'ar-th-bounds arg))

(defun ar-brace-nonascii-in-name-atpt (&optional arg) 
  "Employ actions of BRACE at things class of NONASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'name 'ar-th-brace arg))

(defun ar-bracket-nonascii-in-name-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of NONASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'name 'ar-th-bracket arg))

(defun ar-commatize-nonascii-in-name-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of NONASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'name 'ar-th-commatize arg))

(defun ar-comment-nonascii-in-name-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of NONASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'name 'ar-th-comment arg))

(defun ar-dollar-nonascii-in-name-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of NONASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'name 'ar-th-dollar arg))

(defun ar-doublebackslash-nonascii-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of NONASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'name 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-nonascii-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of NONASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'name 'ar-th-doublebacktick arg))

(defun ar-doublequote-nonascii-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of NONASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'name 'ar-th-doublequote arg))

(defun ar-doubleslash-nonascii-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of NONASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'name 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-nonascii-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of NONASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'name 'ar-th-doublebackslashparen arg))

(defun ar-end-nonascii-in-name-atpt (&optional arg) 
  "Employ actions of END at things class of NONASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'name 'ar-th-end arg))

(defun ar-escape-nonascii-in-name-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of NONASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'name 'ar-th-escape arg))

(defun ar-hide-nonascii-in-name-atpt (&optional arg) 
  "Employ actions of HIDE at things class of NONASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'name 'ar-th-hide arg))

(defun ar-hide-show-nonascii-in-name-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of NONASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'name 'ar-th-hide-show arg))

(defun ar-hyphen-nonascii-in-name-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of NONASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'name 'ar-th-hyphen arg))

(defun ar-kill-nonascii-in-name-atpt (&optional arg) 
  "Employ actions of KILL at things class of NONASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'name 'ar-th-kill arg))

(defun ar-leftrightsinglequote-nonascii-in-name-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of NONASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'name 'ar-th-leftrightsinglequote arg))

(defun ar-length-nonascii-in-name-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of NONASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'name 'ar-th-length arg))

(defun ar-parentize-nonascii-in-name-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of NONASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'name 'ar-th-parentize arg))

(defun ar-quote-nonascii-in-name-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of NONASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'name 'ar-th-quote arg))

(defun ar-separate-nonascii-in-name-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of NONASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'name 'ar-th-separate arg))

(defun ar-show-nonascii-in-name-atpt (&optional arg) 
  "Employ actions of SHOW at things class of NONASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'name 'ar-th-show arg))

(defun ar-singlequote-nonascii-in-name-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of NONASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'name 'ar-th-singlequote arg))

(defun ar-slash-nonascii-in-name-atpt (&optional arg) 
  "Employ actions of SLASH at things class of NONASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'name 'ar-th-slash arg))

(defun ar-star-nonascii-in-name-atpt (&optional arg) 
  "Employ actions of STAR at things class of NONASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'name 'ar-th-star arg))

(defun ar-slashparen-nonascii-in-name-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of NONASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'name 'ar-th-slashparen arg))

(defun ar-sort-nonascii-in-name-atpt (&optional arg) 
  "Employ actions of SORT at things class of NONASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'name 'ar-th-sort arg))

(defun ar-trim-nonascii-in-name-atpt (&optional arg) 
  "Employ actions of TRIM at things class of NONASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'name 'ar-th-trim arg))

(defun ar-trim-left-nonascii-in-name-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of NONASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'name 'ar-th-trim-left arg))

(defun ar-trim-right-nonascii-in-name-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of NONASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'name 'ar-th-trim-right arg))

(defun ar-underscore-nonascii-in-name-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of NONASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'name 'ar-th-underscore arg))

(defun ar-whitespace-nonascii-in-name-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of NONASCII residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'name 'ar-th-whitespace arg))

(defun ar-nonascii-in-page-atpt (&optional arg) 
  "Employ actions of  at things class of NONASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'page 'ar-th arg))

(defun ar-greaterangle-nonascii-in-page-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of NONASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'page 'ar-th-greaterangle arg))

(defun ar-lesserangle-nonascii-in-page-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of NONASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'page 'ar-th-lesserangle arg))

(defun ar-backslash-nonascii-in-page-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of NONASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'page 'ar-th-backslash arg))

(defun ar-colon-nonascii-in-page-atpt (&optional arg) 
  "Employ actions of COLON at things class of NONASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'page 'ar-th-colon arg))

(defun ar-beg-nonascii-in-page-atpt (&optional arg) 
  "Employ actions of BEG at things class of NONASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'page 'ar-th-beg arg))

(defun ar-blok-nonascii-in-page-atpt (&optional arg) 
  "Employ actions of BLOK at things class of NONASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'page 'ar-th-blok arg))

(defun ar-bounds-nonascii-in-page-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of NONASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'page 'ar-th-bounds arg))

(defun ar-brace-nonascii-in-page-atpt (&optional arg) 
  "Employ actions of BRACE at things class of NONASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'page 'ar-th-brace arg))

(defun ar-bracket-nonascii-in-page-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of NONASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'page 'ar-th-bracket arg))

(defun ar-commatize-nonascii-in-page-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of NONASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'page 'ar-th-commatize arg))

(defun ar-comment-nonascii-in-page-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of NONASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'page 'ar-th-comment arg))

(defun ar-dollar-nonascii-in-page-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of NONASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'page 'ar-th-dollar arg))

(defun ar-doublebackslash-nonascii-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of NONASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'page 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-nonascii-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of NONASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'page 'ar-th-doublebacktick arg))

(defun ar-doublequote-nonascii-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of NONASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'page 'ar-th-doublequote arg))

(defun ar-doubleslash-nonascii-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of NONASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'page 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-nonascii-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of NONASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'page 'ar-th-doublebackslashparen arg))

(defun ar-end-nonascii-in-page-atpt (&optional arg) 
  "Employ actions of END at things class of NONASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'page 'ar-th-end arg))

(defun ar-escape-nonascii-in-page-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of NONASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'page 'ar-th-escape arg))

(defun ar-hide-nonascii-in-page-atpt (&optional arg) 
  "Employ actions of HIDE at things class of NONASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'page 'ar-th-hide arg))

(defun ar-hide-show-nonascii-in-page-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of NONASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'page 'ar-th-hide-show arg))

(defun ar-hyphen-nonascii-in-page-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of NONASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'page 'ar-th-hyphen arg))

(defun ar-kill-nonascii-in-page-atpt (&optional arg) 
  "Employ actions of KILL at things class of NONASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'page 'ar-th-kill arg))

(defun ar-leftrightsinglequote-nonascii-in-page-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of NONASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'page 'ar-th-leftrightsinglequote arg))

(defun ar-length-nonascii-in-page-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of NONASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'page 'ar-th-length arg))

(defun ar-parentize-nonascii-in-page-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of NONASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'page 'ar-th-parentize arg))

(defun ar-quote-nonascii-in-page-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of NONASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'page 'ar-th-quote arg))

(defun ar-separate-nonascii-in-page-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of NONASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'page 'ar-th-separate arg))

(defun ar-show-nonascii-in-page-atpt (&optional arg) 
  "Employ actions of SHOW at things class of NONASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'page 'ar-th-show arg))

(defun ar-singlequote-nonascii-in-page-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of NONASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'page 'ar-th-singlequote arg))

(defun ar-slash-nonascii-in-page-atpt (&optional arg) 
  "Employ actions of SLASH at things class of NONASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'page 'ar-th-slash arg))

(defun ar-star-nonascii-in-page-atpt (&optional arg) 
  "Employ actions of STAR at things class of NONASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'page 'ar-th-star arg))

(defun ar-slashparen-nonascii-in-page-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of NONASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'page 'ar-th-slashparen arg))

(defun ar-sort-nonascii-in-page-atpt (&optional arg) 
  "Employ actions of SORT at things class of NONASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'page 'ar-th-sort arg))

(defun ar-trim-nonascii-in-page-atpt (&optional arg) 
  "Employ actions of TRIM at things class of NONASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'page 'ar-th-trim arg))

(defun ar-trim-left-nonascii-in-page-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of NONASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'page 'ar-th-trim-left arg))

(defun ar-trim-right-nonascii-in-page-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of NONASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'page 'ar-th-trim-right arg))

(defun ar-underscore-nonascii-in-page-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of NONASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'page 'ar-th-underscore arg))

(defun ar-whitespace-nonascii-in-page-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of NONASCII residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'page 'ar-th-whitespace arg))

(defun ar-nonascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of  at things class of NONASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'paragraph 'ar-th arg))

(defun ar-greaterangle-nonascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of NONASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'paragraph 'ar-th-greaterangle arg))

(defun ar-lesserangle-nonascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of NONASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'paragraph 'ar-th-lesserangle arg))

(defun ar-backslash-nonascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of NONASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'paragraph 'ar-th-backslash arg))

(defun ar-colon-nonascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of COLON at things class of NONASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'paragraph 'ar-th-colon arg))

(defun ar-beg-nonascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of BEG at things class of NONASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'paragraph 'ar-th-beg arg))

(defun ar-blok-nonascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of BLOK at things class of NONASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'paragraph 'ar-th-blok arg))

(defun ar-bounds-nonascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of NONASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'paragraph 'ar-th-bounds arg))

(defun ar-brace-nonascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of BRACE at things class of NONASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'paragraph 'ar-th-brace arg))

(defun ar-bracket-nonascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of NONASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'paragraph 'ar-th-bracket arg))

(defun ar-commatize-nonascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of NONASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'paragraph 'ar-th-commatize arg))

(defun ar-comment-nonascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of NONASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'paragraph 'ar-th-comment arg))

(defun ar-dollar-nonascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of NONASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'paragraph 'ar-th-dollar arg))

(defun ar-doublebackslash-nonascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of NONASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'paragraph 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-nonascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of NONASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'paragraph 'ar-th-doublebacktick arg))

(defun ar-doublequote-nonascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of NONASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'paragraph 'ar-th-doublequote arg))

(defun ar-doubleslash-nonascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of NONASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'paragraph 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-nonascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of NONASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'paragraph 'ar-th-doublebackslashparen arg))

(defun ar-end-nonascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of END at things class of NONASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'paragraph 'ar-th-end arg))

(defun ar-escape-nonascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of NONASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'paragraph 'ar-th-escape arg))

(defun ar-hide-nonascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of HIDE at things class of NONASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'paragraph 'ar-th-hide arg))

(defun ar-hide-show-nonascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of NONASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'paragraph 'ar-th-hide-show arg))

(defun ar-hyphen-nonascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of NONASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'paragraph 'ar-th-hyphen arg))

(defun ar-kill-nonascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of KILL at things class of NONASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'paragraph 'ar-th-kill arg))

(defun ar-leftrightsinglequote-nonascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of NONASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'paragraph 'ar-th-leftrightsinglequote arg))

(defun ar-length-nonascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of NONASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'paragraph 'ar-th-length arg))

(defun ar-parentize-nonascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of NONASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'paragraph 'ar-th-parentize arg))

(defun ar-quote-nonascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of NONASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'paragraph 'ar-th-quote arg))

(defun ar-separate-nonascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of NONASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'paragraph 'ar-th-separate arg))

(defun ar-show-nonascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of SHOW at things class of NONASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'paragraph 'ar-th-show arg))

(defun ar-singlequote-nonascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of NONASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'paragraph 'ar-th-singlequote arg))

(defun ar-slash-nonascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of SLASH at things class of NONASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'paragraph 'ar-th-slash arg))

(defun ar-star-nonascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of STAR at things class of NONASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'paragraph 'ar-th-star arg))

(defun ar-slashparen-nonascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of NONASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'paragraph 'ar-th-slashparen arg))

(defun ar-sort-nonascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of SORT at things class of NONASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'paragraph 'ar-th-sort arg))

(defun ar-trim-nonascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of TRIM at things class of NONASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'paragraph 'ar-th-trim arg))

(defun ar-trim-left-nonascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of NONASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'paragraph 'ar-th-trim-left arg))

(defun ar-trim-right-nonascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of NONASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'paragraph 'ar-th-trim-right arg))

(defun ar-underscore-nonascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of NONASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'paragraph 'ar-th-underscore arg))

(defun ar-whitespace-nonascii-in-paragraph-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of NONASCII residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'paragraph 'ar-th-whitespace arg))

(defun ar-nonascii-in-region-atpt (&optional arg) 
  "Employ actions of  at things class of NONASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'region 'ar-th arg))

(defun ar-greaterangle-nonascii-in-region-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of NONASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'region 'ar-th-greaterangle arg))

(defun ar-lesserangle-nonascii-in-region-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of NONASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'region 'ar-th-lesserangle arg))

(defun ar-backslash-nonascii-in-region-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of NONASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'region 'ar-th-backslash arg))

(defun ar-colon-nonascii-in-region-atpt (&optional arg) 
  "Employ actions of COLON at things class of NONASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'region 'ar-th-colon arg))

(defun ar-beg-nonascii-in-region-atpt (&optional arg) 
  "Employ actions of BEG at things class of NONASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'region 'ar-th-beg arg))

(defun ar-blok-nonascii-in-region-atpt (&optional arg) 
  "Employ actions of BLOK at things class of NONASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'region 'ar-th-blok arg))

(defun ar-bounds-nonascii-in-region-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of NONASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'region 'ar-th-bounds arg))

(defun ar-brace-nonascii-in-region-atpt (&optional arg) 
  "Employ actions of BRACE at things class of NONASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'region 'ar-th-brace arg))

(defun ar-bracket-nonascii-in-region-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of NONASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'region 'ar-th-bracket arg))

(defun ar-commatize-nonascii-in-region-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of NONASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'region 'ar-th-commatize arg))

(defun ar-comment-nonascii-in-region-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of NONASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'region 'ar-th-comment arg))

(defun ar-dollar-nonascii-in-region-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of NONASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'region 'ar-th-dollar arg))

(defun ar-doublebackslash-nonascii-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of NONASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'region 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-nonascii-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of NONASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'region 'ar-th-doublebacktick arg))

(defun ar-doublequote-nonascii-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of NONASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'region 'ar-th-doublequote arg))

(defun ar-doubleslash-nonascii-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of NONASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'region 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-nonascii-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of NONASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'region 'ar-th-doublebackslashparen arg))

(defun ar-end-nonascii-in-region-atpt (&optional arg) 
  "Employ actions of END at things class of NONASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'region 'ar-th-end arg))

(defun ar-escape-nonascii-in-region-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of NONASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'region 'ar-th-escape arg))

(defun ar-hide-nonascii-in-region-atpt (&optional arg) 
  "Employ actions of HIDE at things class of NONASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'region 'ar-th-hide arg))

(defun ar-hide-show-nonascii-in-region-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of NONASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'region 'ar-th-hide-show arg))

(defun ar-hyphen-nonascii-in-region-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of NONASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'region 'ar-th-hyphen arg))

(defun ar-kill-nonascii-in-region-atpt (&optional arg) 
  "Employ actions of KILL at things class of NONASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'region 'ar-th-kill arg))

(defun ar-leftrightsinglequote-nonascii-in-region-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of NONASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'region 'ar-th-leftrightsinglequote arg))

(defun ar-length-nonascii-in-region-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of NONASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'region 'ar-th-length arg))

(defun ar-parentize-nonascii-in-region-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of NONASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'region 'ar-th-parentize arg))

(defun ar-quote-nonascii-in-region-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of NONASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'region 'ar-th-quote arg))

(defun ar-separate-nonascii-in-region-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of NONASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'region 'ar-th-separate arg))

(defun ar-show-nonascii-in-region-atpt (&optional arg) 
  "Employ actions of SHOW at things class of NONASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'region 'ar-th-show arg))

(defun ar-singlequote-nonascii-in-region-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of NONASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'region 'ar-th-singlequote arg))

(defun ar-slash-nonascii-in-region-atpt (&optional arg) 
  "Employ actions of SLASH at things class of NONASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'region 'ar-th-slash arg))

(defun ar-star-nonascii-in-region-atpt (&optional arg) 
  "Employ actions of STAR at things class of NONASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'region 'ar-th-star arg))

(defun ar-slashparen-nonascii-in-region-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of NONASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'region 'ar-th-slashparen arg))

(defun ar-sort-nonascii-in-region-atpt (&optional arg) 
  "Employ actions of SORT at things class of NONASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'region 'ar-th-sort arg))

(defun ar-trim-nonascii-in-region-atpt (&optional arg) 
  "Employ actions of TRIM at things class of NONASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'region 'ar-th-trim arg))

(defun ar-trim-left-nonascii-in-region-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of NONASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'region 'ar-th-trim-left arg))

(defun ar-trim-right-nonascii-in-region-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of NONASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'region 'ar-th-trim-right arg))

(defun ar-underscore-nonascii-in-region-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of NONASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'region 'ar-th-underscore arg))

(defun ar-whitespace-nonascii-in-region-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of NONASCII residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'region 'ar-th-whitespace arg))

(defun ar-nonascii-in-sentence-atpt (&optional arg) 
  "Employ actions of  at things class of NONASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sentence 'ar-th arg))

(defun ar-greaterangle-nonascii-in-sentence-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of NONASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sentence 'ar-th-greaterangle arg))

(defun ar-lesserangle-nonascii-in-sentence-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of NONASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sentence 'ar-th-lesserangle arg))

(defun ar-backslash-nonascii-in-sentence-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of NONASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sentence 'ar-th-backslash arg))

(defun ar-colon-nonascii-in-sentence-atpt (&optional arg) 
  "Employ actions of COLON at things class of NONASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sentence 'ar-th-colon arg))

(defun ar-beg-nonascii-in-sentence-atpt (&optional arg) 
  "Employ actions of BEG at things class of NONASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sentence 'ar-th-beg arg))

(defun ar-blok-nonascii-in-sentence-atpt (&optional arg) 
  "Employ actions of BLOK at things class of NONASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sentence 'ar-th-blok arg))

(defun ar-bounds-nonascii-in-sentence-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of NONASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sentence 'ar-th-bounds arg))

(defun ar-brace-nonascii-in-sentence-atpt (&optional arg) 
  "Employ actions of BRACE at things class of NONASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sentence 'ar-th-brace arg))

(defun ar-bracket-nonascii-in-sentence-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of NONASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sentence 'ar-th-bracket arg))

(defun ar-commatize-nonascii-in-sentence-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of NONASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sentence 'ar-th-commatize arg))

(defun ar-comment-nonascii-in-sentence-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of NONASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sentence 'ar-th-comment arg))

(defun ar-dollar-nonascii-in-sentence-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of NONASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sentence 'ar-th-dollar arg))

(defun ar-doublebackslash-nonascii-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of NONASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sentence 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-nonascii-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of NONASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sentence 'ar-th-doublebacktick arg))

(defun ar-doublequote-nonascii-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of NONASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sentence 'ar-th-doublequote arg))

(defun ar-doubleslash-nonascii-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of NONASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sentence 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-nonascii-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of NONASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sentence 'ar-th-doublebackslashparen arg))

(defun ar-end-nonascii-in-sentence-atpt (&optional arg) 
  "Employ actions of END at things class of NONASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sentence 'ar-th-end arg))

(defun ar-escape-nonascii-in-sentence-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of NONASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sentence 'ar-th-escape arg))

(defun ar-hide-nonascii-in-sentence-atpt (&optional arg) 
  "Employ actions of HIDE at things class of NONASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sentence 'ar-th-hide arg))

(defun ar-hide-show-nonascii-in-sentence-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of NONASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sentence 'ar-th-hide-show arg))

(defun ar-hyphen-nonascii-in-sentence-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of NONASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sentence 'ar-th-hyphen arg))

(defun ar-kill-nonascii-in-sentence-atpt (&optional arg) 
  "Employ actions of KILL at things class of NONASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sentence 'ar-th-kill arg))

(defun ar-leftrightsinglequote-nonascii-in-sentence-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of NONASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sentence 'ar-th-leftrightsinglequote arg))

(defun ar-length-nonascii-in-sentence-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of NONASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sentence 'ar-th-length arg))

(defun ar-parentize-nonascii-in-sentence-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of NONASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sentence 'ar-th-parentize arg))

(defun ar-quote-nonascii-in-sentence-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of NONASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sentence 'ar-th-quote arg))

(defun ar-separate-nonascii-in-sentence-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of NONASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sentence 'ar-th-separate arg))

(defun ar-show-nonascii-in-sentence-atpt (&optional arg) 
  "Employ actions of SHOW at things class of NONASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sentence 'ar-th-show arg))

(defun ar-singlequote-nonascii-in-sentence-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of NONASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sentence 'ar-th-singlequote arg))

(defun ar-slash-nonascii-in-sentence-atpt (&optional arg) 
  "Employ actions of SLASH at things class of NONASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sentence 'ar-th-slash arg))

(defun ar-star-nonascii-in-sentence-atpt (&optional arg) 
  "Employ actions of STAR at things class of NONASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sentence 'ar-th-star arg))

(defun ar-slashparen-nonascii-in-sentence-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of NONASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sentence 'ar-th-slashparen arg))

(defun ar-sort-nonascii-in-sentence-atpt (&optional arg) 
  "Employ actions of SORT at things class of NONASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sentence 'ar-th-sort arg))

(defun ar-trim-nonascii-in-sentence-atpt (&optional arg) 
  "Employ actions of TRIM at things class of NONASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sentence 'ar-th-trim arg))

(defun ar-trim-left-nonascii-in-sentence-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of NONASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sentence 'ar-th-trim-left arg))

(defun ar-trim-right-nonascii-in-sentence-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of NONASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sentence 'ar-th-trim-right arg))

(defun ar-underscore-nonascii-in-sentence-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of NONASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sentence 'ar-th-underscore arg))

(defun ar-whitespace-nonascii-in-sentence-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of NONASCII residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sentence 'ar-th-whitespace arg))

(defun ar-nonascii-in-sexp-atpt (&optional arg) 
  "Employ actions of  at things class of NONASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sexp 'ar-th arg))

(defun ar-greaterangle-nonascii-in-sexp-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of NONASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sexp 'ar-th-greaterangle arg))

(defun ar-lesserangle-nonascii-in-sexp-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of NONASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sexp 'ar-th-lesserangle arg))

(defun ar-backslash-nonascii-in-sexp-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of NONASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sexp 'ar-th-backslash arg))

(defun ar-colon-nonascii-in-sexp-atpt (&optional arg) 
  "Employ actions of COLON at things class of NONASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sexp 'ar-th-colon arg))

(defun ar-beg-nonascii-in-sexp-atpt (&optional arg) 
  "Employ actions of BEG at things class of NONASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sexp 'ar-th-beg arg))

(defun ar-blok-nonascii-in-sexp-atpt (&optional arg) 
  "Employ actions of BLOK at things class of NONASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sexp 'ar-th-blok arg))

(defun ar-bounds-nonascii-in-sexp-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of NONASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sexp 'ar-th-bounds arg))

(defun ar-brace-nonascii-in-sexp-atpt (&optional arg) 
  "Employ actions of BRACE at things class of NONASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sexp 'ar-th-brace arg))

(defun ar-bracket-nonascii-in-sexp-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of NONASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sexp 'ar-th-bracket arg))

(defun ar-commatize-nonascii-in-sexp-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of NONASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sexp 'ar-th-commatize arg))

(defun ar-comment-nonascii-in-sexp-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of NONASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sexp 'ar-th-comment arg))

(defun ar-dollar-nonascii-in-sexp-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of NONASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sexp 'ar-th-dollar arg))

(defun ar-doublebackslash-nonascii-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of NONASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sexp 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-nonascii-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of NONASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sexp 'ar-th-doublebacktick arg))

(defun ar-doublequote-nonascii-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of NONASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sexp 'ar-th-doublequote arg))

(defun ar-doubleslash-nonascii-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of NONASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sexp 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-nonascii-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of NONASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sexp 'ar-th-doublebackslashparen arg))

(defun ar-end-nonascii-in-sexp-atpt (&optional arg) 
  "Employ actions of END at things class of NONASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sexp 'ar-th-end arg))

(defun ar-escape-nonascii-in-sexp-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of NONASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sexp 'ar-th-escape arg))

(defun ar-hide-nonascii-in-sexp-atpt (&optional arg) 
  "Employ actions of HIDE at things class of NONASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sexp 'ar-th-hide arg))

(defun ar-hide-show-nonascii-in-sexp-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of NONASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sexp 'ar-th-hide-show arg))

(defun ar-hyphen-nonascii-in-sexp-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of NONASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sexp 'ar-th-hyphen arg))

(defun ar-kill-nonascii-in-sexp-atpt (&optional arg) 
  "Employ actions of KILL at things class of NONASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sexp 'ar-th-kill arg))

(defun ar-leftrightsinglequote-nonascii-in-sexp-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of NONASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sexp 'ar-th-leftrightsinglequote arg))

(defun ar-length-nonascii-in-sexp-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of NONASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sexp 'ar-th-length arg))

(defun ar-parentize-nonascii-in-sexp-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of NONASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sexp 'ar-th-parentize arg))

(defun ar-quote-nonascii-in-sexp-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of NONASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sexp 'ar-th-quote arg))

(defun ar-separate-nonascii-in-sexp-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of NONASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sexp 'ar-th-separate arg))

(defun ar-show-nonascii-in-sexp-atpt (&optional arg) 
  "Employ actions of SHOW at things class of NONASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sexp 'ar-th-show arg))

(defun ar-singlequote-nonascii-in-sexp-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of NONASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sexp 'ar-th-singlequote arg))

(defun ar-slash-nonascii-in-sexp-atpt (&optional arg) 
  "Employ actions of SLASH at things class of NONASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sexp 'ar-th-slash arg))

(defun ar-star-nonascii-in-sexp-atpt (&optional arg) 
  "Employ actions of STAR at things class of NONASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sexp 'ar-th-star arg))

(defun ar-slashparen-nonascii-in-sexp-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of NONASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sexp 'ar-th-slashparen arg))

(defun ar-sort-nonascii-in-sexp-atpt (&optional arg) 
  "Employ actions of SORT at things class of NONASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sexp 'ar-th-sort arg))

(defun ar-trim-nonascii-in-sexp-atpt (&optional arg) 
  "Employ actions of TRIM at things class of NONASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sexp 'ar-th-trim arg))

(defun ar-trim-left-nonascii-in-sexp-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of NONASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sexp 'ar-th-trim-left arg))

(defun ar-trim-right-nonascii-in-sexp-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of NONASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sexp 'ar-th-trim-right arg))

(defun ar-underscore-nonascii-in-sexp-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of NONASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sexp 'ar-th-underscore arg))

(defun ar-whitespace-nonascii-in-sexp-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of NONASCII residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'sexp 'ar-th-whitespace arg))

(defun ar-nonascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of  at things class of NONASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'shstruct 'ar-th arg))

(defun ar-greaterangle-nonascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of NONASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'shstruct 'ar-th-greaterangle arg))

(defun ar-lesserangle-nonascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of NONASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'shstruct 'ar-th-lesserangle arg))

(defun ar-backslash-nonascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of NONASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'shstruct 'ar-th-backslash arg))

(defun ar-colon-nonascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of COLON at things class of NONASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'shstruct 'ar-th-colon arg))

(defun ar-beg-nonascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of BEG at things class of NONASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'shstruct 'ar-th-beg arg))

(defun ar-blok-nonascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of BLOK at things class of NONASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'shstruct 'ar-th-blok arg))

(defun ar-bounds-nonascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of NONASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'shstruct 'ar-th-bounds arg))

(defun ar-brace-nonascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of BRACE at things class of NONASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'shstruct 'ar-th-brace arg))

(defun ar-bracket-nonascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of NONASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'shstruct 'ar-th-bracket arg))

(defun ar-commatize-nonascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of NONASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'shstruct 'ar-th-commatize arg))

(defun ar-comment-nonascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of NONASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'shstruct 'ar-th-comment arg))

(defun ar-dollar-nonascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of NONASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'shstruct 'ar-th-dollar arg))

(defun ar-doublebackslash-nonascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of NONASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'shstruct 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-nonascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of NONASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'shstruct 'ar-th-doublebacktick arg))

(defun ar-doublequote-nonascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of NONASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'shstruct 'ar-th-doublequote arg))

(defun ar-doubleslash-nonascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of NONASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'shstruct 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-nonascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of NONASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'shstruct 'ar-th-doublebackslashparen arg))

(defun ar-end-nonascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of END at things class of NONASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'shstruct 'ar-th-end arg))

(defun ar-escape-nonascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of NONASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'shstruct 'ar-th-escape arg))

(defun ar-hide-nonascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of HIDE at things class of NONASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'shstruct 'ar-th-hide arg))

(defun ar-hide-show-nonascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of NONASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'shstruct 'ar-th-hide-show arg))

(defun ar-hyphen-nonascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of NONASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'shstruct 'ar-th-hyphen arg))

(defun ar-kill-nonascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of KILL at things class of NONASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'shstruct 'ar-th-kill arg))

(defun ar-leftrightsinglequote-nonascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of NONASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'shstruct 'ar-th-leftrightsinglequote arg))

(defun ar-length-nonascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of NONASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'shstruct 'ar-th-length arg))

(defun ar-parentize-nonascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of NONASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'shstruct 'ar-th-parentize arg))

(defun ar-quote-nonascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of NONASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'shstruct 'ar-th-quote arg))

(defun ar-separate-nonascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of NONASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'shstruct 'ar-th-separate arg))

(defun ar-show-nonascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of SHOW at things class of NONASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'shstruct 'ar-th-show arg))

(defun ar-singlequote-nonascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of NONASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'shstruct 'ar-th-singlequote arg))

(defun ar-slash-nonascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of SLASH at things class of NONASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'shstruct 'ar-th-slash arg))

(defun ar-star-nonascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of STAR at things class of NONASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'shstruct 'ar-th-star arg))

(defun ar-slashparen-nonascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of NONASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'shstruct 'ar-th-slashparen arg))

(defun ar-sort-nonascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of SORT at things class of NONASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'shstruct 'ar-th-sort arg))

(defun ar-trim-nonascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of TRIM at things class of NONASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'shstruct 'ar-th-trim arg))

(defun ar-trim-left-nonascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of NONASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'shstruct 'ar-th-trim-left arg))

(defun ar-trim-right-nonascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of NONASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'shstruct 'ar-th-trim-right arg))

(defun ar-underscore-nonascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of NONASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'shstruct 'ar-th-underscore arg))

(defun ar-whitespace-nonascii-in-shstruct-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of NONASCII residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'nonascii 'shstruct 'ar-th-whitespace arg))

(defun ar-print-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of  at things class of PRINT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'greateranglednested 'ar-th arg))

(defun ar-greaterangle-print-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of PRINT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'greateranglednested 'ar-th-greaterangle arg))

(defun ar-lesserangle-print-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of PRINT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'greateranglednested 'ar-th-lesserangle arg))

(defun ar-backslash-print-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of PRINT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'greateranglednested 'ar-th-backslash arg))

(defun ar-colon-print-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of COLON at things class of PRINT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'greateranglednested 'ar-th-colon arg))

(defun ar-beg-print-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BEG at things class of PRINT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'greateranglednested 'ar-th-beg arg))

(defun ar-blok-print-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BLOK at things class of PRINT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'greateranglednested 'ar-th-blok arg))

(defun ar-bounds-print-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of PRINT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'greateranglednested 'ar-th-bounds arg))

(defun ar-brace-print-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BRACE at things class of PRINT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'greateranglednested 'ar-th-brace arg))

(defun ar-bracket-print-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of PRINT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'greateranglednested 'ar-th-bracket arg))

(defun ar-commatize-print-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of PRINT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'greateranglednested 'ar-th-commatize arg))

(defun ar-comment-print-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of PRINT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'greateranglednested 'ar-th-comment arg))

(defun ar-dollar-print-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of PRINT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'greateranglednested 'ar-th-dollar arg))

(defun ar-doublebackslash-print-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of PRINT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'greateranglednested 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-print-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of PRINT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'greateranglednested 'ar-th-doublebacktick arg))

(defun ar-doublequote-print-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of PRINT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'greateranglednested 'ar-th-doublequote arg))

(defun ar-doubleslash-print-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of PRINT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'greateranglednested 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-print-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of PRINT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'greateranglednested 'ar-th-doublebackslashparen arg))

(defun ar-end-print-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of END at things class of PRINT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'greateranglednested 'ar-th-end arg))

(defun ar-escape-print-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of PRINT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'greateranglednested 'ar-th-escape arg))

(defun ar-hide-print-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of HIDE at things class of PRINT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'greateranglednested 'ar-th-hide arg))

(defun ar-hide-show-print-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of PRINT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'greateranglednested 'ar-th-hide-show arg))

(defun ar-hyphen-print-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of PRINT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'greateranglednested 'ar-th-hyphen arg))

(defun ar-kill-print-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of KILL at things class of PRINT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'greateranglednested 'ar-th-kill arg))

(defun ar-leftrightsinglequote-print-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of PRINT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'greateranglednested 'ar-th-leftrightsinglequote arg))

(defun ar-length-print-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of PRINT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'greateranglednested 'ar-th-length arg))

(defun ar-parentize-print-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of PRINT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'greateranglednested 'ar-th-parentize arg))

(defun ar-quote-print-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of PRINT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'greateranglednested 'ar-th-quote arg))

(defun ar-separate-print-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of PRINT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'greateranglednested 'ar-th-separate arg))

(defun ar-show-print-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SHOW at things class of PRINT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'greateranglednested 'ar-th-show arg))

(defun ar-singlequote-print-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of PRINT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'greateranglednested 'ar-th-singlequote arg))

(defun ar-slash-print-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SLASH at things class of PRINT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'greateranglednested 'ar-th-slash arg))

(defun ar-star-print-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of STAR at things class of PRINT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'greateranglednested 'ar-th-star arg))

(defun ar-slashparen-print-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of PRINT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'greateranglednested 'ar-th-slashparen arg))

(defun ar-sort-print-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SORT at things class of PRINT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'greateranglednested 'ar-th-sort arg))

(defun ar-trim-print-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of TRIM at things class of PRINT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'greateranglednested 'ar-th-trim arg))

(defun ar-trim-left-print-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of PRINT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'greateranglednested 'ar-th-trim-left arg))

(defun ar-trim-right-print-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of PRINT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'greateranglednested 'ar-th-trim-right arg))

(defun ar-underscore-print-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of PRINT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'greateranglednested 'ar-th-underscore arg))

(defun ar-whitespace-print-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of PRINT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'greateranglednested 'ar-th-whitespace arg))

(defun ar-print-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of  at things class of PRINT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'lesseranglednested 'ar-th arg))

(defun ar-greaterangle-print-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of PRINT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'lesseranglednested 'ar-th-greaterangle arg))

(defun ar-lesserangle-print-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of PRINT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'lesseranglednested 'ar-th-lesserangle arg))

(defun ar-backslash-print-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of PRINT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'lesseranglednested 'ar-th-backslash arg))

(defun ar-colon-print-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of COLON at things class of PRINT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'lesseranglednested 'ar-th-colon arg))

(defun ar-beg-print-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BEG at things class of PRINT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'lesseranglednested 'ar-th-beg arg))

(defun ar-blok-print-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BLOK at things class of PRINT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'lesseranglednested 'ar-th-blok arg))

(defun ar-bounds-print-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of PRINT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'lesseranglednested 'ar-th-bounds arg))

(defun ar-brace-print-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BRACE at things class of PRINT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'lesseranglednested 'ar-th-brace arg))

(defun ar-bracket-print-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of PRINT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'lesseranglednested 'ar-th-bracket arg))

(defun ar-commatize-print-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of PRINT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'lesseranglednested 'ar-th-commatize arg))

(defun ar-comment-print-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of PRINT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'lesseranglednested 'ar-th-comment arg))

(defun ar-dollar-print-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of PRINT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'lesseranglednested 'ar-th-dollar arg))

(defun ar-doublebackslash-print-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of PRINT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'lesseranglednested 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-print-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of PRINT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'lesseranglednested 'ar-th-doublebacktick arg))

(defun ar-doublequote-print-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of PRINT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'lesseranglednested 'ar-th-doublequote arg))

(defun ar-doubleslash-print-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of PRINT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'lesseranglednested 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-print-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of PRINT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'lesseranglednested 'ar-th-doublebackslashparen arg))

(defun ar-end-print-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of END at things class of PRINT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'lesseranglednested 'ar-th-end arg))

(defun ar-escape-print-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of PRINT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'lesseranglednested 'ar-th-escape arg))

(defun ar-hide-print-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of HIDE at things class of PRINT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'lesseranglednested 'ar-th-hide arg))

(defun ar-hide-show-print-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of PRINT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'lesseranglednested 'ar-th-hide-show arg))

(defun ar-hyphen-print-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of PRINT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'lesseranglednested 'ar-th-hyphen arg))

(defun ar-kill-print-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of KILL at things class of PRINT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'lesseranglednested 'ar-th-kill arg))

(defun ar-leftrightsinglequote-print-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of PRINT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'lesseranglednested 'ar-th-leftrightsinglequote arg))

(defun ar-length-print-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of PRINT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'lesseranglednested 'ar-th-length arg))

(defun ar-parentize-print-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of PRINT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'lesseranglednested 'ar-th-parentize arg))

(defun ar-quote-print-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of PRINT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'lesseranglednested 'ar-th-quote arg))

(defun ar-separate-print-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of PRINT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'lesseranglednested 'ar-th-separate arg))

(defun ar-show-print-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SHOW at things class of PRINT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'lesseranglednested 'ar-th-show arg))

(defun ar-singlequote-print-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of PRINT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'lesseranglednested 'ar-th-singlequote arg))

(defun ar-slash-print-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SLASH at things class of PRINT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'lesseranglednested 'ar-th-slash arg))

(defun ar-star-print-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of STAR at things class of PRINT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'lesseranglednested 'ar-th-star arg))

(defun ar-slashparen-print-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of PRINT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'lesseranglednested 'ar-th-slashparen arg))

(defun ar-sort-print-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SORT at things class of PRINT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'lesseranglednested 'ar-th-sort arg))

(defun ar-trim-print-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of TRIM at things class of PRINT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'lesseranglednested 'ar-th-trim arg))

(defun ar-trim-left-print-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of PRINT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'lesseranglednested 'ar-th-trim-left arg))

(defun ar-trim-right-print-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of PRINT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'lesseranglednested 'ar-th-trim-right arg))

(defun ar-underscore-print-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of PRINT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'lesseranglednested 'ar-th-underscore arg))

(defun ar-whitespace-print-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of PRINT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'lesseranglednested 'ar-th-whitespace arg))

(defun ar-print-in-buffer-atpt (&optional arg) 
  "Employ actions of  at things class of PRINT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'buffer 'ar-th arg))

(defun ar-greaterangle-print-in-buffer-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of PRINT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'buffer 'ar-th-greaterangle arg))

(defun ar-lesserangle-print-in-buffer-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of PRINT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'buffer 'ar-th-lesserangle arg))

(defun ar-backslash-print-in-buffer-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of PRINT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'buffer 'ar-th-backslash arg))

(defun ar-colon-print-in-buffer-atpt (&optional arg) 
  "Employ actions of COLON at things class of PRINT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'buffer 'ar-th-colon arg))

(defun ar-beg-print-in-buffer-atpt (&optional arg) 
  "Employ actions of BEG at things class of PRINT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'buffer 'ar-th-beg arg))

(defun ar-blok-print-in-buffer-atpt (&optional arg) 
  "Employ actions of BLOK at things class of PRINT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'buffer 'ar-th-blok arg))

(defun ar-bounds-print-in-buffer-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of PRINT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'buffer 'ar-th-bounds arg))

(defun ar-brace-print-in-buffer-atpt (&optional arg) 
  "Employ actions of BRACE at things class of PRINT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'buffer 'ar-th-brace arg))

(defun ar-bracket-print-in-buffer-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of PRINT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'buffer 'ar-th-bracket arg))

(defun ar-commatize-print-in-buffer-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of PRINT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'buffer 'ar-th-commatize arg))

(defun ar-comment-print-in-buffer-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of PRINT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'buffer 'ar-th-comment arg))

(defun ar-dollar-print-in-buffer-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of PRINT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'buffer 'ar-th-dollar arg))

(defun ar-doublebackslash-print-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of PRINT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'buffer 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-print-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of PRINT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'buffer 'ar-th-doublebacktick arg))

(defun ar-doublequote-print-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of PRINT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'buffer 'ar-th-doublequote arg))

(defun ar-doubleslash-print-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of PRINT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'buffer 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-print-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of PRINT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'buffer 'ar-th-doublebackslashparen arg))

(defun ar-end-print-in-buffer-atpt (&optional arg) 
  "Employ actions of END at things class of PRINT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'buffer 'ar-th-end arg))

(defun ar-escape-print-in-buffer-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of PRINT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'buffer 'ar-th-escape arg))

(defun ar-hide-print-in-buffer-atpt (&optional arg) 
  "Employ actions of HIDE at things class of PRINT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'buffer 'ar-th-hide arg))

(defun ar-hide-show-print-in-buffer-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of PRINT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'buffer 'ar-th-hide-show arg))

(defun ar-hyphen-print-in-buffer-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of PRINT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'buffer 'ar-th-hyphen arg))

(defun ar-kill-print-in-buffer-atpt (&optional arg) 
  "Employ actions of KILL at things class of PRINT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'buffer 'ar-th-kill arg))

(defun ar-leftrightsinglequote-print-in-buffer-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of PRINT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'buffer 'ar-th-leftrightsinglequote arg))

(defun ar-length-print-in-buffer-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of PRINT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'buffer 'ar-th-length arg))

(defun ar-parentize-print-in-buffer-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of PRINT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'buffer 'ar-th-parentize arg))

(defun ar-quote-print-in-buffer-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of PRINT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'buffer 'ar-th-quote arg))

(defun ar-separate-print-in-buffer-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of PRINT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'buffer 'ar-th-separate arg))

(defun ar-show-print-in-buffer-atpt (&optional arg) 
  "Employ actions of SHOW at things class of PRINT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'buffer 'ar-th-show arg))

(defun ar-singlequote-print-in-buffer-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of PRINT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'buffer 'ar-th-singlequote arg))

(defun ar-slash-print-in-buffer-atpt (&optional arg) 
  "Employ actions of SLASH at things class of PRINT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'buffer 'ar-th-slash arg))

(defun ar-star-print-in-buffer-atpt (&optional arg) 
  "Employ actions of STAR at things class of PRINT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'buffer 'ar-th-star arg))

(defun ar-slashparen-print-in-buffer-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of PRINT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'buffer 'ar-th-slashparen arg))

(defun ar-sort-print-in-buffer-atpt (&optional arg) 
  "Employ actions of SORT at things class of PRINT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'buffer 'ar-th-sort arg))

(defun ar-trim-print-in-buffer-atpt (&optional arg) 
  "Employ actions of TRIM at things class of PRINT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'buffer 'ar-th-trim arg))

(defun ar-trim-left-print-in-buffer-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of PRINT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'buffer 'ar-th-trim-left arg))

(defun ar-trim-right-print-in-buffer-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of PRINT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'buffer 'ar-th-trim-right arg))

(defun ar-underscore-print-in-buffer-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of PRINT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'buffer 'ar-th-underscore arg))

(defun ar-whitespace-print-in-buffer-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of PRINT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'buffer 'ar-th-whitespace arg))

(defun ar-print-in-comment-atpt (&optional arg) 
  "Employ actions of  at things class of PRINT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'comment 'ar-th arg))

(defun ar-greaterangle-print-in-comment-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of PRINT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'comment 'ar-th-greaterangle arg))

(defun ar-lesserangle-print-in-comment-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of PRINT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'comment 'ar-th-lesserangle arg))

(defun ar-backslash-print-in-comment-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of PRINT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'comment 'ar-th-backslash arg))

(defun ar-colon-print-in-comment-atpt (&optional arg) 
  "Employ actions of COLON at things class of PRINT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'comment 'ar-th-colon arg))

(defun ar-beg-print-in-comment-atpt (&optional arg) 
  "Employ actions of BEG at things class of PRINT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'comment 'ar-th-beg arg))

(defun ar-blok-print-in-comment-atpt (&optional arg) 
  "Employ actions of BLOK at things class of PRINT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'comment 'ar-th-blok arg))

(defun ar-bounds-print-in-comment-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of PRINT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'comment 'ar-th-bounds arg))

(defun ar-brace-print-in-comment-atpt (&optional arg) 
  "Employ actions of BRACE at things class of PRINT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'comment 'ar-th-brace arg))

(defun ar-bracket-print-in-comment-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of PRINT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'comment 'ar-th-bracket arg))

(defun ar-commatize-print-in-comment-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of PRINT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'comment 'ar-th-commatize arg))

(defun ar-comment-print-in-comment-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of PRINT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'comment 'ar-th-comment arg))

(defun ar-dollar-print-in-comment-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of PRINT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'comment 'ar-th-dollar arg))

(defun ar-doublebackslash-print-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of PRINT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'comment 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-print-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of PRINT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'comment 'ar-th-doublebacktick arg))

(defun ar-doublequote-print-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of PRINT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'comment 'ar-th-doublequote arg))

(defun ar-doubleslash-print-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of PRINT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'comment 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-print-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of PRINT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'comment 'ar-th-doublebackslashparen arg))

(defun ar-end-print-in-comment-atpt (&optional arg) 
  "Employ actions of END at things class of PRINT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'comment 'ar-th-end arg))

(defun ar-escape-print-in-comment-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of PRINT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'comment 'ar-th-escape arg))

(defun ar-hide-print-in-comment-atpt (&optional arg) 
  "Employ actions of HIDE at things class of PRINT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'comment 'ar-th-hide arg))

(defun ar-hide-show-print-in-comment-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of PRINT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'comment 'ar-th-hide-show arg))

(defun ar-hyphen-print-in-comment-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of PRINT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'comment 'ar-th-hyphen arg))

(defun ar-kill-print-in-comment-atpt (&optional arg) 
  "Employ actions of KILL at things class of PRINT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'comment 'ar-th-kill arg))

(defun ar-leftrightsinglequote-print-in-comment-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of PRINT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'comment 'ar-th-leftrightsinglequote arg))

(defun ar-length-print-in-comment-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of PRINT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'comment 'ar-th-length arg))

(defun ar-parentize-print-in-comment-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of PRINT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'comment 'ar-th-parentize arg))

(defun ar-quote-print-in-comment-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of PRINT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'comment 'ar-th-quote arg))

(defun ar-separate-print-in-comment-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of PRINT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'comment 'ar-th-separate arg))

(defun ar-show-print-in-comment-atpt (&optional arg) 
  "Employ actions of SHOW at things class of PRINT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'comment 'ar-th-show arg))

(defun ar-singlequote-print-in-comment-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of PRINT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'comment 'ar-th-singlequote arg))

(defun ar-slash-print-in-comment-atpt (&optional arg) 
  "Employ actions of SLASH at things class of PRINT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'comment 'ar-th-slash arg))

(defun ar-star-print-in-comment-atpt (&optional arg) 
  "Employ actions of STAR at things class of PRINT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'comment 'ar-th-star arg))

(defun ar-slashparen-print-in-comment-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of PRINT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'comment 'ar-th-slashparen arg))

(defun ar-sort-print-in-comment-atpt (&optional arg) 
  "Employ actions of SORT at things class of PRINT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'comment 'ar-th-sort arg))

(defun ar-trim-print-in-comment-atpt (&optional arg) 
  "Employ actions of TRIM at things class of PRINT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'comment 'ar-th-trim arg))

(defun ar-trim-left-print-in-comment-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of PRINT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'comment 'ar-th-trim-left arg))

(defun ar-trim-right-print-in-comment-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of PRINT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'comment 'ar-th-trim-right arg))

(defun ar-underscore-print-in-comment-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of PRINT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'comment 'ar-th-underscore arg))

(defun ar-whitespace-print-in-comment-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of PRINT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'comment 'ar-th-whitespace arg))

(defun ar-print-in-csv-atpt (&optional arg) 
  "Employ actions of  at things class of PRINT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'csv 'ar-th arg))

(defun ar-greaterangle-print-in-csv-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of PRINT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'csv 'ar-th-greaterangle arg))

(defun ar-lesserangle-print-in-csv-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of PRINT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'csv 'ar-th-lesserangle arg))

(defun ar-backslash-print-in-csv-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of PRINT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'csv 'ar-th-backslash arg))

(defun ar-colon-print-in-csv-atpt (&optional arg) 
  "Employ actions of COLON at things class of PRINT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'csv 'ar-th-colon arg))

(defun ar-beg-print-in-csv-atpt (&optional arg) 
  "Employ actions of BEG at things class of PRINT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'csv 'ar-th-beg arg))

(defun ar-blok-print-in-csv-atpt (&optional arg) 
  "Employ actions of BLOK at things class of PRINT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'csv 'ar-th-blok arg))

(defun ar-bounds-print-in-csv-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of PRINT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'csv 'ar-th-bounds arg))

(defun ar-brace-print-in-csv-atpt (&optional arg) 
  "Employ actions of BRACE at things class of PRINT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'csv 'ar-th-brace arg))

(defun ar-bracket-print-in-csv-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of PRINT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'csv 'ar-th-bracket arg))

(defun ar-commatize-print-in-csv-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of PRINT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'csv 'ar-th-commatize arg))

(defun ar-comment-print-in-csv-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of PRINT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'csv 'ar-th-comment arg))

(defun ar-dollar-print-in-csv-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of PRINT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'csv 'ar-th-dollar arg))

(defun ar-doublebackslash-print-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of PRINT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'csv 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-print-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of PRINT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'csv 'ar-th-doublebacktick arg))

(defun ar-doublequote-print-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of PRINT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'csv 'ar-th-doublequote arg))

(defun ar-doubleslash-print-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of PRINT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'csv 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-print-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of PRINT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'csv 'ar-th-doublebackslashparen arg))

(defun ar-end-print-in-csv-atpt (&optional arg) 
  "Employ actions of END at things class of PRINT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'csv 'ar-th-end arg))

(defun ar-escape-print-in-csv-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of PRINT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'csv 'ar-th-escape arg))

(defun ar-hide-print-in-csv-atpt (&optional arg) 
  "Employ actions of HIDE at things class of PRINT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'csv 'ar-th-hide arg))

(defun ar-hide-show-print-in-csv-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of PRINT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'csv 'ar-th-hide-show arg))

(defun ar-hyphen-print-in-csv-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of PRINT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'csv 'ar-th-hyphen arg))

(defun ar-kill-print-in-csv-atpt (&optional arg) 
  "Employ actions of KILL at things class of PRINT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'csv 'ar-th-kill arg))

(defun ar-leftrightsinglequote-print-in-csv-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of PRINT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'csv 'ar-th-leftrightsinglequote arg))

(defun ar-length-print-in-csv-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of PRINT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'csv 'ar-th-length arg))

(defun ar-parentize-print-in-csv-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of PRINT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'csv 'ar-th-parentize arg))

(defun ar-quote-print-in-csv-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of PRINT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'csv 'ar-th-quote arg))

(defun ar-separate-print-in-csv-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of PRINT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'csv 'ar-th-separate arg))

(defun ar-show-print-in-csv-atpt (&optional arg) 
  "Employ actions of SHOW at things class of PRINT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'csv 'ar-th-show arg))

(defun ar-singlequote-print-in-csv-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of PRINT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'csv 'ar-th-singlequote arg))

(defun ar-slash-print-in-csv-atpt (&optional arg) 
  "Employ actions of SLASH at things class of PRINT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'csv 'ar-th-slash arg))

(defun ar-star-print-in-csv-atpt (&optional arg) 
  "Employ actions of STAR at things class of PRINT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'csv 'ar-th-star arg))

(defun ar-slashparen-print-in-csv-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of PRINT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'csv 'ar-th-slashparen arg))

(defun ar-sort-print-in-csv-atpt (&optional arg) 
  "Employ actions of SORT at things class of PRINT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'csv 'ar-th-sort arg))

(defun ar-trim-print-in-csv-atpt (&optional arg) 
  "Employ actions of TRIM at things class of PRINT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'csv 'ar-th-trim arg))

(defun ar-trim-left-print-in-csv-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of PRINT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'csv 'ar-th-trim-left arg))

(defun ar-trim-right-print-in-csv-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of PRINT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'csv 'ar-th-trim-right arg))

(defun ar-underscore-print-in-csv-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of PRINT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'csv 'ar-th-underscore arg))

(defun ar-whitespace-print-in-csv-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of PRINT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'csv 'ar-th-whitespace arg))

(defun ar-print-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of  at things class of PRINT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'filenamenondirectory 'ar-th arg))

(defun ar-greaterangle-print-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of PRINT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'filenamenondirectory 'ar-th-greaterangle arg))

(defun ar-lesserangle-print-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of PRINT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'filenamenondirectory 'ar-th-lesserangle arg))

(defun ar-backslash-print-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of PRINT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'filenamenondirectory 'ar-th-backslash arg))

(defun ar-colon-print-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of COLON at things class of PRINT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'filenamenondirectory 'ar-th-colon arg))

(defun ar-beg-print-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BEG at things class of PRINT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'filenamenondirectory 'ar-th-beg arg))

(defun ar-blok-print-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BLOK at things class of PRINT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'filenamenondirectory 'ar-th-blok arg))

(defun ar-bounds-print-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of PRINT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'filenamenondirectory 'ar-th-bounds arg))

(defun ar-brace-print-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BRACE at things class of PRINT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'filenamenondirectory 'ar-th-brace arg))

(defun ar-bracket-print-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of PRINT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'filenamenondirectory 'ar-th-bracket arg))

(defun ar-commatize-print-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of PRINT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'filenamenondirectory 'ar-th-commatize arg))

(defun ar-comment-print-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of PRINT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'filenamenondirectory 'ar-th-comment arg))

(defun ar-dollar-print-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of PRINT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'filenamenondirectory 'ar-th-dollar arg))

(defun ar-doublebackslash-print-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of PRINT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'filenamenondirectory 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-print-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of PRINT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'filenamenondirectory 'ar-th-doublebacktick arg))

(defun ar-doublequote-print-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of PRINT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'filenamenondirectory 'ar-th-doublequote arg))

(defun ar-doubleslash-print-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of PRINT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'filenamenondirectory 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-print-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of PRINT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'filenamenondirectory 'ar-th-doublebackslashparen arg))

(defun ar-end-print-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of END at things class of PRINT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'filenamenondirectory 'ar-th-end arg))

(defun ar-escape-print-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of PRINT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'filenamenondirectory 'ar-th-escape arg))

(defun ar-hide-print-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of HIDE at things class of PRINT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'filenamenondirectory 'ar-th-hide arg))

(defun ar-hide-show-print-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of PRINT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'filenamenondirectory 'ar-th-hide-show arg))

(defun ar-hyphen-print-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of PRINT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'filenamenondirectory 'ar-th-hyphen arg))

(defun ar-kill-print-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of KILL at things class of PRINT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'filenamenondirectory 'ar-th-kill arg))

(defun ar-leftrightsinglequote-print-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of PRINT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'filenamenondirectory 'ar-th-leftrightsinglequote arg))

(defun ar-length-print-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of PRINT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'filenamenondirectory 'ar-th-length arg))

(defun ar-parentize-print-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of PRINT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'filenamenondirectory 'ar-th-parentize arg))

(defun ar-quote-print-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of PRINT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'filenamenondirectory 'ar-th-quote arg))

(defun ar-separate-print-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of PRINT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'filenamenondirectory 'ar-th-separate arg))

(defun ar-show-print-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SHOW at things class of PRINT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'filenamenondirectory 'ar-th-show arg))

(defun ar-singlequote-print-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of PRINT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'filenamenondirectory 'ar-th-singlequote arg))

(defun ar-slash-print-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SLASH at things class of PRINT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'filenamenondirectory 'ar-th-slash arg))

(defun ar-star-print-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of STAR at things class of PRINT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'filenamenondirectory 'ar-th-star arg))

(defun ar-slashparen-print-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of PRINT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'filenamenondirectory 'ar-th-slashparen arg))

(defun ar-sort-print-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SORT at things class of PRINT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'filenamenondirectory 'ar-th-sort arg))

(defun ar-trim-print-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of TRIM at things class of PRINT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'filenamenondirectory 'ar-th-trim arg))

(defun ar-trim-left-print-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of PRINT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'filenamenondirectory 'ar-th-trim-left arg))

(defun ar-trim-right-print-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of PRINT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'filenamenondirectory 'ar-th-trim-right arg))

(defun ar-underscore-print-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of PRINT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'filenamenondirectory 'ar-th-underscore arg))

(defun ar-whitespace-print-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of PRINT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'filenamenondirectory 'ar-th-whitespace arg))

(defun ar-print-in-function-atpt (&optional arg) 
  "Employ actions of  at things class of PRINT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'function 'ar-th arg))

(defun ar-greaterangle-print-in-function-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of PRINT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'function 'ar-th-greaterangle arg))

(defun ar-lesserangle-print-in-function-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of PRINT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'function 'ar-th-lesserangle arg))

(defun ar-backslash-print-in-function-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of PRINT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'function 'ar-th-backslash arg))

(defun ar-colon-print-in-function-atpt (&optional arg) 
  "Employ actions of COLON at things class of PRINT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'function 'ar-th-colon arg))

(defun ar-beg-print-in-function-atpt (&optional arg) 
  "Employ actions of BEG at things class of PRINT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'function 'ar-th-beg arg))

(defun ar-blok-print-in-function-atpt (&optional arg) 
  "Employ actions of BLOK at things class of PRINT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'function 'ar-th-blok arg))

(defun ar-bounds-print-in-function-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of PRINT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'function 'ar-th-bounds arg))

(defun ar-brace-print-in-function-atpt (&optional arg) 
  "Employ actions of BRACE at things class of PRINT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'function 'ar-th-brace arg))

(defun ar-bracket-print-in-function-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of PRINT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'function 'ar-th-bracket arg))

(defun ar-commatize-print-in-function-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of PRINT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'function 'ar-th-commatize arg))

(defun ar-comment-print-in-function-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of PRINT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'function 'ar-th-comment arg))

(defun ar-dollar-print-in-function-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of PRINT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'function 'ar-th-dollar arg))

(defun ar-doublebackslash-print-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of PRINT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'function 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-print-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of PRINT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'function 'ar-th-doublebacktick arg))

(defun ar-doublequote-print-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of PRINT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'function 'ar-th-doublequote arg))

(defun ar-doubleslash-print-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of PRINT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'function 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-print-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of PRINT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'function 'ar-th-doublebackslashparen arg))

(defun ar-end-print-in-function-atpt (&optional arg) 
  "Employ actions of END at things class of PRINT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'function 'ar-th-end arg))

(defun ar-escape-print-in-function-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of PRINT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'function 'ar-th-escape arg))

(defun ar-hide-print-in-function-atpt (&optional arg) 
  "Employ actions of HIDE at things class of PRINT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'function 'ar-th-hide arg))

(defun ar-hide-show-print-in-function-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of PRINT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'function 'ar-th-hide-show arg))

(defun ar-hyphen-print-in-function-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of PRINT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'function 'ar-th-hyphen arg))

(defun ar-kill-print-in-function-atpt (&optional arg) 
  "Employ actions of KILL at things class of PRINT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'function 'ar-th-kill arg))

(defun ar-leftrightsinglequote-print-in-function-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of PRINT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'function 'ar-th-leftrightsinglequote arg))

(defun ar-length-print-in-function-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of PRINT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'function 'ar-th-length arg))

(defun ar-parentize-print-in-function-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of PRINT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'function 'ar-th-parentize arg))

(defun ar-quote-print-in-function-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of PRINT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'function 'ar-th-quote arg))

(defun ar-separate-print-in-function-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of PRINT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'function 'ar-th-separate arg))

(defun ar-show-print-in-function-atpt (&optional arg) 
  "Employ actions of SHOW at things class of PRINT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'function 'ar-th-show arg))

(defun ar-singlequote-print-in-function-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of PRINT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'function 'ar-th-singlequote arg))

(defun ar-slash-print-in-function-atpt (&optional arg) 
  "Employ actions of SLASH at things class of PRINT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'function 'ar-th-slash arg))

(defun ar-star-print-in-function-atpt (&optional arg) 
  "Employ actions of STAR at things class of PRINT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'function 'ar-th-star arg))

(defun ar-slashparen-print-in-function-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of PRINT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'function 'ar-th-slashparen arg))

(defun ar-sort-print-in-function-atpt (&optional arg) 
  "Employ actions of SORT at things class of PRINT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'function 'ar-th-sort arg))

(defun ar-trim-print-in-function-atpt (&optional arg) 
  "Employ actions of TRIM at things class of PRINT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'function 'ar-th-trim arg))

(defun ar-trim-left-print-in-function-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of PRINT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'function 'ar-th-trim-left arg))

(defun ar-trim-right-print-in-function-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of PRINT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'function 'ar-th-trim-right arg))

(defun ar-underscore-print-in-function-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of PRINT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'function 'ar-th-underscore arg))

(defun ar-whitespace-print-in-function-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of PRINT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'function 'ar-th-whitespace arg))

(defun ar-print-in-line-atpt (&optional arg) 
  "Employ actions of  at things class of PRINT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'line 'ar-th arg))

(defun ar-greaterangle-print-in-line-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of PRINT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'line 'ar-th-greaterangle arg))

(defun ar-lesserangle-print-in-line-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of PRINT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'line 'ar-th-lesserangle arg))

(defun ar-backslash-print-in-line-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of PRINT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'line 'ar-th-backslash arg))

(defun ar-colon-print-in-line-atpt (&optional arg) 
  "Employ actions of COLON at things class of PRINT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'line 'ar-th-colon arg))

(defun ar-beg-print-in-line-atpt (&optional arg) 
  "Employ actions of BEG at things class of PRINT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'line 'ar-th-beg arg))

(defun ar-blok-print-in-line-atpt (&optional arg) 
  "Employ actions of BLOK at things class of PRINT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'line 'ar-th-blok arg))

(defun ar-bounds-print-in-line-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of PRINT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'line 'ar-th-bounds arg))

(defun ar-brace-print-in-line-atpt (&optional arg) 
  "Employ actions of BRACE at things class of PRINT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'line 'ar-th-brace arg))

(defun ar-bracket-print-in-line-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of PRINT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'line 'ar-th-bracket arg))

(defun ar-commatize-print-in-line-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of PRINT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'line 'ar-th-commatize arg))

(defun ar-comment-print-in-line-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of PRINT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'line 'ar-th-comment arg))

(defun ar-dollar-print-in-line-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of PRINT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'line 'ar-th-dollar arg))

(defun ar-doublebackslash-print-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of PRINT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'line 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-print-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of PRINT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'line 'ar-th-doublebacktick arg))

(defun ar-doublequote-print-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of PRINT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'line 'ar-th-doublequote arg))

(defun ar-doubleslash-print-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of PRINT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'line 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-print-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of PRINT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'line 'ar-th-doublebackslashparen arg))

(defun ar-end-print-in-line-atpt (&optional arg) 
  "Employ actions of END at things class of PRINT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'line 'ar-th-end arg))

(defun ar-escape-print-in-line-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of PRINT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'line 'ar-th-escape arg))

(defun ar-hide-print-in-line-atpt (&optional arg) 
  "Employ actions of HIDE at things class of PRINT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'line 'ar-th-hide arg))

(defun ar-hide-show-print-in-line-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of PRINT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'line 'ar-th-hide-show arg))

(defun ar-hyphen-print-in-line-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of PRINT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'line 'ar-th-hyphen arg))

(defun ar-kill-print-in-line-atpt (&optional arg) 
  "Employ actions of KILL at things class of PRINT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'line 'ar-th-kill arg))

(defun ar-leftrightsinglequote-print-in-line-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of PRINT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'line 'ar-th-leftrightsinglequote arg))

(defun ar-length-print-in-line-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of PRINT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'line 'ar-th-length arg))

(defun ar-parentize-print-in-line-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of PRINT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'line 'ar-th-parentize arg))

(defun ar-quote-print-in-line-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of PRINT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'line 'ar-th-quote arg))

(defun ar-separate-print-in-line-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of PRINT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'line 'ar-th-separate arg))

(defun ar-show-print-in-line-atpt (&optional arg) 
  "Employ actions of SHOW at things class of PRINT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'line 'ar-th-show arg))

(defun ar-singlequote-print-in-line-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of PRINT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'line 'ar-th-singlequote arg))

(defun ar-slash-print-in-line-atpt (&optional arg) 
  "Employ actions of SLASH at things class of PRINT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'line 'ar-th-slash arg))

(defun ar-star-print-in-line-atpt (&optional arg) 
  "Employ actions of STAR at things class of PRINT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'line 'ar-th-star arg))

(defun ar-slashparen-print-in-line-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of PRINT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'line 'ar-th-slashparen arg))

(defun ar-sort-print-in-line-atpt (&optional arg) 
  "Employ actions of SORT at things class of PRINT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'line 'ar-th-sort arg))

(defun ar-trim-print-in-line-atpt (&optional arg) 
  "Employ actions of TRIM at things class of PRINT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'line 'ar-th-trim arg))

(defun ar-trim-left-print-in-line-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of PRINT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'line 'ar-th-trim-left arg))

(defun ar-trim-right-print-in-line-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of PRINT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'line 'ar-th-trim-right arg))

(defun ar-underscore-print-in-line-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of PRINT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'line 'ar-th-underscore arg))

(defun ar-whitespace-print-in-line-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of PRINT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'line 'ar-th-whitespace arg))

(defun ar-print-in-list-atpt (&optional arg) 
  "Employ actions of  at things class of PRINT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'list 'ar-th arg))

(defun ar-greaterangle-print-in-list-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of PRINT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'list 'ar-th-greaterangle arg))

(defun ar-lesserangle-print-in-list-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of PRINT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'list 'ar-th-lesserangle arg))

(defun ar-backslash-print-in-list-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of PRINT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'list 'ar-th-backslash arg))

(defun ar-colon-print-in-list-atpt (&optional arg) 
  "Employ actions of COLON at things class of PRINT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'list 'ar-th-colon arg))

(defun ar-beg-print-in-list-atpt (&optional arg) 
  "Employ actions of BEG at things class of PRINT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'list 'ar-th-beg arg))

(defun ar-blok-print-in-list-atpt (&optional arg) 
  "Employ actions of BLOK at things class of PRINT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'list 'ar-th-blok arg))

(defun ar-bounds-print-in-list-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of PRINT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'list 'ar-th-bounds arg))

(defun ar-brace-print-in-list-atpt (&optional arg) 
  "Employ actions of BRACE at things class of PRINT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'list 'ar-th-brace arg))

(defun ar-bracket-print-in-list-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of PRINT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'list 'ar-th-bracket arg))

(defun ar-commatize-print-in-list-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of PRINT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'list 'ar-th-commatize arg))

(defun ar-comment-print-in-list-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of PRINT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'list 'ar-th-comment arg))

(defun ar-dollar-print-in-list-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of PRINT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'list 'ar-th-dollar arg))

(defun ar-doublebackslash-print-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of PRINT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'list 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-print-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of PRINT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'list 'ar-th-doublebacktick arg))

(defun ar-doublequote-print-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of PRINT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'list 'ar-th-doublequote arg))

(defun ar-doubleslash-print-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of PRINT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'list 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-print-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of PRINT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'list 'ar-th-doublebackslashparen arg))

(defun ar-end-print-in-list-atpt (&optional arg) 
  "Employ actions of END at things class of PRINT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'list 'ar-th-end arg))

(defun ar-escape-print-in-list-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of PRINT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'list 'ar-th-escape arg))

(defun ar-hide-print-in-list-atpt (&optional arg) 
  "Employ actions of HIDE at things class of PRINT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'list 'ar-th-hide arg))

(defun ar-hide-show-print-in-list-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of PRINT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'list 'ar-th-hide-show arg))

(defun ar-hyphen-print-in-list-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of PRINT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'list 'ar-th-hyphen arg))

(defun ar-kill-print-in-list-atpt (&optional arg) 
  "Employ actions of KILL at things class of PRINT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'list 'ar-th-kill arg))

(defun ar-leftrightsinglequote-print-in-list-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of PRINT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'list 'ar-th-leftrightsinglequote arg))

(defun ar-length-print-in-list-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of PRINT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'list 'ar-th-length arg))

(defun ar-parentize-print-in-list-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of PRINT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'list 'ar-th-parentize arg))

(defun ar-quote-print-in-list-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of PRINT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'list 'ar-th-quote arg))

(defun ar-separate-print-in-list-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of PRINT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'list 'ar-th-separate arg))

(defun ar-show-print-in-list-atpt (&optional arg) 
  "Employ actions of SHOW at things class of PRINT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'list 'ar-th-show arg))

(defun ar-singlequote-print-in-list-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of PRINT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'list 'ar-th-singlequote arg))

(defun ar-slash-print-in-list-atpt (&optional arg) 
  "Employ actions of SLASH at things class of PRINT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'list 'ar-th-slash arg))

(defun ar-star-print-in-list-atpt (&optional arg) 
  "Employ actions of STAR at things class of PRINT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'list 'ar-th-star arg))

(defun ar-slashparen-print-in-list-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of PRINT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'list 'ar-th-slashparen arg))

(defun ar-sort-print-in-list-atpt (&optional arg) 
  "Employ actions of SORT at things class of PRINT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'list 'ar-th-sort arg))

(defun ar-trim-print-in-list-atpt (&optional arg) 
  "Employ actions of TRIM at things class of PRINT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'list 'ar-th-trim arg))

(defun ar-trim-left-print-in-list-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of PRINT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'list 'ar-th-trim-left arg))

(defun ar-trim-right-print-in-list-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of PRINT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'list 'ar-th-trim-right arg))

(defun ar-underscore-print-in-list-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of PRINT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'list 'ar-th-underscore arg))

(defun ar-whitespace-print-in-list-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of PRINT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'list 'ar-th-whitespace arg))

(defun ar-print-in-name-atpt (&optional arg) 
  "Employ actions of  at things class of PRINT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'name 'ar-th arg))

(defun ar-greaterangle-print-in-name-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of PRINT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'name 'ar-th-greaterangle arg))

(defun ar-lesserangle-print-in-name-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of PRINT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'name 'ar-th-lesserangle arg))

(defun ar-backslash-print-in-name-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of PRINT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'name 'ar-th-backslash arg))

(defun ar-colon-print-in-name-atpt (&optional arg) 
  "Employ actions of COLON at things class of PRINT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'name 'ar-th-colon arg))

(defun ar-beg-print-in-name-atpt (&optional arg) 
  "Employ actions of BEG at things class of PRINT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'name 'ar-th-beg arg))

(defun ar-blok-print-in-name-atpt (&optional arg) 
  "Employ actions of BLOK at things class of PRINT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'name 'ar-th-blok arg))

(defun ar-bounds-print-in-name-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of PRINT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'name 'ar-th-bounds arg))

(defun ar-brace-print-in-name-atpt (&optional arg) 
  "Employ actions of BRACE at things class of PRINT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'name 'ar-th-brace arg))

(defun ar-bracket-print-in-name-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of PRINT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'name 'ar-th-bracket arg))

(defun ar-commatize-print-in-name-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of PRINT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'name 'ar-th-commatize arg))

(defun ar-comment-print-in-name-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of PRINT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'name 'ar-th-comment arg))

(defun ar-dollar-print-in-name-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of PRINT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'name 'ar-th-dollar arg))

(defun ar-doublebackslash-print-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of PRINT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'name 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-print-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of PRINT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'name 'ar-th-doublebacktick arg))

(defun ar-doublequote-print-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of PRINT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'name 'ar-th-doublequote arg))

(defun ar-doubleslash-print-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of PRINT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'name 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-print-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of PRINT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'name 'ar-th-doublebackslashparen arg))

(defun ar-end-print-in-name-atpt (&optional arg) 
  "Employ actions of END at things class of PRINT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'name 'ar-th-end arg))

(defun ar-escape-print-in-name-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of PRINT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'name 'ar-th-escape arg))

(defun ar-hide-print-in-name-atpt (&optional arg) 
  "Employ actions of HIDE at things class of PRINT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'name 'ar-th-hide arg))

(defun ar-hide-show-print-in-name-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of PRINT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'name 'ar-th-hide-show arg))

(defun ar-hyphen-print-in-name-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of PRINT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'name 'ar-th-hyphen arg))

(defun ar-kill-print-in-name-atpt (&optional arg) 
  "Employ actions of KILL at things class of PRINT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'name 'ar-th-kill arg))

(defun ar-leftrightsinglequote-print-in-name-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of PRINT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'name 'ar-th-leftrightsinglequote arg))

(defun ar-length-print-in-name-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of PRINT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'name 'ar-th-length arg))

(defun ar-parentize-print-in-name-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of PRINT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'name 'ar-th-parentize arg))

(defun ar-quote-print-in-name-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of PRINT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'name 'ar-th-quote arg))

(defun ar-separate-print-in-name-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of PRINT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'name 'ar-th-separate arg))

(defun ar-show-print-in-name-atpt (&optional arg) 
  "Employ actions of SHOW at things class of PRINT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'name 'ar-th-show arg))

(defun ar-singlequote-print-in-name-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of PRINT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'name 'ar-th-singlequote arg))

(defun ar-slash-print-in-name-atpt (&optional arg) 
  "Employ actions of SLASH at things class of PRINT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'name 'ar-th-slash arg))

(defun ar-star-print-in-name-atpt (&optional arg) 
  "Employ actions of STAR at things class of PRINT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'name 'ar-th-star arg))

(defun ar-slashparen-print-in-name-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of PRINT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'name 'ar-th-slashparen arg))

(defun ar-sort-print-in-name-atpt (&optional arg) 
  "Employ actions of SORT at things class of PRINT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'name 'ar-th-sort arg))

(defun ar-trim-print-in-name-atpt (&optional arg) 
  "Employ actions of TRIM at things class of PRINT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'name 'ar-th-trim arg))

(defun ar-trim-left-print-in-name-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of PRINT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'name 'ar-th-trim-left arg))

(defun ar-trim-right-print-in-name-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of PRINT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'name 'ar-th-trim-right arg))

(defun ar-underscore-print-in-name-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of PRINT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'name 'ar-th-underscore arg))

(defun ar-whitespace-print-in-name-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of PRINT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'name 'ar-th-whitespace arg))

(defun ar-print-in-page-atpt (&optional arg) 
  "Employ actions of  at things class of PRINT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'page 'ar-th arg))

(defun ar-greaterangle-print-in-page-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of PRINT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'page 'ar-th-greaterangle arg))

(defun ar-lesserangle-print-in-page-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of PRINT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'page 'ar-th-lesserangle arg))

(defun ar-backslash-print-in-page-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of PRINT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'page 'ar-th-backslash arg))

(defun ar-colon-print-in-page-atpt (&optional arg) 
  "Employ actions of COLON at things class of PRINT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'page 'ar-th-colon arg))

(defun ar-beg-print-in-page-atpt (&optional arg) 
  "Employ actions of BEG at things class of PRINT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'page 'ar-th-beg arg))

(defun ar-blok-print-in-page-atpt (&optional arg) 
  "Employ actions of BLOK at things class of PRINT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'page 'ar-th-blok arg))

(defun ar-bounds-print-in-page-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of PRINT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'page 'ar-th-bounds arg))

(defun ar-brace-print-in-page-atpt (&optional arg) 
  "Employ actions of BRACE at things class of PRINT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'page 'ar-th-brace arg))

(defun ar-bracket-print-in-page-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of PRINT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'page 'ar-th-bracket arg))

(defun ar-commatize-print-in-page-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of PRINT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'page 'ar-th-commatize arg))

(defun ar-comment-print-in-page-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of PRINT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'page 'ar-th-comment arg))

(defun ar-dollar-print-in-page-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of PRINT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'page 'ar-th-dollar arg))

(defun ar-doublebackslash-print-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of PRINT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'page 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-print-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of PRINT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'page 'ar-th-doublebacktick arg))

(defun ar-doublequote-print-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of PRINT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'page 'ar-th-doublequote arg))

(defun ar-doubleslash-print-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of PRINT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'page 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-print-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of PRINT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'page 'ar-th-doublebackslashparen arg))

(defun ar-end-print-in-page-atpt (&optional arg) 
  "Employ actions of END at things class of PRINT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'page 'ar-th-end arg))

(defun ar-escape-print-in-page-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of PRINT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'page 'ar-th-escape arg))

(defun ar-hide-print-in-page-atpt (&optional arg) 
  "Employ actions of HIDE at things class of PRINT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'page 'ar-th-hide arg))

(defun ar-hide-show-print-in-page-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of PRINT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'page 'ar-th-hide-show arg))

(defun ar-hyphen-print-in-page-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of PRINT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'page 'ar-th-hyphen arg))

(defun ar-kill-print-in-page-atpt (&optional arg) 
  "Employ actions of KILL at things class of PRINT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'page 'ar-th-kill arg))

(defun ar-leftrightsinglequote-print-in-page-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of PRINT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'page 'ar-th-leftrightsinglequote arg))

(defun ar-length-print-in-page-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of PRINT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'page 'ar-th-length arg))

(defun ar-parentize-print-in-page-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of PRINT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'page 'ar-th-parentize arg))

(defun ar-quote-print-in-page-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of PRINT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'page 'ar-th-quote arg))

(defun ar-separate-print-in-page-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of PRINT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'page 'ar-th-separate arg))

(defun ar-show-print-in-page-atpt (&optional arg) 
  "Employ actions of SHOW at things class of PRINT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'page 'ar-th-show arg))

(defun ar-singlequote-print-in-page-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of PRINT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'page 'ar-th-singlequote arg))

(defun ar-slash-print-in-page-atpt (&optional arg) 
  "Employ actions of SLASH at things class of PRINT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'page 'ar-th-slash arg))

(defun ar-star-print-in-page-atpt (&optional arg) 
  "Employ actions of STAR at things class of PRINT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'page 'ar-th-star arg))

(defun ar-slashparen-print-in-page-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of PRINT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'page 'ar-th-slashparen arg))

(defun ar-sort-print-in-page-atpt (&optional arg) 
  "Employ actions of SORT at things class of PRINT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'page 'ar-th-sort arg))

(defun ar-trim-print-in-page-atpt (&optional arg) 
  "Employ actions of TRIM at things class of PRINT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'page 'ar-th-trim arg))

(defun ar-trim-left-print-in-page-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of PRINT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'page 'ar-th-trim-left arg))

(defun ar-trim-right-print-in-page-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of PRINT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'page 'ar-th-trim-right arg))

(defun ar-underscore-print-in-page-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of PRINT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'page 'ar-th-underscore arg))

(defun ar-whitespace-print-in-page-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of PRINT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'page 'ar-th-whitespace arg))

(defun ar-print-in-paragraph-atpt (&optional arg) 
  "Employ actions of  at things class of PRINT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'paragraph 'ar-th arg))

(defun ar-greaterangle-print-in-paragraph-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of PRINT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'paragraph 'ar-th-greaterangle arg))

(defun ar-lesserangle-print-in-paragraph-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of PRINT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'paragraph 'ar-th-lesserangle arg))

(defun ar-backslash-print-in-paragraph-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of PRINT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'paragraph 'ar-th-backslash arg))

(defun ar-colon-print-in-paragraph-atpt (&optional arg) 
  "Employ actions of COLON at things class of PRINT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'paragraph 'ar-th-colon arg))

(defun ar-beg-print-in-paragraph-atpt (&optional arg) 
  "Employ actions of BEG at things class of PRINT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'paragraph 'ar-th-beg arg))

(defun ar-blok-print-in-paragraph-atpt (&optional arg) 
  "Employ actions of BLOK at things class of PRINT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'paragraph 'ar-th-blok arg))

(defun ar-bounds-print-in-paragraph-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of PRINT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'paragraph 'ar-th-bounds arg))

(defun ar-brace-print-in-paragraph-atpt (&optional arg) 
  "Employ actions of BRACE at things class of PRINT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'paragraph 'ar-th-brace arg))

(defun ar-bracket-print-in-paragraph-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of PRINT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'paragraph 'ar-th-bracket arg))

(defun ar-commatize-print-in-paragraph-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of PRINT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'paragraph 'ar-th-commatize arg))

(defun ar-comment-print-in-paragraph-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of PRINT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'paragraph 'ar-th-comment arg))

(defun ar-dollar-print-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of PRINT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'paragraph 'ar-th-dollar arg))

(defun ar-doublebackslash-print-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of PRINT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'paragraph 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-print-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of PRINT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'paragraph 'ar-th-doublebacktick arg))

(defun ar-doublequote-print-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of PRINT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'paragraph 'ar-th-doublequote arg))

(defun ar-doubleslash-print-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of PRINT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'paragraph 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-print-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of PRINT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'paragraph 'ar-th-doublebackslashparen arg))

(defun ar-end-print-in-paragraph-atpt (&optional arg) 
  "Employ actions of END at things class of PRINT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'paragraph 'ar-th-end arg))

(defun ar-escape-print-in-paragraph-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of PRINT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'paragraph 'ar-th-escape arg))

(defun ar-hide-print-in-paragraph-atpt (&optional arg) 
  "Employ actions of HIDE at things class of PRINT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'paragraph 'ar-th-hide arg))

(defun ar-hide-show-print-in-paragraph-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of PRINT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'paragraph 'ar-th-hide-show arg))

(defun ar-hyphen-print-in-paragraph-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of PRINT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'paragraph 'ar-th-hyphen arg))

(defun ar-kill-print-in-paragraph-atpt (&optional arg) 
  "Employ actions of KILL at things class of PRINT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'paragraph 'ar-th-kill arg))

(defun ar-leftrightsinglequote-print-in-paragraph-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of PRINT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'paragraph 'ar-th-leftrightsinglequote arg))

(defun ar-length-print-in-paragraph-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of PRINT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'paragraph 'ar-th-length arg))

(defun ar-parentize-print-in-paragraph-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of PRINT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'paragraph 'ar-th-parentize arg))

(defun ar-quote-print-in-paragraph-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of PRINT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'paragraph 'ar-th-quote arg))

(defun ar-separate-print-in-paragraph-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of PRINT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'paragraph 'ar-th-separate arg))

(defun ar-show-print-in-paragraph-atpt (&optional arg) 
  "Employ actions of SHOW at things class of PRINT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'paragraph 'ar-th-show arg))

(defun ar-singlequote-print-in-paragraph-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of PRINT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'paragraph 'ar-th-singlequote arg))

(defun ar-slash-print-in-paragraph-atpt (&optional arg) 
  "Employ actions of SLASH at things class of PRINT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'paragraph 'ar-th-slash arg))

(defun ar-star-print-in-paragraph-atpt (&optional arg) 
  "Employ actions of STAR at things class of PRINT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'paragraph 'ar-th-star arg))

(defun ar-slashparen-print-in-paragraph-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of PRINT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'paragraph 'ar-th-slashparen arg))

(defun ar-sort-print-in-paragraph-atpt (&optional arg) 
  "Employ actions of SORT at things class of PRINT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'paragraph 'ar-th-sort arg))

(defun ar-trim-print-in-paragraph-atpt (&optional arg) 
  "Employ actions of TRIM at things class of PRINT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'paragraph 'ar-th-trim arg))

(defun ar-trim-left-print-in-paragraph-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of PRINT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'paragraph 'ar-th-trim-left arg))

(defun ar-trim-right-print-in-paragraph-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of PRINT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'paragraph 'ar-th-trim-right arg))

(defun ar-underscore-print-in-paragraph-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of PRINT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'paragraph 'ar-th-underscore arg))

(defun ar-whitespace-print-in-paragraph-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of PRINT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'paragraph 'ar-th-whitespace arg))

(defun ar-print-in-region-atpt (&optional arg) 
  "Employ actions of  at things class of PRINT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'region 'ar-th arg))

(defun ar-greaterangle-print-in-region-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of PRINT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'region 'ar-th-greaterangle arg))

(defun ar-lesserangle-print-in-region-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of PRINT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'region 'ar-th-lesserangle arg))

(defun ar-backslash-print-in-region-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of PRINT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'region 'ar-th-backslash arg))

(defun ar-colon-print-in-region-atpt (&optional arg) 
  "Employ actions of COLON at things class of PRINT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'region 'ar-th-colon arg))

(defun ar-beg-print-in-region-atpt (&optional arg) 
  "Employ actions of BEG at things class of PRINT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'region 'ar-th-beg arg))

(defun ar-blok-print-in-region-atpt (&optional arg) 
  "Employ actions of BLOK at things class of PRINT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'region 'ar-th-blok arg))

(defun ar-bounds-print-in-region-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of PRINT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'region 'ar-th-bounds arg))

(defun ar-brace-print-in-region-atpt (&optional arg) 
  "Employ actions of BRACE at things class of PRINT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'region 'ar-th-brace arg))

(defun ar-bracket-print-in-region-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of PRINT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'region 'ar-th-bracket arg))

(defun ar-commatize-print-in-region-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of PRINT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'region 'ar-th-commatize arg))

(defun ar-comment-print-in-region-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of PRINT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'region 'ar-th-comment arg))

(defun ar-dollar-print-in-region-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of PRINT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'region 'ar-th-dollar arg))

(defun ar-doublebackslash-print-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of PRINT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'region 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-print-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of PRINT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'region 'ar-th-doublebacktick arg))

(defun ar-doublequote-print-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of PRINT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'region 'ar-th-doublequote arg))

(defun ar-doubleslash-print-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of PRINT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'region 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-print-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of PRINT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'region 'ar-th-doublebackslashparen arg))

(defun ar-end-print-in-region-atpt (&optional arg) 
  "Employ actions of END at things class of PRINT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'region 'ar-th-end arg))

(defun ar-escape-print-in-region-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of PRINT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'region 'ar-th-escape arg))

(defun ar-hide-print-in-region-atpt (&optional arg) 
  "Employ actions of HIDE at things class of PRINT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'region 'ar-th-hide arg))

(defun ar-hide-show-print-in-region-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of PRINT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'region 'ar-th-hide-show arg))

(defun ar-hyphen-print-in-region-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of PRINT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'region 'ar-th-hyphen arg))

(defun ar-kill-print-in-region-atpt (&optional arg) 
  "Employ actions of KILL at things class of PRINT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'region 'ar-th-kill arg))

(defun ar-leftrightsinglequote-print-in-region-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of PRINT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'region 'ar-th-leftrightsinglequote arg))

(defun ar-length-print-in-region-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of PRINT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'region 'ar-th-length arg))

(defun ar-parentize-print-in-region-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of PRINT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'region 'ar-th-parentize arg))

(defun ar-quote-print-in-region-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of PRINT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'region 'ar-th-quote arg))

(defun ar-separate-print-in-region-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of PRINT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'region 'ar-th-separate arg))

(defun ar-show-print-in-region-atpt (&optional arg) 
  "Employ actions of SHOW at things class of PRINT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'region 'ar-th-show arg))

(defun ar-singlequote-print-in-region-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of PRINT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'region 'ar-th-singlequote arg))

(defun ar-slash-print-in-region-atpt (&optional arg) 
  "Employ actions of SLASH at things class of PRINT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'region 'ar-th-slash arg))

(defun ar-star-print-in-region-atpt (&optional arg) 
  "Employ actions of STAR at things class of PRINT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'region 'ar-th-star arg))

(defun ar-slashparen-print-in-region-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of PRINT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'region 'ar-th-slashparen arg))

(defun ar-sort-print-in-region-atpt (&optional arg) 
  "Employ actions of SORT at things class of PRINT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'region 'ar-th-sort arg))

(defun ar-trim-print-in-region-atpt (&optional arg) 
  "Employ actions of TRIM at things class of PRINT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'region 'ar-th-trim arg))

(defun ar-trim-left-print-in-region-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of PRINT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'region 'ar-th-trim-left arg))

(defun ar-trim-right-print-in-region-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of PRINT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'region 'ar-th-trim-right arg))

(defun ar-underscore-print-in-region-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of PRINT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'region 'ar-th-underscore arg))

(defun ar-whitespace-print-in-region-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of PRINT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'region 'ar-th-whitespace arg))

(defun ar-print-in-sentence-atpt (&optional arg) 
  "Employ actions of  at things class of PRINT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sentence 'ar-th arg))

(defun ar-greaterangle-print-in-sentence-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of PRINT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sentence 'ar-th-greaterangle arg))

(defun ar-lesserangle-print-in-sentence-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of PRINT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sentence 'ar-th-lesserangle arg))

(defun ar-backslash-print-in-sentence-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of PRINT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sentence 'ar-th-backslash arg))

(defun ar-colon-print-in-sentence-atpt (&optional arg) 
  "Employ actions of COLON at things class of PRINT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sentence 'ar-th-colon arg))

(defun ar-beg-print-in-sentence-atpt (&optional arg) 
  "Employ actions of BEG at things class of PRINT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sentence 'ar-th-beg arg))

(defun ar-blok-print-in-sentence-atpt (&optional arg) 
  "Employ actions of BLOK at things class of PRINT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sentence 'ar-th-blok arg))

(defun ar-bounds-print-in-sentence-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of PRINT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sentence 'ar-th-bounds arg))

(defun ar-brace-print-in-sentence-atpt (&optional arg) 
  "Employ actions of BRACE at things class of PRINT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sentence 'ar-th-brace arg))

(defun ar-bracket-print-in-sentence-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of PRINT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sentence 'ar-th-bracket arg))

(defun ar-commatize-print-in-sentence-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of PRINT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sentence 'ar-th-commatize arg))

(defun ar-comment-print-in-sentence-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of PRINT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sentence 'ar-th-comment arg))

(defun ar-dollar-print-in-sentence-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of PRINT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sentence 'ar-th-dollar arg))

(defun ar-doublebackslash-print-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of PRINT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sentence 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-print-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of PRINT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sentence 'ar-th-doublebacktick arg))

(defun ar-doublequote-print-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of PRINT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sentence 'ar-th-doublequote arg))

(defun ar-doubleslash-print-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of PRINT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sentence 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-print-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of PRINT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sentence 'ar-th-doublebackslashparen arg))

(defun ar-end-print-in-sentence-atpt (&optional arg) 
  "Employ actions of END at things class of PRINT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sentence 'ar-th-end arg))

(defun ar-escape-print-in-sentence-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of PRINT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sentence 'ar-th-escape arg))

(defun ar-hide-print-in-sentence-atpt (&optional arg) 
  "Employ actions of HIDE at things class of PRINT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sentence 'ar-th-hide arg))

(defun ar-hide-show-print-in-sentence-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of PRINT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sentence 'ar-th-hide-show arg))

(defun ar-hyphen-print-in-sentence-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of PRINT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sentence 'ar-th-hyphen arg))

(defun ar-kill-print-in-sentence-atpt (&optional arg) 
  "Employ actions of KILL at things class of PRINT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sentence 'ar-th-kill arg))

(defun ar-leftrightsinglequote-print-in-sentence-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of PRINT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sentence 'ar-th-leftrightsinglequote arg))

(defun ar-length-print-in-sentence-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of PRINT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sentence 'ar-th-length arg))

(defun ar-parentize-print-in-sentence-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of PRINT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sentence 'ar-th-parentize arg))

(defun ar-quote-print-in-sentence-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of PRINT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sentence 'ar-th-quote arg))

(defun ar-separate-print-in-sentence-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of PRINT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sentence 'ar-th-separate arg))

(defun ar-show-print-in-sentence-atpt (&optional arg) 
  "Employ actions of SHOW at things class of PRINT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sentence 'ar-th-show arg))

(defun ar-singlequote-print-in-sentence-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of PRINT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sentence 'ar-th-singlequote arg))

(defun ar-slash-print-in-sentence-atpt (&optional arg) 
  "Employ actions of SLASH at things class of PRINT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sentence 'ar-th-slash arg))

(defun ar-star-print-in-sentence-atpt (&optional arg) 
  "Employ actions of STAR at things class of PRINT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sentence 'ar-th-star arg))

(defun ar-slashparen-print-in-sentence-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of PRINT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sentence 'ar-th-slashparen arg))

(defun ar-sort-print-in-sentence-atpt (&optional arg) 
  "Employ actions of SORT at things class of PRINT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sentence 'ar-th-sort arg))

(defun ar-trim-print-in-sentence-atpt (&optional arg) 
  "Employ actions of TRIM at things class of PRINT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sentence 'ar-th-trim arg))

(defun ar-trim-left-print-in-sentence-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of PRINT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sentence 'ar-th-trim-left arg))

(defun ar-trim-right-print-in-sentence-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of PRINT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sentence 'ar-th-trim-right arg))

(defun ar-underscore-print-in-sentence-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of PRINT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sentence 'ar-th-underscore arg))

(defun ar-whitespace-print-in-sentence-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of PRINT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sentence 'ar-th-whitespace arg))

(defun ar-print-in-sexp-atpt (&optional arg) 
  "Employ actions of  at things class of PRINT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sexp 'ar-th arg))

(defun ar-greaterangle-print-in-sexp-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of PRINT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sexp 'ar-th-greaterangle arg))

(defun ar-lesserangle-print-in-sexp-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of PRINT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sexp 'ar-th-lesserangle arg))

(defun ar-backslash-print-in-sexp-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of PRINT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sexp 'ar-th-backslash arg))

(defun ar-colon-print-in-sexp-atpt (&optional arg) 
  "Employ actions of COLON at things class of PRINT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sexp 'ar-th-colon arg))

(defun ar-beg-print-in-sexp-atpt (&optional arg) 
  "Employ actions of BEG at things class of PRINT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sexp 'ar-th-beg arg))

(defun ar-blok-print-in-sexp-atpt (&optional arg) 
  "Employ actions of BLOK at things class of PRINT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sexp 'ar-th-blok arg))

(defun ar-bounds-print-in-sexp-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of PRINT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sexp 'ar-th-bounds arg))

(defun ar-brace-print-in-sexp-atpt (&optional arg) 
  "Employ actions of BRACE at things class of PRINT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sexp 'ar-th-brace arg))

(defun ar-bracket-print-in-sexp-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of PRINT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sexp 'ar-th-bracket arg))

(defun ar-commatize-print-in-sexp-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of PRINT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sexp 'ar-th-commatize arg))

(defun ar-comment-print-in-sexp-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of PRINT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sexp 'ar-th-comment arg))

(defun ar-dollar-print-in-sexp-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of PRINT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sexp 'ar-th-dollar arg))

(defun ar-doublebackslash-print-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of PRINT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sexp 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-print-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of PRINT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sexp 'ar-th-doublebacktick arg))

(defun ar-doublequote-print-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of PRINT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sexp 'ar-th-doublequote arg))

(defun ar-doubleslash-print-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of PRINT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sexp 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-print-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of PRINT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sexp 'ar-th-doublebackslashparen arg))

(defun ar-end-print-in-sexp-atpt (&optional arg) 
  "Employ actions of END at things class of PRINT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sexp 'ar-th-end arg))

(defun ar-escape-print-in-sexp-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of PRINT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sexp 'ar-th-escape arg))

(defun ar-hide-print-in-sexp-atpt (&optional arg) 
  "Employ actions of HIDE at things class of PRINT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sexp 'ar-th-hide arg))

(defun ar-hide-show-print-in-sexp-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of PRINT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sexp 'ar-th-hide-show arg))

(defun ar-hyphen-print-in-sexp-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of PRINT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sexp 'ar-th-hyphen arg))

(defun ar-kill-print-in-sexp-atpt (&optional arg) 
  "Employ actions of KILL at things class of PRINT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sexp 'ar-th-kill arg))

(defun ar-leftrightsinglequote-print-in-sexp-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of PRINT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sexp 'ar-th-leftrightsinglequote arg))

(defun ar-length-print-in-sexp-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of PRINT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sexp 'ar-th-length arg))

(defun ar-parentize-print-in-sexp-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of PRINT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sexp 'ar-th-parentize arg))

(defun ar-quote-print-in-sexp-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of PRINT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sexp 'ar-th-quote arg))

(defun ar-separate-print-in-sexp-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of PRINT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sexp 'ar-th-separate arg))

(defun ar-show-print-in-sexp-atpt (&optional arg) 
  "Employ actions of SHOW at things class of PRINT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sexp 'ar-th-show arg))

(defun ar-singlequote-print-in-sexp-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of PRINT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sexp 'ar-th-singlequote arg))

(defun ar-slash-print-in-sexp-atpt (&optional arg) 
  "Employ actions of SLASH at things class of PRINT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sexp 'ar-th-slash arg))

(defun ar-star-print-in-sexp-atpt (&optional arg) 
  "Employ actions of STAR at things class of PRINT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sexp 'ar-th-star arg))

(defun ar-slashparen-print-in-sexp-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of PRINT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sexp 'ar-th-slashparen arg))

(defun ar-sort-print-in-sexp-atpt (&optional arg) 
  "Employ actions of SORT at things class of PRINT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sexp 'ar-th-sort arg))

(defun ar-trim-print-in-sexp-atpt (&optional arg) 
  "Employ actions of TRIM at things class of PRINT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sexp 'ar-th-trim arg))

(defun ar-trim-left-print-in-sexp-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of PRINT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sexp 'ar-th-trim-left arg))

(defun ar-trim-right-print-in-sexp-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of PRINT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sexp 'ar-th-trim-right arg))

(defun ar-underscore-print-in-sexp-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of PRINT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sexp 'ar-th-underscore arg))

(defun ar-whitespace-print-in-sexp-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of PRINT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'sexp 'ar-th-whitespace arg))

(defun ar-print-in-shstruct-atpt (&optional arg) 
  "Employ actions of  at things class of PRINT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'shstruct 'ar-th arg))

(defun ar-greaterangle-print-in-shstruct-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of PRINT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'shstruct 'ar-th-greaterangle arg))

(defun ar-lesserangle-print-in-shstruct-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of PRINT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'shstruct 'ar-th-lesserangle arg))

(defun ar-backslash-print-in-shstruct-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of PRINT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'shstruct 'ar-th-backslash arg))

(defun ar-colon-print-in-shstruct-atpt (&optional arg) 
  "Employ actions of COLON at things class of PRINT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'shstruct 'ar-th-colon arg))

(defun ar-beg-print-in-shstruct-atpt (&optional arg) 
  "Employ actions of BEG at things class of PRINT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'shstruct 'ar-th-beg arg))

(defun ar-blok-print-in-shstruct-atpt (&optional arg) 
  "Employ actions of BLOK at things class of PRINT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'shstruct 'ar-th-blok arg))

(defun ar-bounds-print-in-shstruct-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of PRINT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'shstruct 'ar-th-bounds arg))

(defun ar-brace-print-in-shstruct-atpt (&optional arg) 
  "Employ actions of BRACE at things class of PRINT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'shstruct 'ar-th-brace arg))

(defun ar-bracket-print-in-shstruct-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of PRINT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'shstruct 'ar-th-bracket arg))

(defun ar-commatize-print-in-shstruct-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of PRINT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'shstruct 'ar-th-commatize arg))

(defun ar-comment-print-in-shstruct-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of PRINT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'shstruct 'ar-th-comment arg))

(defun ar-dollar-print-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of PRINT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'shstruct 'ar-th-dollar arg))

(defun ar-doublebackslash-print-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of PRINT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'shstruct 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-print-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of PRINT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'shstruct 'ar-th-doublebacktick arg))

(defun ar-doublequote-print-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of PRINT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'shstruct 'ar-th-doublequote arg))

(defun ar-doubleslash-print-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of PRINT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'shstruct 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-print-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of PRINT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'shstruct 'ar-th-doublebackslashparen arg))

(defun ar-end-print-in-shstruct-atpt (&optional arg) 
  "Employ actions of END at things class of PRINT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'shstruct 'ar-th-end arg))

(defun ar-escape-print-in-shstruct-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of PRINT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'shstruct 'ar-th-escape arg))

(defun ar-hide-print-in-shstruct-atpt (&optional arg) 
  "Employ actions of HIDE at things class of PRINT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'shstruct 'ar-th-hide arg))

(defun ar-hide-show-print-in-shstruct-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of PRINT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'shstruct 'ar-th-hide-show arg))

(defun ar-hyphen-print-in-shstruct-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of PRINT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'shstruct 'ar-th-hyphen arg))

(defun ar-kill-print-in-shstruct-atpt (&optional arg) 
  "Employ actions of KILL at things class of PRINT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'shstruct 'ar-th-kill arg))

(defun ar-leftrightsinglequote-print-in-shstruct-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of PRINT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'shstruct 'ar-th-leftrightsinglequote arg))

(defun ar-length-print-in-shstruct-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of PRINT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'shstruct 'ar-th-length arg))

(defun ar-parentize-print-in-shstruct-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of PRINT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'shstruct 'ar-th-parentize arg))

(defun ar-quote-print-in-shstruct-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of PRINT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'shstruct 'ar-th-quote arg))

(defun ar-separate-print-in-shstruct-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of PRINT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'shstruct 'ar-th-separate arg))

(defun ar-show-print-in-shstruct-atpt (&optional arg) 
  "Employ actions of SHOW at things class of PRINT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'shstruct 'ar-th-show arg))

(defun ar-singlequote-print-in-shstruct-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of PRINT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'shstruct 'ar-th-singlequote arg))

(defun ar-slash-print-in-shstruct-atpt (&optional arg) 
  "Employ actions of SLASH at things class of PRINT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'shstruct 'ar-th-slash arg))

(defun ar-star-print-in-shstruct-atpt (&optional arg) 
  "Employ actions of STAR at things class of PRINT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'shstruct 'ar-th-star arg))

(defun ar-slashparen-print-in-shstruct-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of PRINT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'shstruct 'ar-th-slashparen arg))

(defun ar-sort-print-in-shstruct-atpt (&optional arg) 
  "Employ actions of SORT at things class of PRINT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'shstruct 'ar-th-sort arg))

(defun ar-trim-print-in-shstruct-atpt (&optional arg) 
  "Employ actions of TRIM at things class of PRINT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'shstruct 'ar-th-trim arg))

(defun ar-trim-left-print-in-shstruct-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of PRINT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'shstruct 'ar-th-trim-left arg))

(defun ar-trim-right-print-in-shstruct-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of PRINT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'shstruct 'ar-th-trim-right arg))

(defun ar-underscore-print-in-shstruct-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of PRINT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'shstruct 'ar-th-underscore arg))

(defun ar-whitespace-print-in-shstruct-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of PRINT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'print 'shstruct 'ar-th-whitespace arg))

(defun ar-punct-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of  at things class of PUNCT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'greateranglednested 'ar-th arg))

(defun ar-greaterangle-punct-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of PUNCT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'greateranglednested 'ar-th-greaterangle arg))

(defun ar-lesserangle-punct-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of PUNCT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'greateranglednested 'ar-th-lesserangle arg))

(defun ar-backslash-punct-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of PUNCT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'greateranglednested 'ar-th-backslash arg))

(defun ar-colon-punct-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of COLON at things class of PUNCT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'greateranglednested 'ar-th-colon arg))

(defun ar-beg-punct-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BEG at things class of PUNCT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'greateranglednested 'ar-th-beg arg))

(defun ar-blok-punct-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BLOK at things class of PUNCT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'greateranglednested 'ar-th-blok arg))

(defun ar-bounds-punct-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of PUNCT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'greateranglednested 'ar-th-bounds arg))

(defun ar-brace-punct-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BRACE at things class of PUNCT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'greateranglednested 'ar-th-brace arg))

(defun ar-bracket-punct-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of PUNCT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'greateranglednested 'ar-th-bracket arg))

(defun ar-commatize-punct-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of PUNCT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'greateranglednested 'ar-th-commatize arg))

(defun ar-comment-punct-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of PUNCT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'greateranglednested 'ar-th-comment arg))

(defun ar-dollar-punct-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of PUNCT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'greateranglednested 'ar-th-dollar arg))

(defun ar-doublebackslash-punct-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of PUNCT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'greateranglednested 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-punct-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of PUNCT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'greateranglednested 'ar-th-doublebacktick arg))

(defun ar-doublequote-punct-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of PUNCT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'greateranglednested 'ar-th-doublequote arg))

(defun ar-doubleslash-punct-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of PUNCT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'greateranglednested 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-punct-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of PUNCT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'greateranglednested 'ar-th-doublebackslashparen arg))

(defun ar-end-punct-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of END at things class of PUNCT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'greateranglednested 'ar-th-end arg))

(defun ar-escape-punct-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of PUNCT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'greateranglednested 'ar-th-escape arg))

(defun ar-hide-punct-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of HIDE at things class of PUNCT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'greateranglednested 'ar-th-hide arg))

(defun ar-hide-show-punct-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of PUNCT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'greateranglednested 'ar-th-hide-show arg))

(defun ar-hyphen-punct-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of PUNCT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'greateranglednested 'ar-th-hyphen arg))

(defun ar-kill-punct-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of KILL at things class of PUNCT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'greateranglednested 'ar-th-kill arg))

(defun ar-leftrightsinglequote-punct-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of PUNCT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'greateranglednested 'ar-th-leftrightsinglequote arg))

(defun ar-length-punct-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of PUNCT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'greateranglednested 'ar-th-length arg))

(defun ar-parentize-punct-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of PUNCT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'greateranglednested 'ar-th-parentize arg))

(defun ar-quote-punct-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of PUNCT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'greateranglednested 'ar-th-quote arg))

(defun ar-separate-punct-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of PUNCT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'greateranglednested 'ar-th-separate arg))

(defun ar-show-punct-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SHOW at things class of PUNCT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'greateranglednested 'ar-th-show arg))

(defun ar-singlequote-punct-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of PUNCT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'greateranglednested 'ar-th-singlequote arg))

(defun ar-slash-punct-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SLASH at things class of PUNCT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'greateranglednested 'ar-th-slash arg))

(defun ar-star-punct-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of STAR at things class of PUNCT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'greateranglednested 'ar-th-star arg))

(defun ar-slashparen-punct-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of PUNCT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'greateranglednested 'ar-th-slashparen arg))

(defun ar-sort-punct-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SORT at things class of PUNCT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'greateranglednested 'ar-th-sort arg))

(defun ar-trim-punct-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of TRIM at things class of PUNCT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'greateranglednested 'ar-th-trim arg))

(defun ar-trim-left-punct-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of PUNCT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'greateranglednested 'ar-th-trim-left arg))

(defun ar-trim-right-punct-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of PUNCT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'greateranglednested 'ar-th-trim-right arg))

(defun ar-underscore-punct-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of PUNCT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'greateranglednested 'ar-th-underscore arg))

(defun ar-whitespace-punct-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of PUNCT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'greateranglednested 'ar-th-whitespace arg))

(defun ar-punct-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of  at things class of PUNCT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'lesseranglednested 'ar-th arg))

(defun ar-greaterangle-punct-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of PUNCT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'lesseranglednested 'ar-th-greaterangle arg))

(defun ar-lesserangle-punct-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of PUNCT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'lesseranglednested 'ar-th-lesserangle arg))

(defun ar-backslash-punct-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of PUNCT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'lesseranglednested 'ar-th-backslash arg))

(defun ar-colon-punct-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of COLON at things class of PUNCT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'lesseranglednested 'ar-th-colon arg))

(defun ar-beg-punct-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BEG at things class of PUNCT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'lesseranglednested 'ar-th-beg arg))

(defun ar-blok-punct-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BLOK at things class of PUNCT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'lesseranglednested 'ar-th-blok arg))

(defun ar-bounds-punct-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of PUNCT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'lesseranglednested 'ar-th-bounds arg))

(defun ar-brace-punct-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BRACE at things class of PUNCT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'lesseranglednested 'ar-th-brace arg))

(defun ar-bracket-punct-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of PUNCT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'lesseranglednested 'ar-th-bracket arg))

(defun ar-commatize-punct-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of PUNCT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'lesseranglednested 'ar-th-commatize arg))

(defun ar-comment-punct-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of PUNCT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'lesseranglednested 'ar-th-comment arg))

(defun ar-dollar-punct-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of PUNCT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'lesseranglednested 'ar-th-dollar arg))

(defun ar-doublebackslash-punct-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of PUNCT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'lesseranglednested 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-punct-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of PUNCT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'lesseranglednested 'ar-th-doublebacktick arg))

(defun ar-doublequote-punct-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of PUNCT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'lesseranglednested 'ar-th-doublequote arg))

(defun ar-doubleslash-punct-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of PUNCT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'lesseranglednested 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-punct-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of PUNCT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'lesseranglednested 'ar-th-doublebackslashparen arg))

(defun ar-end-punct-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of END at things class of PUNCT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'lesseranglednested 'ar-th-end arg))

(defun ar-escape-punct-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of PUNCT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'lesseranglednested 'ar-th-escape arg))

(defun ar-hide-punct-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of HIDE at things class of PUNCT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'lesseranglednested 'ar-th-hide arg))

(defun ar-hide-show-punct-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of PUNCT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'lesseranglednested 'ar-th-hide-show arg))

(defun ar-hyphen-punct-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of PUNCT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'lesseranglednested 'ar-th-hyphen arg))

(defun ar-kill-punct-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of KILL at things class of PUNCT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'lesseranglednested 'ar-th-kill arg))

(defun ar-leftrightsinglequote-punct-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of PUNCT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'lesseranglednested 'ar-th-leftrightsinglequote arg))

(defun ar-length-punct-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of PUNCT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'lesseranglednested 'ar-th-length arg))

(defun ar-parentize-punct-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of PUNCT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'lesseranglednested 'ar-th-parentize arg))

(defun ar-quote-punct-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of PUNCT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'lesseranglednested 'ar-th-quote arg))

(defun ar-separate-punct-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of PUNCT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'lesseranglednested 'ar-th-separate arg))

(defun ar-show-punct-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SHOW at things class of PUNCT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'lesseranglednested 'ar-th-show arg))

(defun ar-singlequote-punct-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of PUNCT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'lesseranglednested 'ar-th-singlequote arg))

(defun ar-slash-punct-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SLASH at things class of PUNCT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'lesseranglednested 'ar-th-slash arg))

(defun ar-star-punct-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of STAR at things class of PUNCT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'lesseranglednested 'ar-th-star arg))

(defun ar-slashparen-punct-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of PUNCT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'lesseranglednested 'ar-th-slashparen arg))

(defun ar-sort-punct-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SORT at things class of PUNCT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'lesseranglednested 'ar-th-sort arg))

(defun ar-trim-punct-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of TRIM at things class of PUNCT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'lesseranglednested 'ar-th-trim arg))

(defun ar-trim-left-punct-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of PUNCT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'lesseranglednested 'ar-th-trim-left arg))

(defun ar-trim-right-punct-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of PUNCT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'lesseranglednested 'ar-th-trim-right arg))

(defun ar-underscore-punct-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of PUNCT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'lesseranglednested 'ar-th-underscore arg))

(defun ar-whitespace-punct-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of PUNCT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'lesseranglednested 'ar-th-whitespace arg))

(defun ar-punct-in-buffer-atpt (&optional arg) 
  "Employ actions of  at things class of PUNCT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'buffer 'ar-th arg))

(defun ar-greaterangle-punct-in-buffer-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of PUNCT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'buffer 'ar-th-greaterangle arg))

(defun ar-lesserangle-punct-in-buffer-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of PUNCT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'buffer 'ar-th-lesserangle arg))

(defun ar-backslash-punct-in-buffer-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of PUNCT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'buffer 'ar-th-backslash arg))

(defun ar-colon-punct-in-buffer-atpt (&optional arg) 
  "Employ actions of COLON at things class of PUNCT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'buffer 'ar-th-colon arg))

(defun ar-beg-punct-in-buffer-atpt (&optional arg) 
  "Employ actions of BEG at things class of PUNCT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'buffer 'ar-th-beg arg))

(defun ar-blok-punct-in-buffer-atpt (&optional arg) 
  "Employ actions of BLOK at things class of PUNCT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'buffer 'ar-th-blok arg))

(defun ar-bounds-punct-in-buffer-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of PUNCT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'buffer 'ar-th-bounds arg))

(defun ar-brace-punct-in-buffer-atpt (&optional arg) 
  "Employ actions of BRACE at things class of PUNCT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'buffer 'ar-th-brace arg))

(defun ar-bracket-punct-in-buffer-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of PUNCT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'buffer 'ar-th-bracket arg))

(defun ar-commatize-punct-in-buffer-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of PUNCT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'buffer 'ar-th-commatize arg))

(defun ar-comment-punct-in-buffer-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of PUNCT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'buffer 'ar-th-comment arg))

(defun ar-dollar-punct-in-buffer-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of PUNCT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'buffer 'ar-th-dollar arg))

(defun ar-doublebackslash-punct-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of PUNCT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'buffer 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-punct-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of PUNCT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'buffer 'ar-th-doublebacktick arg))

(defun ar-doublequote-punct-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of PUNCT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'buffer 'ar-th-doublequote arg))

(defun ar-doubleslash-punct-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of PUNCT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'buffer 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-punct-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of PUNCT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'buffer 'ar-th-doublebackslashparen arg))

(defun ar-end-punct-in-buffer-atpt (&optional arg) 
  "Employ actions of END at things class of PUNCT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'buffer 'ar-th-end arg))

(defun ar-escape-punct-in-buffer-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of PUNCT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'buffer 'ar-th-escape arg))

(defun ar-hide-punct-in-buffer-atpt (&optional arg) 
  "Employ actions of HIDE at things class of PUNCT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'buffer 'ar-th-hide arg))

(defun ar-hide-show-punct-in-buffer-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of PUNCT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'buffer 'ar-th-hide-show arg))

(defun ar-hyphen-punct-in-buffer-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of PUNCT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'buffer 'ar-th-hyphen arg))

(defun ar-kill-punct-in-buffer-atpt (&optional arg) 
  "Employ actions of KILL at things class of PUNCT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'buffer 'ar-th-kill arg))

(defun ar-leftrightsinglequote-punct-in-buffer-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of PUNCT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'buffer 'ar-th-leftrightsinglequote arg))

(defun ar-length-punct-in-buffer-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of PUNCT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'buffer 'ar-th-length arg))

(defun ar-parentize-punct-in-buffer-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of PUNCT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'buffer 'ar-th-parentize arg))

(defun ar-quote-punct-in-buffer-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of PUNCT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'buffer 'ar-th-quote arg))

(defun ar-separate-punct-in-buffer-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of PUNCT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'buffer 'ar-th-separate arg))

(defun ar-show-punct-in-buffer-atpt (&optional arg) 
  "Employ actions of SHOW at things class of PUNCT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'buffer 'ar-th-show arg))

(defun ar-singlequote-punct-in-buffer-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of PUNCT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'buffer 'ar-th-singlequote arg))

(defun ar-slash-punct-in-buffer-atpt (&optional arg) 
  "Employ actions of SLASH at things class of PUNCT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'buffer 'ar-th-slash arg))

(defun ar-star-punct-in-buffer-atpt (&optional arg) 
  "Employ actions of STAR at things class of PUNCT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'buffer 'ar-th-star arg))

(defun ar-slashparen-punct-in-buffer-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of PUNCT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'buffer 'ar-th-slashparen arg))

(defun ar-sort-punct-in-buffer-atpt (&optional arg) 
  "Employ actions of SORT at things class of PUNCT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'buffer 'ar-th-sort arg))

(defun ar-trim-punct-in-buffer-atpt (&optional arg) 
  "Employ actions of TRIM at things class of PUNCT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'buffer 'ar-th-trim arg))

(defun ar-trim-left-punct-in-buffer-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of PUNCT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'buffer 'ar-th-trim-left arg))

(defun ar-trim-right-punct-in-buffer-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of PUNCT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'buffer 'ar-th-trim-right arg))

(defun ar-underscore-punct-in-buffer-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of PUNCT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'buffer 'ar-th-underscore arg))

(defun ar-whitespace-punct-in-buffer-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of PUNCT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'buffer 'ar-th-whitespace arg))

(defun ar-punct-in-comment-atpt (&optional arg) 
  "Employ actions of  at things class of PUNCT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'comment 'ar-th arg))

(defun ar-greaterangle-punct-in-comment-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of PUNCT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'comment 'ar-th-greaterangle arg))

(defun ar-lesserangle-punct-in-comment-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of PUNCT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'comment 'ar-th-lesserangle arg))

(defun ar-backslash-punct-in-comment-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of PUNCT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'comment 'ar-th-backslash arg))

(defun ar-colon-punct-in-comment-atpt (&optional arg) 
  "Employ actions of COLON at things class of PUNCT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'comment 'ar-th-colon arg))

(defun ar-beg-punct-in-comment-atpt (&optional arg) 
  "Employ actions of BEG at things class of PUNCT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'comment 'ar-th-beg arg))

(defun ar-blok-punct-in-comment-atpt (&optional arg) 
  "Employ actions of BLOK at things class of PUNCT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'comment 'ar-th-blok arg))

(defun ar-bounds-punct-in-comment-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of PUNCT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'comment 'ar-th-bounds arg))

(defun ar-brace-punct-in-comment-atpt (&optional arg) 
  "Employ actions of BRACE at things class of PUNCT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'comment 'ar-th-brace arg))

(defun ar-bracket-punct-in-comment-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of PUNCT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'comment 'ar-th-bracket arg))

(defun ar-commatize-punct-in-comment-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of PUNCT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'comment 'ar-th-commatize arg))

(defun ar-comment-punct-in-comment-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of PUNCT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'comment 'ar-th-comment arg))

(defun ar-dollar-punct-in-comment-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of PUNCT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'comment 'ar-th-dollar arg))

(defun ar-doublebackslash-punct-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of PUNCT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'comment 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-punct-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of PUNCT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'comment 'ar-th-doublebacktick arg))

(defun ar-doublequote-punct-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of PUNCT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'comment 'ar-th-doublequote arg))

(defun ar-doubleslash-punct-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of PUNCT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'comment 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-punct-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of PUNCT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'comment 'ar-th-doublebackslashparen arg))

(defun ar-end-punct-in-comment-atpt (&optional arg) 
  "Employ actions of END at things class of PUNCT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'comment 'ar-th-end arg))

(defun ar-escape-punct-in-comment-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of PUNCT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'comment 'ar-th-escape arg))

(defun ar-hide-punct-in-comment-atpt (&optional arg) 
  "Employ actions of HIDE at things class of PUNCT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'comment 'ar-th-hide arg))

(defun ar-hide-show-punct-in-comment-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of PUNCT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'comment 'ar-th-hide-show arg))

(defun ar-hyphen-punct-in-comment-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of PUNCT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'comment 'ar-th-hyphen arg))

(defun ar-kill-punct-in-comment-atpt (&optional arg) 
  "Employ actions of KILL at things class of PUNCT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'comment 'ar-th-kill arg))

(defun ar-leftrightsinglequote-punct-in-comment-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of PUNCT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'comment 'ar-th-leftrightsinglequote arg))

(defun ar-length-punct-in-comment-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of PUNCT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'comment 'ar-th-length arg))

(defun ar-parentize-punct-in-comment-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of PUNCT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'comment 'ar-th-parentize arg))

(defun ar-quote-punct-in-comment-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of PUNCT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'comment 'ar-th-quote arg))

(defun ar-separate-punct-in-comment-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of PUNCT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'comment 'ar-th-separate arg))

(defun ar-show-punct-in-comment-atpt (&optional arg) 
  "Employ actions of SHOW at things class of PUNCT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'comment 'ar-th-show arg))

(defun ar-singlequote-punct-in-comment-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of PUNCT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'comment 'ar-th-singlequote arg))

(defun ar-slash-punct-in-comment-atpt (&optional arg) 
  "Employ actions of SLASH at things class of PUNCT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'comment 'ar-th-slash arg))

(defun ar-star-punct-in-comment-atpt (&optional arg) 
  "Employ actions of STAR at things class of PUNCT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'comment 'ar-th-star arg))

(defun ar-slashparen-punct-in-comment-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of PUNCT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'comment 'ar-th-slashparen arg))

(defun ar-sort-punct-in-comment-atpt (&optional arg) 
  "Employ actions of SORT at things class of PUNCT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'comment 'ar-th-sort arg))

(defun ar-trim-punct-in-comment-atpt (&optional arg) 
  "Employ actions of TRIM at things class of PUNCT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'comment 'ar-th-trim arg))

(defun ar-trim-left-punct-in-comment-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of PUNCT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'comment 'ar-th-trim-left arg))

(defun ar-trim-right-punct-in-comment-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of PUNCT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'comment 'ar-th-trim-right arg))

(defun ar-underscore-punct-in-comment-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of PUNCT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'comment 'ar-th-underscore arg))

(defun ar-whitespace-punct-in-comment-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of PUNCT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'comment 'ar-th-whitespace arg))

(defun ar-punct-in-csv-atpt (&optional arg) 
  "Employ actions of  at things class of PUNCT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'csv 'ar-th arg))

(defun ar-greaterangle-punct-in-csv-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of PUNCT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'csv 'ar-th-greaterangle arg))

(defun ar-lesserangle-punct-in-csv-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of PUNCT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'csv 'ar-th-lesserangle arg))

(defun ar-backslash-punct-in-csv-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of PUNCT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'csv 'ar-th-backslash arg))

(defun ar-colon-punct-in-csv-atpt (&optional arg) 
  "Employ actions of COLON at things class of PUNCT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'csv 'ar-th-colon arg))

(defun ar-beg-punct-in-csv-atpt (&optional arg) 
  "Employ actions of BEG at things class of PUNCT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'csv 'ar-th-beg arg))

(defun ar-blok-punct-in-csv-atpt (&optional arg) 
  "Employ actions of BLOK at things class of PUNCT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'csv 'ar-th-blok arg))

(defun ar-bounds-punct-in-csv-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of PUNCT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'csv 'ar-th-bounds arg))

(defun ar-brace-punct-in-csv-atpt (&optional arg) 
  "Employ actions of BRACE at things class of PUNCT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'csv 'ar-th-brace arg))

(defun ar-bracket-punct-in-csv-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of PUNCT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'csv 'ar-th-bracket arg))

(defun ar-commatize-punct-in-csv-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of PUNCT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'csv 'ar-th-commatize arg))

(defun ar-comment-punct-in-csv-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of PUNCT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'csv 'ar-th-comment arg))

(defun ar-dollar-punct-in-csv-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of PUNCT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'csv 'ar-th-dollar arg))

(defun ar-doublebackslash-punct-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of PUNCT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'csv 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-punct-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of PUNCT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'csv 'ar-th-doublebacktick arg))

(defun ar-doublequote-punct-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of PUNCT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'csv 'ar-th-doublequote arg))

(defun ar-doubleslash-punct-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of PUNCT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'csv 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-punct-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of PUNCT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'csv 'ar-th-doublebackslashparen arg))

(defun ar-end-punct-in-csv-atpt (&optional arg) 
  "Employ actions of END at things class of PUNCT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'csv 'ar-th-end arg))

(defun ar-escape-punct-in-csv-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of PUNCT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'csv 'ar-th-escape arg))

(defun ar-hide-punct-in-csv-atpt (&optional arg) 
  "Employ actions of HIDE at things class of PUNCT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'csv 'ar-th-hide arg))

(defun ar-hide-show-punct-in-csv-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of PUNCT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'csv 'ar-th-hide-show arg))

(defun ar-hyphen-punct-in-csv-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of PUNCT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'csv 'ar-th-hyphen arg))

(defun ar-kill-punct-in-csv-atpt (&optional arg) 
  "Employ actions of KILL at things class of PUNCT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'csv 'ar-th-kill arg))

(defun ar-leftrightsinglequote-punct-in-csv-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of PUNCT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'csv 'ar-th-leftrightsinglequote arg))

(defun ar-length-punct-in-csv-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of PUNCT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'csv 'ar-th-length arg))

(defun ar-parentize-punct-in-csv-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of PUNCT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'csv 'ar-th-parentize arg))

(defun ar-quote-punct-in-csv-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of PUNCT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'csv 'ar-th-quote arg))

(defun ar-separate-punct-in-csv-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of PUNCT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'csv 'ar-th-separate arg))

(defun ar-show-punct-in-csv-atpt (&optional arg) 
  "Employ actions of SHOW at things class of PUNCT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'csv 'ar-th-show arg))

(defun ar-singlequote-punct-in-csv-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of PUNCT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'csv 'ar-th-singlequote arg))

(defun ar-slash-punct-in-csv-atpt (&optional arg) 
  "Employ actions of SLASH at things class of PUNCT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'csv 'ar-th-slash arg))

(defun ar-star-punct-in-csv-atpt (&optional arg) 
  "Employ actions of STAR at things class of PUNCT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'csv 'ar-th-star arg))

(defun ar-slashparen-punct-in-csv-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of PUNCT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'csv 'ar-th-slashparen arg))

(defun ar-sort-punct-in-csv-atpt (&optional arg) 
  "Employ actions of SORT at things class of PUNCT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'csv 'ar-th-sort arg))

(defun ar-trim-punct-in-csv-atpt (&optional arg) 
  "Employ actions of TRIM at things class of PUNCT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'csv 'ar-th-trim arg))

(defun ar-trim-left-punct-in-csv-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of PUNCT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'csv 'ar-th-trim-left arg))

(defun ar-trim-right-punct-in-csv-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of PUNCT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'csv 'ar-th-trim-right arg))

(defun ar-underscore-punct-in-csv-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of PUNCT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'csv 'ar-th-underscore arg))

(defun ar-whitespace-punct-in-csv-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of PUNCT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'csv 'ar-th-whitespace arg))

(defun ar-punct-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of  at things class of PUNCT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'filenamenondirectory 'ar-th arg))

(defun ar-greaterangle-punct-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of PUNCT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'filenamenondirectory 'ar-th-greaterangle arg))

(defun ar-lesserangle-punct-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of PUNCT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'filenamenondirectory 'ar-th-lesserangle arg))

(defun ar-backslash-punct-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of PUNCT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'filenamenondirectory 'ar-th-backslash arg))

(defun ar-colon-punct-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of COLON at things class of PUNCT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'filenamenondirectory 'ar-th-colon arg))

(defun ar-beg-punct-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BEG at things class of PUNCT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'filenamenondirectory 'ar-th-beg arg))

(defun ar-blok-punct-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BLOK at things class of PUNCT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'filenamenondirectory 'ar-th-blok arg))

(defun ar-bounds-punct-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of PUNCT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'filenamenondirectory 'ar-th-bounds arg))

(defun ar-brace-punct-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BRACE at things class of PUNCT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'filenamenondirectory 'ar-th-brace arg))

(defun ar-bracket-punct-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of PUNCT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'filenamenondirectory 'ar-th-bracket arg))

(defun ar-commatize-punct-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of PUNCT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'filenamenondirectory 'ar-th-commatize arg))

(defun ar-comment-punct-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of PUNCT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'filenamenondirectory 'ar-th-comment arg))

(defun ar-dollar-punct-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of PUNCT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'filenamenondirectory 'ar-th-dollar arg))

(defun ar-doublebackslash-punct-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of PUNCT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'filenamenondirectory 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-punct-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of PUNCT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'filenamenondirectory 'ar-th-doublebacktick arg))

(defun ar-doublequote-punct-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of PUNCT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'filenamenondirectory 'ar-th-doublequote arg))

(defun ar-doubleslash-punct-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of PUNCT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'filenamenondirectory 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-punct-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of PUNCT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'filenamenondirectory 'ar-th-doublebackslashparen arg))

(defun ar-end-punct-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of END at things class of PUNCT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'filenamenondirectory 'ar-th-end arg))

(defun ar-escape-punct-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of PUNCT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'filenamenondirectory 'ar-th-escape arg))

(defun ar-hide-punct-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of HIDE at things class of PUNCT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'filenamenondirectory 'ar-th-hide arg))

(defun ar-hide-show-punct-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of PUNCT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'filenamenondirectory 'ar-th-hide-show arg))

(defun ar-hyphen-punct-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of PUNCT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'filenamenondirectory 'ar-th-hyphen arg))

(defun ar-kill-punct-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of KILL at things class of PUNCT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'filenamenondirectory 'ar-th-kill arg))

(defun ar-leftrightsinglequote-punct-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of PUNCT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'filenamenondirectory 'ar-th-leftrightsinglequote arg))

(defun ar-length-punct-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of PUNCT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'filenamenondirectory 'ar-th-length arg))

(defun ar-parentize-punct-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of PUNCT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'filenamenondirectory 'ar-th-parentize arg))

(defun ar-quote-punct-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of PUNCT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'filenamenondirectory 'ar-th-quote arg))

(defun ar-separate-punct-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of PUNCT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'filenamenondirectory 'ar-th-separate arg))

(defun ar-show-punct-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SHOW at things class of PUNCT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'filenamenondirectory 'ar-th-show arg))

(defun ar-singlequote-punct-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of PUNCT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'filenamenondirectory 'ar-th-singlequote arg))

(defun ar-slash-punct-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SLASH at things class of PUNCT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'filenamenondirectory 'ar-th-slash arg))

(defun ar-star-punct-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of STAR at things class of PUNCT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'filenamenondirectory 'ar-th-star arg))

(defun ar-slashparen-punct-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of PUNCT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'filenamenondirectory 'ar-th-slashparen arg))

(defun ar-sort-punct-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SORT at things class of PUNCT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'filenamenondirectory 'ar-th-sort arg))

(defun ar-trim-punct-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of TRIM at things class of PUNCT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'filenamenondirectory 'ar-th-trim arg))

(defun ar-trim-left-punct-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of PUNCT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'filenamenondirectory 'ar-th-trim-left arg))

(defun ar-trim-right-punct-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of PUNCT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'filenamenondirectory 'ar-th-trim-right arg))

(defun ar-underscore-punct-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of PUNCT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'filenamenondirectory 'ar-th-underscore arg))

(defun ar-whitespace-punct-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of PUNCT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'filenamenondirectory 'ar-th-whitespace arg))

(defun ar-punct-in-function-atpt (&optional arg) 
  "Employ actions of  at things class of PUNCT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'function 'ar-th arg))

(defun ar-greaterangle-punct-in-function-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of PUNCT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'function 'ar-th-greaterangle arg))

(defun ar-lesserangle-punct-in-function-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of PUNCT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'function 'ar-th-lesserangle arg))

(defun ar-backslash-punct-in-function-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of PUNCT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'function 'ar-th-backslash arg))

(defun ar-colon-punct-in-function-atpt (&optional arg) 
  "Employ actions of COLON at things class of PUNCT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'function 'ar-th-colon arg))

(defun ar-beg-punct-in-function-atpt (&optional arg) 
  "Employ actions of BEG at things class of PUNCT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'function 'ar-th-beg arg))

(defun ar-blok-punct-in-function-atpt (&optional arg) 
  "Employ actions of BLOK at things class of PUNCT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'function 'ar-th-blok arg))

(defun ar-bounds-punct-in-function-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of PUNCT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'function 'ar-th-bounds arg))

(defun ar-brace-punct-in-function-atpt (&optional arg) 
  "Employ actions of BRACE at things class of PUNCT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'function 'ar-th-brace arg))

(defun ar-bracket-punct-in-function-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of PUNCT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'function 'ar-th-bracket arg))

(defun ar-commatize-punct-in-function-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of PUNCT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'function 'ar-th-commatize arg))

(defun ar-comment-punct-in-function-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of PUNCT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'function 'ar-th-comment arg))

(defun ar-dollar-punct-in-function-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of PUNCT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'function 'ar-th-dollar arg))

(defun ar-doublebackslash-punct-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of PUNCT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'function 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-punct-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of PUNCT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'function 'ar-th-doublebacktick arg))

(defun ar-doublequote-punct-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of PUNCT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'function 'ar-th-doublequote arg))

(defun ar-doubleslash-punct-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of PUNCT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'function 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-punct-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of PUNCT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'function 'ar-th-doublebackslashparen arg))

(defun ar-end-punct-in-function-atpt (&optional arg) 
  "Employ actions of END at things class of PUNCT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'function 'ar-th-end arg))

(defun ar-escape-punct-in-function-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of PUNCT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'function 'ar-th-escape arg))

(defun ar-hide-punct-in-function-atpt (&optional arg) 
  "Employ actions of HIDE at things class of PUNCT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'function 'ar-th-hide arg))

(defun ar-hide-show-punct-in-function-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of PUNCT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'function 'ar-th-hide-show arg))

(defun ar-hyphen-punct-in-function-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of PUNCT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'function 'ar-th-hyphen arg))

(defun ar-kill-punct-in-function-atpt (&optional arg) 
  "Employ actions of KILL at things class of PUNCT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'function 'ar-th-kill arg))

(defun ar-leftrightsinglequote-punct-in-function-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of PUNCT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'function 'ar-th-leftrightsinglequote arg))

(defun ar-length-punct-in-function-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of PUNCT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'function 'ar-th-length arg))

(defun ar-parentize-punct-in-function-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of PUNCT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'function 'ar-th-parentize arg))

(defun ar-quote-punct-in-function-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of PUNCT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'function 'ar-th-quote arg))

(defun ar-separate-punct-in-function-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of PUNCT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'function 'ar-th-separate arg))

(defun ar-show-punct-in-function-atpt (&optional arg) 
  "Employ actions of SHOW at things class of PUNCT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'function 'ar-th-show arg))

(defun ar-singlequote-punct-in-function-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of PUNCT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'function 'ar-th-singlequote arg))

(defun ar-slash-punct-in-function-atpt (&optional arg) 
  "Employ actions of SLASH at things class of PUNCT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'function 'ar-th-slash arg))

(defun ar-star-punct-in-function-atpt (&optional arg) 
  "Employ actions of STAR at things class of PUNCT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'function 'ar-th-star arg))

(defun ar-slashparen-punct-in-function-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of PUNCT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'function 'ar-th-slashparen arg))

(defun ar-sort-punct-in-function-atpt (&optional arg) 
  "Employ actions of SORT at things class of PUNCT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'function 'ar-th-sort arg))

(defun ar-trim-punct-in-function-atpt (&optional arg) 
  "Employ actions of TRIM at things class of PUNCT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'function 'ar-th-trim arg))

(defun ar-trim-left-punct-in-function-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of PUNCT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'function 'ar-th-trim-left arg))

(defun ar-trim-right-punct-in-function-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of PUNCT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'function 'ar-th-trim-right arg))

(defun ar-underscore-punct-in-function-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of PUNCT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'function 'ar-th-underscore arg))

(defun ar-whitespace-punct-in-function-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of PUNCT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'function 'ar-th-whitespace arg))

(defun ar-punct-in-line-atpt (&optional arg) 
  "Employ actions of  at things class of PUNCT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'line 'ar-th arg))

(defun ar-greaterangle-punct-in-line-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of PUNCT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'line 'ar-th-greaterangle arg))

(defun ar-lesserangle-punct-in-line-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of PUNCT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'line 'ar-th-lesserangle arg))

(defun ar-backslash-punct-in-line-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of PUNCT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'line 'ar-th-backslash arg))

(defun ar-colon-punct-in-line-atpt (&optional arg) 
  "Employ actions of COLON at things class of PUNCT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'line 'ar-th-colon arg))

(defun ar-beg-punct-in-line-atpt (&optional arg) 
  "Employ actions of BEG at things class of PUNCT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'line 'ar-th-beg arg))

(defun ar-blok-punct-in-line-atpt (&optional arg) 
  "Employ actions of BLOK at things class of PUNCT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'line 'ar-th-blok arg))

(defun ar-bounds-punct-in-line-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of PUNCT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'line 'ar-th-bounds arg))

(defun ar-brace-punct-in-line-atpt (&optional arg) 
  "Employ actions of BRACE at things class of PUNCT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'line 'ar-th-brace arg))

(defun ar-bracket-punct-in-line-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of PUNCT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'line 'ar-th-bracket arg))

(defun ar-commatize-punct-in-line-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of PUNCT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'line 'ar-th-commatize arg))

(defun ar-comment-punct-in-line-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of PUNCT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'line 'ar-th-comment arg))

(defun ar-dollar-punct-in-line-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of PUNCT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'line 'ar-th-dollar arg))

(defun ar-doublebackslash-punct-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of PUNCT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'line 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-punct-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of PUNCT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'line 'ar-th-doublebacktick arg))

(defun ar-doublequote-punct-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of PUNCT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'line 'ar-th-doublequote arg))

(defun ar-doubleslash-punct-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of PUNCT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'line 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-punct-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of PUNCT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'line 'ar-th-doublebackslashparen arg))

(defun ar-end-punct-in-line-atpt (&optional arg) 
  "Employ actions of END at things class of PUNCT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'line 'ar-th-end arg))

(defun ar-escape-punct-in-line-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of PUNCT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'line 'ar-th-escape arg))

(defun ar-hide-punct-in-line-atpt (&optional arg) 
  "Employ actions of HIDE at things class of PUNCT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'line 'ar-th-hide arg))

(defun ar-hide-show-punct-in-line-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of PUNCT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'line 'ar-th-hide-show arg))

(defun ar-hyphen-punct-in-line-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of PUNCT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'line 'ar-th-hyphen arg))

(defun ar-kill-punct-in-line-atpt (&optional arg) 
  "Employ actions of KILL at things class of PUNCT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'line 'ar-th-kill arg))

(defun ar-leftrightsinglequote-punct-in-line-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of PUNCT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'line 'ar-th-leftrightsinglequote arg))

(defun ar-length-punct-in-line-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of PUNCT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'line 'ar-th-length arg))

(defun ar-parentize-punct-in-line-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of PUNCT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'line 'ar-th-parentize arg))

(defun ar-quote-punct-in-line-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of PUNCT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'line 'ar-th-quote arg))

(defun ar-separate-punct-in-line-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of PUNCT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'line 'ar-th-separate arg))

(defun ar-show-punct-in-line-atpt (&optional arg) 
  "Employ actions of SHOW at things class of PUNCT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'line 'ar-th-show arg))

(defun ar-singlequote-punct-in-line-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of PUNCT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'line 'ar-th-singlequote arg))

(defun ar-slash-punct-in-line-atpt (&optional arg) 
  "Employ actions of SLASH at things class of PUNCT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'line 'ar-th-slash arg))

(defun ar-star-punct-in-line-atpt (&optional arg) 
  "Employ actions of STAR at things class of PUNCT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'line 'ar-th-star arg))

(defun ar-slashparen-punct-in-line-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of PUNCT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'line 'ar-th-slashparen arg))

(defun ar-sort-punct-in-line-atpt (&optional arg) 
  "Employ actions of SORT at things class of PUNCT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'line 'ar-th-sort arg))

(defun ar-trim-punct-in-line-atpt (&optional arg) 
  "Employ actions of TRIM at things class of PUNCT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'line 'ar-th-trim arg))

(defun ar-trim-left-punct-in-line-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of PUNCT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'line 'ar-th-trim-left arg))

(defun ar-trim-right-punct-in-line-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of PUNCT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'line 'ar-th-trim-right arg))

(defun ar-underscore-punct-in-line-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of PUNCT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'line 'ar-th-underscore arg))

(defun ar-whitespace-punct-in-line-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of PUNCT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'line 'ar-th-whitespace arg))

(defun ar-punct-in-list-atpt (&optional arg) 
  "Employ actions of  at things class of PUNCT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'list 'ar-th arg))

(defun ar-greaterangle-punct-in-list-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of PUNCT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'list 'ar-th-greaterangle arg))

(defun ar-lesserangle-punct-in-list-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of PUNCT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'list 'ar-th-lesserangle arg))

(defun ar-backslash-punct-in-list-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of PUNCT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'list 'ar-th-backslash arg))

(defun ar-colon-punct-in-list-atpt (&optional arg) 
  "Employ actions of COLON at things class of PUNCT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'list 'ar-th-colon arg))

(defun ar-beg-punct-in-list-atpt (&optional arg) 
  "Employ actions of BEG at things class of PUNCT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'list 'ar-th-beg arg))

(defun ar-blok-punct-in-list-atpt (&optional arg) 
  "Employ actions of BLOK at things class of PUNCT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'list 'ar-th-blok arg))

(defun ar-bounds-punct-in-list-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of PUNCT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'list 'ar-th-bounds arg))

(defun ar-brace-punct-in-list-atpt (&optional arg) 
  "Employ actions of BRACE at things class of PUNCT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'list 'ar-th-brace arg))

(defun ar-bracket-punct-in-list-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of PUNCT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'list 'ar-th-bracket arg))

(defun ar-commatize-punct-in-list-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of PUNCT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'list 'ar-th-commatize arg))

(defun ar-comment-punct-in-list-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of PUNCT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'list 'ar-th-comment arg))

(defun ar-dollar-punct-in-list-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of PUNCT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'list 'ar-th-dollar arg))

(defun ar-doublebackslash-punct-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of PUNCT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'list 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-punct-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of PUNCT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'list 'ar-th-doublebacktick arg))

(defun ar-doublequote-punct-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of PUNCT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'list 'ar-th-doublequote arg))

(defun ar-doubleslash-punct-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of PUNCT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'list 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-punct-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of PUNCT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'list 'ar-th-doublebackslashparen arg))

(defun ar-end-punct-in-list-atpt (&optional arg) 
  "Employ actions of END at things class of PUNCT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'list 'ar-th-end arg))

(defun ar-escape-punct-in-list-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of PUNCT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'list 'ar-th-escape arg))

(defun ar-hide-punct-in-list-atpt (&optional arg) 
  "Employ actions of HIDE at things class of PUNCT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'list 'ar-th-hide arg))

(defun ar-hide-show-punct-in-list-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of PUNCT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'list 'ar-th-hide-show arg))

(defun ar-hyphen-punct-in-list-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of PUNCT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'list 'ar-th-hyphen arg))

(defun ar-kill-punct-in-list-atpt (&optional arg) 
  "Employ actions of KILL at things class of PUNCT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'list 'ar-th-kill arg))

(defun ar-leftrightsinglequote-punct-in-list-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of PUNCT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'list 'ar-th-leftrightsinglequote arg))

(defun ar-length-punct-in-list-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of PUNCT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'list 'ar-th-length arg))

(defun ar-parentize-punct-in-list-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of PUNCT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'list 'ar-th-parentize arg))

(defun ar-quote-punct-in-list-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of PUNCT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'list 'ar-th-quote arg))

(defun ar-separate-punct-in-list-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of PUNCT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'list 'ar-th-separate arg))

(defun ar-show-punct-in-list-atpt (&optional arg) 
  "Employ actions of SHOW at things class of PUNCT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'list 'ar-th-show arg))

(defun ar-singlequote-punct-in-list-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of PUNCT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'list 'ar-th-singlequote arg))

(defun ar-slash-punct-in-list-atpt (&optional arg) 
  "Employ actions of SLASH at things class of PUNCT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'list 'ar-th-slash arg))

(defun ar-star-punct-in-list-atpt (&optional arg) 
  "Employ actions of STAR at things class of PUNCT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'list 'ar-th-star arg))

(defun ar-slashparen-punct-in-list-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of PUNCT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'list 'ar-th-slashparen arg))

(defun ar-sort-punct-in-list-atpt (&optional arg) 
  "Employ actions of SORT at things class of PUNCT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'list 'ar-th-sort arg))

(defun ar-trim-punct-in-list-atpt (&optional arg) 
  "Employ actions of TRIM at things class of PUNCT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'list 'ar-th-trim arg))

(defun ar-trim-left-punct-in-list-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of PUNCT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'list 'ar-th-trim-left arg))

(defun ar-trim-right-punct-in-list-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of PUNCT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'list 'ar-th-trim-right arg))

(defun ar-underscore-punct-in-list-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of PUNCT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'list 'ar-th-underscore arg))

(defun ar-whitespace-punct-in-list-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of PUNCT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'list 'ar-th-whitespace arg))

(defun ar-punct-in-name-atpt (&optional arg) 
  "Employ actions of  at things class of PUNCT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'name 'ar-th arg))

(defun ar-greaterangle-punct-in-name-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of PUNCT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'name 'ar-th-greaterangle arg))

(defun ar-lesserangle-punct-in-name-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of PUNCT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'name 'ar-th-lesserangle arg))

(defun ar-backslash-punct-in-name-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of PUNCT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'name 'ar-th-backslash arg))

(defun ar-colon-punct-in-name-atpt (&optional arg) 
  "Employ actions of COLON at things class of PUNCT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'name 'ar-th-colon arg))

(defun ar-beg-punct-in-name-atpt (&optional arg) 
  "Employ actions of BEG at things class of PUNCT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'name 'ar-th-beg arg))

(defun ar-blok-punct-in-name-atpt (&optional arg) 
  "Employ actions of BLOK at things class of PUNCT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'name 'ar-th-blok arg))

(defun ar-bounds-punct-in-name-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of PUNCT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'name 'ar-th-bounds arg))

(defun ar-brace-punct-in-name-atpt (&optional arg) 
  "Employ actions of BRACE at things class of PUNCT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'name 'ar-th-brace arg))

(defun ar-bracket-punct-in-name-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of PUNCT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'name 'ar-th-bracket arg))

(defun ar-commatize-punct-in-name-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of PUNCT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'name 'ar-th-commatize arg))

(defun ar-comment-punct-in-name-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of PUNCT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'name 'ar-th-comment arg))

(defun ar-dollar-punct-in-name-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of PUNCT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'name 'ar-th-dollar arg))

(defun ar-doublebackslash-punct-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of PUNCT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'name 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-punct-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of PUNCT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'name 'ar-th-doublebacktick arg))

(defun ar-doublequote-punct-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of PUNCT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'name 'ar-th-doublequote arg))

(defun ar-doubleslash-punct-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of PUNCT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'name 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-punct-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of PUNCT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'name 'ar-th-doublebackslashparen arg))

(defun ar-end-punct-in-name-atpt (&optional arg) 
  "Employ actions of END at things class of PUNCT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'name 'ar-th-end arg))

(defun ar-escape-punct-in-name-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of PUNCT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'name 'ar-th-escape arg))

(defun ar-hide-punct-in-name-atpt (&optional arg) 
  "Employ actions of HIDE at things class of PUNCT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'name 'ar-th-hide arg))

(defun ar-hide-show-punct-in-name-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of PUNCT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'name 'ar-th-hide-show arg))

(defun ar-hyphen-punct-in-name-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of PUNCT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'name 'ar-th-hyphen arg))

(defun ar-kill-punct-in-name-atpt (&optional arg) 
  "Employ actions of KILL at things class of PUNCT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'name 'ar-th-kill arg))

(defun ar-leftrightsinglequote-punct-in-name-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of PUNCT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'name 'ar-th-leftrightsinglequote arg))

(defun ar-length-punct-in-name-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of PUNCT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'name 'ar-th-length arg))

(defun ar-parentize-punct-in-name-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of PUNCT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'name 'ar-th-parentize arg))

(defun ar-quote-punct-in-name-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of PUNCT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'name 'ar-th-quote arg))

(defun ar-separate-punct-in-name-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of PUNCT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'name 'ar-th-separate arg))

(defun ar-show-punct-in-name-atpt (&optional arg) 
  "Employ actions of SHOW at things class of PUNCT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'name 'ar-th-show arg))

(defun ar-singlequote-punct-in-name-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of PUNCT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'name 'ar-th-singlequote arg))

(defun ar-slash-punct-in-name-atpt (&optional arg) 
  "Employ actions of SLASH at things class of PUNCT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'name 'ar-th-slash arg))

(defun ar-star-punct-in-name-atpt (&optional arg) 
  "Employ actions of STAR at things class of PUNCT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'name 'ar-th-star arg))

(defun ar-slashparen-punct-in-name-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of PUNCT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'name 'ar-th-slashparen arg))

(defun ar-sort-punct-in-name-atpt (&optional arg) 
  "Employ actions of SORT at things class of PUNCT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'name 'ar-th-sort arg))

(defun ar-trim-punct-in-name-atpt (&optional arg) 
  "Employ actions of TRIM at things class of PUNCT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'name 'ar-th-trim arg))

(defun ar-trim-left-punct-in-name-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of PUNCT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'name 'ar-th-trim-left arg))

(defun ar-trim-right-punct-in-name-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of PUNCT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'name 'ar-th-trim-right arg))

(defun ar-underscore-punct-in-name-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of PUNCT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'name 'ar-th-underscore arg))

(defun ar-whitespace-punct-in-name-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of PUNCT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'name 'ar-th-whitespace arg))

(defun ar-punct-in-page-atpt (&optional arg) 
  "Employ actions of  at things class of PUNCT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'page 'ar-th arg))

(defun ar-greaterangle-punct-in-page-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of PUNCT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'page 'ar-th-greaterangle arg))

(defun ar-lesserangle-punct-in-page-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of PUNCT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'page 'ar-th-lesserangle arg))

(defun ar-backslash-punct-in-page-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of PUNCT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'page 'ar-th-backslash arg))

(defun ar-colon-punct-in-page-atpt (&optional arg) 
  "Employ actions of COLON at things class of PUNCT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'page 'ar-th-colon arg))

(defun ar-beg-punct-in-page-atpt (&optional arg) 
  "Employ actions of BEG at things class of PUNCT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'page 'ar-th-beg arg))

(defun ar-blok-punct-in-page-atpt (&optional arg) 
  "Employ actions of BLOK at things class of PUNCT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'page 'ar-th-blok arg))

(defun ar-bounds-punct-in-page-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of PUNCT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'page 'ar-th-bounds arg))

(defun ar-brace-punct-in-page-atpt (&optional arg) 
  "Employ actions of BRACE at things class of PUNCT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'page 'ar-th-brace arg))

(defun ar-bracket-punct-in-page-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of PUNCT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'page 'ar-th-bracket arg))

(defun ar-commatize-punct-in-page-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of PUNCT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'page 'ar-th-commatize arg))

(defun ar-comment-punct-in-page-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of PUNCT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'page 'ar-th-comment arg))

(defun ar-dollar-punct-in-page-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of PUNCT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'page 'ar-th-dollar arg))

(defun ar-doublebackslash-punct-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of PUNCT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'page 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-punct-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of PUNCT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'page 'ar-th-doublebacktick arg))

(defun ar-doublequote-punct-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of PUNCT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'page 'ar-th-doublequote arg))

(defun ar-doubleslash-punct-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of PUNCT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'page 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-punct-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of PUNCT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'page 'ar-th-doublebackslashparen arg))

(defun ar-end-punct-in-page-atpt (&optional arg) 
  "Employ actions of END at things class of PUNCT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'page 'ar-th-end arg))

(defun ar-escape-punct-in-page-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of PUNCT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'page 'ar-th-escape arg))

(defun ar-hide-punct-in-page-atpt (&optional arg) 
  "Employ actions of HIDE at things class of PUNCT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'page 'ar-th-hide arg))

(defun ar-hide-show-punct-in-page-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of PUNCT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'page 'ar-th-hide-show arg))

(defun ar-hyphen-punct-in-page-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of PUNCT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'page 'ar-th-hyphen arg))

(defun ar-kill-punct-in-page-atpt (&optional arg) 
  "Employ actions of KILL at things class of PUNCT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'page 'ar-th-kill arg))

(defun ar-leftrightsinglequote-punct-in-page-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of PUNCT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'page 'ar-th-leftrightsinglequote arg))

(defun ar-length-punct-in-page-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of PUNCT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'page 'ar-th-length arg))

(defun ar-parentize-punct-in-page-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of PUNCT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'page 'ar-th-parentize arg))

(defun ar-quote-punct-in-page-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of PUNCT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'page 'ar-th-quote arg))

(defun ar-separate-punct-in-page-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of PUNCT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'page 'ar-th-separate arg))

(defun ar-show-punct-in-page-atpt (&optional arg) 
  "Employ actions of SHOW at things class of PUNCT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'page 'ar-th-show arg))

(defun ar-singlequote-punct-in-page-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of PUNCT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'page 'ar-th-singlequote arg))

(defun ar-slash-punct-in-page-atpt (&optional arg) 
  "Employ actions of SLASH at things class of PUNCT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'page 'ar-th-slash arg))

(defun ar-star-punct-in-page-atpt (&optional arg) 
  "Employ actions of STAR at things class of PUNCT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'page 'ar-th-star arg))

(defun ar-slashparen-punct-in-page-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of PUNCT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'page 'ar-th-slashparen arg))

(defun ar-sort-punct-in-page-atpt (&optional arg) 
  "Employ actions of SORT at things class of PUNCT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'page 'ar-th-sort arg))

(defun ar-trim-punct-in-page-atpt (&optional arg) 
  "Employ actions of TRIM at things class of PUNCT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'page 'ar-th-trim arg))

(defun ar-trim-left-punct-in-page-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of PUNCT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'page 'ar-th-trim-left arg))

(defun ar-trim-right-punct-in-page-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of PUNCT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'page 'ar-th-trim-right arg))

(defun ar-underscore-punct-in-page-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of PUNCT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'page 'ar-th-underscore arg))

(defun ar-whitespace-punct-in-page-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of PUNCT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'page 'ar-th-whitespace arg))

(defun ar-punct-in-paragraph-atpt (&optional arg) 
  "Employ actions of  at things class of PUNCT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'paragraph 'ar-th arg))

(defun ar-greaterangle-punct-in-paragraph-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of PUNCT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'paragraph 'ar-th-greaterangle arg))

(defun ar-lesserangle-punct-in-paragraph-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of PUNCT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'paragraph 'ar-th-lesserangle arg))

(defun ar-backslash-punct-in-paragraph-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of PUNCT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'paragraph 'ar-th-backslash arg))

(defun ar-colon-punct-in-paragraph-atpt (&optional arg) 
  "Employ actions of COLON at things class of PUNCT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'paragraph 'ar-th-colon arg))

(defun ar-beg-punct-in-paragraph-atpt (&optional arg) 
  "Employ actions of BEG at things class of PUNCT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'paragraph 'ar-th-beg arg))

(defun ar-blok-punct-in-paragraph-atpt (&optional arg) 
  "Employ actions of BLOK at things class of PUNCT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'paragraph 'ar-th-blok arg))

(defun ar-bounds-punct-in-paragraph-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of PUNCT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'paragraph 'ar-th-bounds arg))

(defun ar-brace-punct-in-paragraph-atpt (&optional arg) 
  "Employ actions of BRACE at things class of PUNCT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'paragraph 'ar-th-brace arg))

(defun ar-bracket-punct-in-paragraph-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of PUNCT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'paragraph 'ar-th-bracket arg))

(defun ar-commatize-punct-in-paragraph-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of PUNCT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'paragraph 'ar-th-commatize arg))

(defun ar-comment-punct-in-paragraph-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of PUNCT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'paragraph 'ar-th-comment arg))

(defun ar-dollar-punct-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of PUNCT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'paragraph 'ar-th-dollar arg))

(defun ar-doublebackslash-punct-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of PUNCT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'paragraph 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-punct-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of PUNCT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'paragraph 'ar-th-doublebacktick arg))

(defun ar-doublequote-punct-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of PUNCT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'paragraph 'ar-th-doublequote arg))

(defun ar-doubleslash-punct-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of PUNCT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'paragraph 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-punct-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of PUNCT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'paragraph 'ar-th-doublebackslashparen arg))

(defun ar-end-punct-in-paragraph-atpt (&optional arg) 
  "Employ actions of END at things class of PUNCT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'paragraph 'ar-th-end arg))

(defun ar-escape-punct-in-paragraph-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of PUNCT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'paragraph 'ar-th-escape arg))

(defun ar-hide-punct-in-paragraph-atpt (&optional arg) 
  "Employ actions of HIDE at things class of PUNCT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'paragraph 'ar-th-hide arg))

(defun ar-hide-show-punct-in-paragraph-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of PUNCT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'paragraph 'ar-th-hide-show arg))

(defun ar-hyphen-punct-in-paragraph-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of PUNCT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'paragraph 'ar-th-hyphen arg))

(defun ar-kill-punct-in-paragraph-atpt (&optional arg) 
  "Employ actions of KILL at things class of PUNCT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'paragraph 'ar-th-kill arg))

(defun ar-leftrightsinglequote-punct-in-paragraph-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of PUNCT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'paragraph 'ar-th-leftrightsinglequote arg))

(defun ar-length-punct-in-paragraph-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of PUNCT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'paragraph 'ar-th-length arg))

(defun ar-parentize-punct-in-paragraph-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of PUNCT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'paragraph 'ar-th-parentize arg))

(defun ar-quote-punct-in-paragraph-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of PUNCT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'paragraph 'ar-th-quote arg))

(defun ar-separate-punct-in-paragraph-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of PUNCT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'paragraph 'ar-th-separate arg))

(defun ar-show-punct-in-paragraph-atpt (&optional arg) 
  "Employ actions of SHOW at things class of PUNCT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'paragraph 'ar-th-show arg))

(defun ar-singlequote-punct-in-paragraph-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of PUNCT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'paragraph 'ar-th-singlequote arg))

(defun ar-slash-punct-in-paragraph-atpt (&optional arg) 
  "Employ actions of SLASH at things class of PUNCT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'paragraph 'ar-th-slash arg))

(defun ar-star-punct-in-paragraph-atpt (&optional arg) 
  "Employ actions of STAR at things class of PUNCT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'paragraph 'ar-th-star arg))

(defun ar-slashparen-punct-in-paragraph-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of PUNCT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'paragraph 'ar-th-slashparen arg))

(defun ar-sort-punct-in-paragraph-atpt (&optional arg) 
  "Employ actions of SORT at things class of PUNCT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'paragraph 'ar-th-sort arg))

(defun ar-trim-punct-in-paragraph-atpt (&optional arg) 
  "Employ actions of TRIM at things class of PUNCT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'paragraph 'ar-th-trim arg))

(defun ar-trim-left-punct-in-paragraph-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of PUNCT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'paragraph 'ar-th-trim-left arg))

(defun ar-trim-right-punct-in-paragraph-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of PUNCT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'paragraph 'ar-th-trim-right arg))

(defun ar-underscore-punct-in-paragraph-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of PUNCT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'paragraph 'ar-th-underscore arg))

(defun ar-whitespace-punct-in-paragraph-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of PUNCT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'paragraph 'ar-th-whitespace arg))

(defun ar-punct-in-region-atpt (&optional arg) 
  "Employ actions of  at things class of PUNCT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'region 'ar-th arg))

(defun ar-greaterangle-punct-in-region-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of PUNCT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'region 'ar-th-greaterangle arg))

(defun ar-lesserangle-punct-in-region-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of PUNCT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'region 'ar-th-lesserangle arg))

(defun ar-backslash-punct-in-region-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of PUNCT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'region 'ar-th-backslash arg))

(defun ar-colon-punct-in-region-atpt (&optional arg) 
  "Employ actions of COLON at things class of PUNCT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'region 'ar-th-colon arg))

(defun ar-beg-punct-in-region-atpt (&optional arg) 
  "Employ actions of BEG at things class of PUNCT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'region 'ar-th-beg arg))

(defun ar-blok-punct-in-region-atpt (&optional arg) 
  "Employ actions of BLOK at things class of PUNCT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'region 'ar-th-blok arg))

(defun ar-bounds-punct-in-region-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of PUNCT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'region 'ar-th-bounds arg))

(defun ar-brace-punct-in-region-atpt (&optional arg) 
  "Employ actions of BRACE at things class of PUNCT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'region 'ar-th-brace arg))

(defun ar-bracket-punct-in-region-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of PUNCT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'region 'ar-th-bracket arg))

(defun ar-commatize-punct-in-region-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of PUNCT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'region 'ar-th-commatize arg))

(defun ar-comment-punct-in-region-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of PUNCT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'region 'ar-th-comment arg))

(defun ar-dollar-punct-in-region-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of PUNCT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'region 'ar-th-dollar arg))

(defun ar-doublebackslash-punct-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of PUNCT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'region 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-punct-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of PUNCT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'region 'ar-th-doublebacktick arg))

(defun ar-doublequote-punct-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of PUNCT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'region 'ar-th-doublequote arg))

(defun ar-doubleslash-punct-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of PUNCT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'region 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-punct-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of PUNCT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'region 'ar-th-doublebackslashparen arg))

(defun ar-end-punct-in-region-atpt (&optional arg) 
  "Employ actions of END at things class of PUNCT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'region 'ar-th-end arg))

(defun ar-escape-punct-in-region-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of PUNCT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'region 'ar-th-escape arg))

(defun ar-hide-punct-in-region-atpt (&optional arg) 
  "Employ actions of HIDE at things class of PUNCT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'region 'ar-th-hide arg))

(defun ar-hide-show-punct-in-region-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of PUNCT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'region 'ar-th-hide-show arg))

(defun ar-hyphen-punct-in-region-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of PUNCT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'region 'ar-th-hyphen arg))

(defun ar-kill-punct-in-region-atpt (&optional arg) 
  "Employ actions of KILL at things class of PUNCT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'region 'ar-th-kill arg))

(defun ar-leftrightsinglequote-punct-in-region-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of PUNCT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'region 'ar-th-leftrightsinglequote arg))

(defun ar-length-punct-in-region-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of PUNCT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'region 'ar-th-length arg))

(defun ar-parentize-punct-in-region-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of PUNCT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'region 'ar-th-parentize arg))

(defun ar-quote-punct-in-region-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of PUNCT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'region 'ar-th-quote arg))

(defun ar-separate-punct-in-region-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of PUNCT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'region 'ar-th-separate arg))

(defun ar-show-punct-in-region-atpt (&optional arg) 
  "Employ actions of SHOW at things class of PUNCT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'region 'ar-th-show arg))

(defun ar-singlequote-punct-in-region-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of PUNCT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'region 'ar-th-singlequote arg))

(defun ar-slash-punct-in-region-atpt (&optional arg) 
  "Employ actions of SLASH at things class of PUNCT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'region 'ar-th-slash arg))

(defun ar-star-punct-in-region-atpt (&optional arg) 
  "Employ actions of STAR at things class of PUNCT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'region 'ar-th-star arg))

(defun ar-slashparen-punct-in-region-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of PUNCT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'region 'ar-th-slashparen arg))

(defun ar-sort-punct-in-region-atpt (&optional arg) 
  "Employ actions of SORT at things class of PUNCT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'region 'ar-th-sort arg))

(defun ar-trim-punct-in-region-atpt (&optional arg) 
  "Employ actions of TRIM at things class of PUNCT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'region 'ar-th-trim arg))

(defun ar-trim-left-punct-in-region-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of PUNCT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'region 'ar-th-trim-left arg))

(defun ar-trim-right-punct-in-region-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of PUNCT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'region 'ar-th-trim-right arg))

(defun ar-underscore-punct-in-region-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of PUNCT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'region 'ar-th-underscore arg))

(defun ar-whitespace-punct-in-region-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of PUNCT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'region 'ar-th-whitespace arg))

(defun ar-punct-in-sentence-atpt (&optional arg) 
  "Employ actions of  at things class of PUNCT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sentence 'ar-th arg))

(defun ar-greaterangle-punct-in-sentence-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of PUNCT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sentence 'ar-th-greaterangle arg))

(defun ar-lesserangle-punct-in-sentence-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of PUNCT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sentence 'ar-th-lesserangle arg))

(defun ar-backslash-punct-in-sentence-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of PUNCT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sentence 'ar-th-backslash arg))

(defun ar-colon-punct-in-sentence-atpt (&optional arg) 
  "Employ actions of COLON at things class of PUNCT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sentence 'ar-th-colon arg))

(defun ar-beg-punct-in-sentence-atpt (&optional arg) 
  "Employ actions of BEG at things class of PUNCT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sentence 'ar-th-beg arg))

(defun ar-blok-punct-in-sentence-atpt (&optional arg) 
  "Employ actions of BLOK at things class of PUNCT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sentence 'ar-th-blok arg))

(defun ar-bounds-punct-in-sentence-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of PUNCT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sentence 'ar-th-bounds arg))

(defun ar-brace-punct-in-sentence-atpt (&optional arg) 
  "Employ actions of BRACE at things class of PUNCT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sentence 'ar-th-brace arg))

(defun ar-bracket-punct-in-sentence-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of PUNCT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sentence 'ar-th-bracket arg))

(defun ar-commatize-punct-in-sentence-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of PUNCT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sentence 'ar-th-commatize arg))

(defun ar-comment-punct-in-sentence-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of PUNCT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sentence 'ar-th-comment arg))

(defun ar-dollar-punct-in-sentence-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of PUNCT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sentence 'ar-th-dollar arg))

(defun ar-doublebackslash-punct-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of PUNCT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sentence 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-punct-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of PUNCT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sentence 'ar-th-doublebacktick arg))

(defun ar-doublequote-punct-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of PUNCT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sentence 'ar-th-doublequote arg))

(defun ar-doubleslash-punct-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of PUNCT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sentence 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-punct-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of PUNCT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sentence 'ar-th-doublebackslashparen arg))

(defun ar-end-punct-in-sentence-atpt (&optional arg) 
  "Employ actions of END at things class of PUNCT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sentence 'ar-th-end arg))

(defun ar-escape-punct-in-sentence-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of PUNCT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sentence 'ar-th-escape arg))

(defun ar-hide-punct-in-sentence-atpt (&optional arg) 
  "Employ actions of HIDE at things class of PUNCT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sentence 'ar-th-hide arg))

(defun ar-hide-show-punct-in-sentence-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of PUNCT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sentence 'ar-th-hide-show arg))

(defun ar-hyphen-punct-in-sentence-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of PUNCT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sentence 'ar-th-hyphen arg))

(defun ar-kill-punct-in-sentence-atpt (&optional arg) 
  "Employ actions of KILL at things class of PUNCT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sentence 'ar-th-kill arg))

(defun ar-leftrightsinglequote-punct-in-sentence-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of PUNCT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sentence 'ar-th-leftrightsinglequote arg))

(defun ar-length-punct-in-sentence-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of PUNCT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sentence 'ar-th-length arg))

(defun ar-parentize-punct-in-sentence-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of PUNCT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sentence 'ar-th-parentize arg))

(defun ar-quote-punct-in-sentence-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of PUNCT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sentence 'ar-th-quote arg))

(defun ar-separate-punct-in-sentence-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of PUNCT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sentence 'ar-th-separate arg))

(defun ar-show-punct-in-sentence-atpt (&optional arg) 
  "Employ actions of SHOW at things class of PUNCT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sentence 'ar-th-show arg))

(defun ar-singlequote-punct-in-sentence-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of PUNCT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sentence 'ar-th-singlequote arg))

(defun ar-slash-punct-in-sentence-atpt (&optional arg) 
  "Employ actions of SLASH at things class of PUNCT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sentence 'ar-th-slash arg))

(defun ar-star-punct-in-sentence-atpt (&optional arg) 
  "Employ actions of STAR at things class of PUNCT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sentence 'ar-th-star arg))

(defun ar-slashparen-punct-in-sentence-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of PUNCT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sentence 'ar-th-slashparen arg))

(defun ar-sort-punct-in-sentence-atpt (&optional arg) 
  "Employ actions of SORT at things class of PUNCT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sentence 'ar-th-sort arg))

(defun ar-trim-punct-in-sentence-atpt (&optional arg) 
  "Employ actions of TRIM at things class of PUNCT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sentence 'ar-th-trim arg))

(defun ar-trim-left-punct-in-sentence-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of PUNCT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sentence 'ar-th-trim-left arg))

(defun ar-trim-right-punct-in-sentence-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of PUNCT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sentence 'ar-th-trim-right arg))

(defun ar-underscore-punct-in-sentence-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of PUNCT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sentence 'ar-th-underscore arg))

(defun ar-whitespace-punct-in-sentence-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of PUNCT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sentence 'ar-th-whitespace arg))

(defun ar-punct-in-sexp-atpt (&optional arg) 
  "Employ actions of  at things class of PUNCT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sexp 'ar-th arg))

(defun ar-greaterangle-punct-in-sexp-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of PUNCT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sexp 'ar-th-greaterangle arg))

(defun ar-lesserangle-punct-in-sexp-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of PUNCT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sexp 'ar-th-lesserangle arg))

(defun ar-backslash-punct-in-sexp-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of PUNCT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sexp 'ar-th-backslash arg))

(defun ar-colon-punct-in-sexp-atpt (&optional arg) 
  "Employ actions of COLON at things class of PUNCT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sexp 'ar-th-colon arg))

(defun ar-beg-punct-in-sexp-atpt (&optional arg) 
  "Employ actions of BEG at things class of PUNCT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sexp 'ar-th-beg arg))

(defun ar-blok-punct-in-sexp-atpt (&optional arg) 
  "Employ actions of BLOK at things class of PUNCT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sexp 'ar-th-blok arg))

(defun ar-bounds-punct-in-sexp-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of PUNCT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sexp 'ar-th-bounds arg))

(defun ar-brace-punct-in-sexp-atpt (&optional arg) 
  "Employ actions of BRACE at things class of PUNCT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sexp 'ar-th-brace arg))

(defun ar-bracket-punct-in-sexp-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of PUNCT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sexp 'ar-th-bracket arg))

(defun ar-commatize-punct-in-sexp-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of PUNCT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sexp 'ar-th-commatize arg))

(defun ar-comment-punct-in-sexp-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of PUNCT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sexp 'ar-th-comment arg))

(defun ar-dollar-punct-in-sexp-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of PUNCT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sexp 'ar-th-dollar arg))

(defun ar-doublebackslash-punct-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of PUNCT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sexp 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-punct-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of PUNCT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sexp 'ar-th-doublebacktick arg))

(defun ar-doublequote-punct-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of PUNCT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sexp 'ar-th-doublequote arg))

(defun ar-doubleslash-punct-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of PUNCT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sexp 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-punct-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of PUNCT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sexp 'ar-th-doublebackslashparen arg))

(defun ar-end-punct-in-sexp-atpt (&optional arg) 
  "Employ actions of END at things class of PUNCT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sexp 'ar-th-end arg))

(defun ar-escape-punct-in-sexp-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of PUNCT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sexp 'ar-th-escape arg))

(defun ar-hide-punct-in-sexp-atpt (&optional arg) 
  "Employ actions of HIDE at things class of PUNCT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sexp 'ar-th-hide arg))

(defun ar-hide-show-punct-in-sexp-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of PUNCT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sexp 'ar-th-hide-show arg))

(defun ar-hyphen-punct-in-sexp-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of PUNCT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sexp 'ar-th-hyphen arg))

(defun ar-kill-punct-in-sexp-atpt (&optional arg) 
  "Employ actions of KILL at things class of PUNCT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sexp 'ar-th-kill arg))

(defun ar-leftrightsinglequote-punct-in-sexp-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of PUNCT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sexp 'ar-th-leftrightsinglequote arg))

(defun ar-length-punct-in-sexp-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of PUNCT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sexp 'ar-th-length arg))

(defun ar-parentize-punct-in-sexp-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of PUNCT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sexp 'ar-th-parentize arg))

(defun ar-quote-punct-in-sexp-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of PUNCT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sexp 'ar-th-quote arg))

(defun ar-separate-punct-in-sexp-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of PUNCT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sexp 'ar-th-separate arg))

(defun ar-show-punct-in-sexp-atpt (&optional arg) 
  "Employ actions of SHOW at things class of PUNCT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sexp 'ar-th-show arg))

(defun ar-singlequote-punct-in-sexp-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of PUNCT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sexp 'ar-th-singlequote arg))

(defun ar-slash-punct-in-sexp-atpt (&optional arg) 
  "Employ actions of SLASH at things class of PUNCT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sexp 'ar-th-slash arg))

(defun ar-star-punct-in-sexp-atpt (&optional arg) 
  "Employ actions of STAR at things class of PUNCT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sexp 'ar-th-star arg))

(defun ar-slashparen-punct-in-sexp-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of PUNCT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sexp 'ar-th-slashparen arg))

(defun ar-sort-punct-in-sexp-atpt (&optional arg) 
  "Employ actions of SORT at things class of PUNCT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sexp 'ar-th-sort arg))

(defun ar-trim-punct-in-sexp-atpt (&optional arg) 
  "Employ actions of TRIM at things class of PUNCT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sexp 'ar-th-trim arg))

(defun ar-trim-left-punct-in-sexp-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of PUNCT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sexp 'ar-th-trim-left arg))

(defun ar-trim-right-punct-in-sexp-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of PUNCT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sexp 'ar-th-trim-right arg))

(defun ar-underscore-punct-in-sexp-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of PUNCT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sexp 'ar-th-underscore arg))

(defun ar-whitespace-punct-in-sexp-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of PUNCT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'sexp 'ar-th-whitespace arg))

(defun ar-punct-in-shstruct-atpt (&optional arg) 
  "Employ actions of  at things class of PUNCT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'shstruct 'ar-th arg))

(defun ar-greaterangle-punct-in-shstruct-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of PUNCT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'shstruct 'ar-th-greaterangle arg))

(defun ar-lesserangle-punct-in-shstruct-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of PUNCT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'shstruct 'ar-th-lesserangle arg))

(defun ar-backslash-punct-in-shstruct-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of PUNCT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'shstruct 'ar-th-backslash arg))

(defun ar-colon-punct-in-shstruct-atpt (&optional arg) 
  "Employ actions of COLON at things class of PUNCT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'shstruct 'ar-th-colon arg))

(defun ar-beg-punct-in-shstruct-atpt (&optional arg) 
  "Employ actions of BEG at things class of PUNCT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'shstruct 'ar-th-beg arg))

(defun ar-blok-punct-in-shstruct-atpt (&optional arg) 
  "Employ actions of BLOK at things class of PUNCT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'shstruct 'ar-th-blok arg))

(defun ar-bounds-punct-in-shstruct-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of PUNCT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'shstruct 'ar-th-bounds arg))

(defun ar-brace-punct-in-shstruct-atpt (&optional arg) 
  "Employ actions of BRACE at things class of PUNCT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'shstruct 'ar-th-brace arg))

(defun ar-bracket-punct-in-shstruct-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of PUNCT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'shstruct 'ar-th-bracket arg))

(defun ar-commatize-punct-in-shstruct-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of PUNCT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'shstruct 'ar-th-commatize arg))

(defun ar-comment-punct-in-shstruct-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of PUNCT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'shstruct 'ar-th-comment arg))

(defun ar-dollar-punct-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of PUNCT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'shstruct 'ar-th-dollar arg))

(defun ar-doublebackslash-punct-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of PUNCT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'shstruct 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-punct-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of PUNCT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'shstruct 'ar-th-doublebacktick arg))

(defun ar-doublequote-punct-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of PUNCT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'shstruct 'ar-th-doublequote arg))

(defun ar-doubleslash-punct-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of PUNCT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'shstruct 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-punct-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of PUNCT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'shstruct 'ar-th-doublebackslashparen arg))

(defun ar-end-punct-in-shstruct-atpt (&optional arg) 
  "Employ actions of END at things class of PUNCT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'shstruct 'ar-th-end arg))

(defun ar-escape-punct-in-shstruct-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of PUNCT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'shstruct 'ar-th-escape arg))

(defun ar-hide-punct-in-shstruct-atpt (&optional arg) 
  "Employ actions of HIDE at things class of PUNCT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'shstruct 'ar-th-hide arg))

(defun ar-hide-show-punct-in-shstruct-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of PUNCT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'shstruct 'ar-th-hide-show arg))

(defun ar-hyphen-punct-in-shstruct-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of PUNCT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'shstruct 'ar-th-hyphen arg))

(defun ar-kill-punct-in-shstruct-atpt (&optional arg) 
  "Employ actions of KILL at things class of PUNCT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'shstruct 'ar-th-kill arg))

(defun ar-leftrightsinglequote-punct-in-shstruct-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of PUNCT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'shstruct 'ar-th-leftrightsinglequote arg))

(defun ar-length-punct-in-shstruct-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of PUNCT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'shstruct 'ar-th-length arg))

(defun ar-parentize-punct-in-shstruct-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of PUNCT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'shstruct 'ar-th-parentize arg))

(defun ar-quote-punct-in-shstruct-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of PUNCT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'shstruct 'ar-th-quote arg))

(defun ar-separate-punct-in-shstruct-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of PUNCT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'shstruct 'ar-th-separate arg))

(defun ar-show-punct-in-shstruct-atpt (&optional arg) 
  "Employ actions of SHOW at things class of PUNCT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'shstruct 'ar-th-show arg))

(defun ar-singlequote-punct-in-shstruct-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of PUNCT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'shstruct 'ar-th-singlequote arg))

(defun ar-slash-punct-in-shstruct-atpt (&optional arg) 
  "Employ actions of SLASH at things class of PUNCT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'shstruct 'ar-th-slash arg))

(defun ar-star-punct-in-shstruct-atpt (&optional arg) 
  "Employ actions of STAR at things class of PUNCT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'shstruct 'ar-th-star arg))

(defun ar-slashparen-punct-in-shstruct-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of PUNCT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'shstruct 'ar-th-slashparen arg))

(defun ar-sort-punct-in-shstruct-atpt (&optional arg) 
  "Employ actions of SORT at things class of PUNCT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'shstruct 'ar-th-sort arg))

(defun ar-trim-punct-in-shstruct-atpt (&optional arg) 
  "Employ actions of TRIM at things class of PUNCT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'shstruct 'ar-th-trim arg))

(defun ar-trim-left-punct-in-shstruct-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of PUNCT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'shstruct 'ar-th-trim-left arg))

(defun ar-trim-right-punct-in-shstruct-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of PUNCT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'shstruct 'ar-th-trim-right arg))

(defun ar-underscore-punct-in-shstruct-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of PUNCT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'shstruct 'ar-th-underscore arg))

(defun ar-whitespace-punct-in-shstruct-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of PUNCT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'punct 'shstruct 'ar-th-whitespace arg))

(defun ar-space-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of  at things class of SPACE residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'greateranglednested 'ar-th arg))

(defun ar-greaterangle-space-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of SPACE residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'greateranglednested 'ar-th-greaterangle arg))

(defun ar-lesserangle-space-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of SPACE residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'greateranglednested 'ar-th-lesserangle arg))

(defun ar-backslash-space-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of SPACE residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'greateranglednested 'ar-th-backslash arg))

(defun ar-colon-space-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of COLON at things class of SPACE residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'greateranglednested 'ar-th-colon arg))

(defun ar-beg-space-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BEG at things class of SPACE residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'greateranglednested 'ar-th-beg arg))

(defun ar-blok-space-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BLOK at things class of SPACE residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'greateranglednested 'ar-th-blok arg))

(defun ar-bounds-space-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of SPACE residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'greateranglednested 'ar-th-bounds arg))

(defun ar-brace-space-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BRACE at things class of SPACE residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'greateranglednested 'ar-th-brace arg))

(defun ar-bracket-space-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of SPACE residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'greateranglednested 'ar-th-bracket arg))

(defun ar-commatize-space-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of SPACE residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'greateranglednested 'ar-th-commatize arg))

(defun ar-comment-space-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of SPACE residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'greateranglednested 'ar-th-comment arg))

(defun ar-dollar-space-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of SPACE residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'greateranglednested 'ar-th-dollar arg))

(defun ar-doublebackslash-space-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of SPACE residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'greateranglednested 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-space-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of SPACE residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'greateranglednested 'ar-th-doublebacktick arg))

(defun ar-doublequote-space-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of SPACE residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'greateranglednested 'ar-th-doublequote arg))

(defun ar-doubleslash-space-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of SPACE residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'greateranglednested 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-space-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of SPACE residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'greateranglednested 'ar-th-doublebackslashparen arg))

(defun ar-end-space-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of END at things class of SPACE residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'greateranglednested 'ar-th-end arg))

(defun ar-escape-space-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of SPACE residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'greateranglednested 'ar-th-escape arg))

(defun ar-hide-space-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of HIDE at things class of SPACE residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'greateranglednested 'ar-th-hide arg))

(defun ar-hide-show-space-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of SPACE residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'greateranglednested 'ar-th-hide-show arg))

(defun ar-hyphen-space-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of SPACE residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'greateranglednested 'ar-th-hyphen arg))

(defun ar-kill-space-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of KILL at things class of SPACE residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'greateranglednested 'ar-th-kill arg))

(defun ar-leftrightsinglequote-space-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of SPACE residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'greateranglednested 'ar-th-leftrightsinglequote arg))

(defun ar-length-space-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of SPACE residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'greateranglednested 'ar-th-length arg))

(defun ar-parentize-space-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of SPACE residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'greateranglednested 'ar-th-parentize arg))

(defun ar-quote-space-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of SPACE residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'greateranglednested 'ar-th-quote arg))

(defun ar-separate-space-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of SPACE residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'greateranglednested 'ar-th-separate arg))

(defun ar-show-space-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SHOW at things class of SPACE residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'greateranglednested 'ar-th-show arg))

(defun ar-singlequote-space-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of SPACE residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'greateranglednested 'ar-th-singlequote arg))

(defun ar-slash-space-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SLASH at things class of SPACE residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'greateranglednested 'ar-th-slash arg))

(defun ar-star-space-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of STAR at things class of SPACE residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'greateranglednested 'ar-th-star arg))

(defun ar-slashparen-space-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of SPACE residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'greateranglednested 'ar-th-slashparen arg))

(defun ar-sort-space-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SORT at things class of SPACE residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'greateranglednested 'ar-th-sort arg))

(defun ar-trim-space-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of TRIM at things class of SPACE residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'greateranglednested 'ar-th-trim arg))

(defun ar-trim-left-space-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of SPACE residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'greateranglednested 'ar-th-trim-left arg))

(defun ar-trim-right-space-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of SPACE residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'greateranglednested 'ar-th-trim-right arg))

(defun ar-underscore-space-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of SPACE residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'greateranglednested 'ar-th-underscore arg))

(defun ar-whitespace-space-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of SPACE residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'greateranglednested 'ar-th-whitespace arg))

(defun ar-space-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of  at things class of SPACE residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'lesseranglednested 'ar-th arg))

(defun ar-greaterangle-space-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of SPACE residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'lesseranglednested 'ar-th-greaterangle arg))

(defun ar-lesserangle-space-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of SPACE residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'lesseranglednested 'ar-th-lesserangle arg))

(defun ar-backslash-space-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of SPACE residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'lesseranglednested 'ar-th-backslash arg))

(defun ar-colon-space-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of COLON at things class of SPACE residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'lesseranglednested 'ar-th-colon arg))

(defun ar-beg-space-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BEG at things class of SPACE residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'lesseranglednested 'ar-th-beg arg))

(defun ar-blok-space-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BLOK at things class of SPACE residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'lesseranglednested 'ar-th-blok arg))

(defun ar-bounds-space-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of SPACE residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'lesseranglednested 'ar-th-bounds arg))

(defun ar-brace-space-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BRACE at things class of SPACE residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'lesseranglednested 'ar-th-brace arg))

(defun ar-bracket-space-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of SPACE residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'lesseranglednested 'ar-th-bracket arg))

(defun ar-commatize-space-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of SPACE residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'lesseranglednested 'ar-th-commatize arg))

(defun ar-comment-space-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of SPACE residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'lesseranglednested 'ar-th-comment arg))

(defun ar-dollar-space-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of SPACE residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'lesseranglednested 'ar-th-dollar arg))

(defun ar-doublebackslash-space-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of SPACE residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'lesseranglednested 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-space-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of SPACE residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'lesseranglednested 'ar-th-doublebacktick arg))

(defun ar-doublequote-space-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of SPACE residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'lesseranglednested 'ar-th-doublequote arg))

(defun ar-doubleslash-space-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of SPACE residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'lesseranglednested 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-space-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of SPACE residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'lesseranglednested 'ar-th-doublebackslashparen arg))

(defun ar-end-space-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of END at things class of SPACE residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'lesseranglednested 'ar-th-end arg))

(defun ar-escape-space-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of SPACE residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'lesseranglednested 'ar-th-escape arg))

(defun ar-hide-space-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of HIDE at things class of SPACE residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'lesseranglednested 'ar-th-hide arg))

(defun ar-hide-show-space-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of SPACE residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'lesseranglednested 'ar-th-hide-show arg))

(defun ar-hyphen-space-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of SPACE residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'lesseranglednested 'ar-th-hyphen arg))

(defun ar-kill-space-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of KILL at things class of SPACE residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'lesseranglednested 'ar-th-kill arg))

(defun ar-leftrightsinglequote-space-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of SPACE residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'lesseranglednested 'ar-th-leftrightsinglequote arg))

(defun ar-length-space-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of SPACE residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'lesseranglednested 'ar-th-length arg))

(defun ar-parentize-space-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of SPACE residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'lesseranglednested 'ar-th-parentize arg))

(defun ar-quote-space-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of SPACE residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'lesseranglednested 'ar-th-quote arg))

(defun ar-separate-space-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of SPACE residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'lesseranglednested 'ar-th-separate arg))

(defun ar-show-space-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SHOW at things class of SPACE residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'lesseranglednested 'ar-th-show arg))

(defun ar-singlequote-space-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of SPACE residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'lesseranglednested 'ar-th-singlequote arg))

(defun ar-slash-space-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SLASH at things class of SPACE residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'lesseranglednested 'ar-th-slash arg))

(defun ar-star-space-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of STAR at things class of SPACE residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'lesseranglednested 'ar-th-star arg))

(defun ar-slashparen-space-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of SPACE residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'lesseranglednested 'ar-th-slashparen arg))

(defun ar-sort-space-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SORT at things class of SPACE residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'lesseranglednested 'ar-th-sort arg))

(defun ar-trim-space-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of TRIM at things class of SPACE residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'lesseranglednested 'ar-th-trim arg))

(defun ar-trim-left-space-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of SPACE residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'lesseranglednested 'ar-th-trim-left arg))

(defun ar-trim-right-space-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of SPACE residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'lesseranglednested 'ar-th-trim-right arg))

(defun ar-underscore-space-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of SPACE residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'lesseranglednested 'ar-th-underscore arg))

(defun ar-whitespace-space-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of SPACE residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'lesseranglednested 'ar-th-whitespace arg))

(defun ar-space-in-buffer-atpt (&optional arg) 
  "Employ actions of  at things class of SPACE residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'buffer 'ar-th arg))

(defun ar-greaterangle-space-in-buffer-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of SPACE residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'buffer 'ar-th-greaterangle arg))

(defun ar-lesserangle-space-in-buffer-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of SPACE residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'buffer 'ar-th-lesserangle arg))

(defun ar-backslash-space-in-buffer-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of SPACE residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'buffer 'ar-th-backslash arg))

(defun ar-colon-space-in-buffer-atpt (&optional arg) 
  "Employ actions of COLON at things class of SPACE residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'buffer 'ar-th-colon arg))

(defun ar-beg-space-in-buffer-atpt (&optional arg) 
  "Employ actions of BEG at things class of SPACE residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'buffer 'ar-th-beg arg))

(defun ar-blok-space-in-buffer-atpt (&optional arg) 
  "Employ actions of BLOK at things class of SPACE residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'buffer 'ar-th-blok arg))

(defun ar-bounds-space-in-buffer-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of SPACE residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'buffer 'ar-th-bounds arg))

(defun ar-brace-space-in-buffer-atpt (&optional arg) 
  "Employ actions of BRACE at things class of SPACE residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'buffer 'ar-th-brace arg))

(defun ar-bracket-space-in-buffer-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of SPACE residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'buffer 'ar-th-bracket arg))

(defun ar-commatize-space-in-buffer-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of SPACE residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'buffer 'ar-th-commatize arg))

(defun ar-comment-space-in-buffer-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of SPACE residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'buffer 'ar-th-comment arg))

(defun ar-dollar-space-in-buffer-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of SPACE residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'buffer 'ar-th-dollar arg))

(defun ar-doublebackslash-space-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of SPACE residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'buffer 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-space-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of SPACE residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'buffer 'ar-th-doublebacktick arg))

(defun ar-doublequote-space-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of SPACE residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'buffer 'ar-th-doublequote arg))

(defun ar-doubleslash-space-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of SPACE residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'buffer 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-space-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of SPACE residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'buffer 'ar-th-doublebackslashparen arg))

(defun ar-end-space-in-buffer-atpt (&optional arg) 
  "Employ actions of END at things class of SPACE residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'buffer 'ar-th-end arg))

(defun ar-escape-space-in-buffer-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of SPACE residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'buffer 'ar-th-escape arg))

(defun ar-hide-space-in-buffer-atpt (&optional arg) 
  "Employ actions of HIDE at things class of SPACE residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'buffer 'ar-th-hide arg))

(defun ar-hide-show-space-in-buffer-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of SPACE residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'buffer 'ar-th-hide-show arg))

(defun ar-hyphen-space-in-buffer-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of SPACE residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'buffer 'ar-th-hyphen arg))

(defun ar-kill-space-in-buffer-atpt (&optional arg) 
  "Employ actions of KILL at things class of SPACE residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'buffer 'ar-th-kill arg))

(defun ar-leftrightsinglequote-space-in-buffer-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of SPACE residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'buffer 'ar-th-leftrightsinglequote arg))

(defun ar-length-space-in-buffer-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of SPACE residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'buffer 'ar-th-length arg))

(defun ar-parentize-space-in-buffer-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of SPACE residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'buffer 'ar-th-parentize arg))

(defun ar-quote-space-in-buffer-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of SPACE residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'buffer 'ar-th-quote arg))

(defun ar-separate-space-in-buffer-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of SPACE residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'buffer 'ar-th-separate arg))

(defun ar-show-space-in-buffer-atpt (&optional arg) 
  "Employ actions of SHOW at things class of SPACE residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'buffer 'ar-th-show arg))

(defun ar-singlequote-space-in-buffer-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of SPACE residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'buffer 'ar-th-singlequote arg))

(defun ar-slash-space-in-buffer-atpt (&optional arg) 
  "Employ actions of SLASH at things class of SPACE residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'buffer 'ar-th-slash arg))

(defun ar-star-space-in-buffer-atpt (&optional arg) 
  "Employ actions of STAR at things class of SPACE residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'buffer 'ar-th-star arg))

(defun ar-slashparen-space-in-buffer-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of SPACE residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'buffer 'ar-th-slashparen arg))

(defun ar-sort-space-in-buffer-atpt (&optional arg) 
  "Employ actions of SORT at things class of SPACE residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'buffer 'ar-th-sort arg))

(defun ar-trim-space-in-buffer-atpt (&optional arg) 
  "Employ actions of TRIM at things class of SPACE residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'buffer 'ar-th-trim arg))

(defun ar-trim-left-space-in-buffer-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of SPACE residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'buffer 'ar-th-trim-left arg))

(defun ar-trim-right-space-in-buffer-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of SPACE residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'buffer 'ar-th-trim-right arg))

(defun ar-underscore-space-in-buffer-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of SPACE residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'buffer 'ar-th-underscore arg))

(defun ar-whitespace-space-in-buffer-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of SPACE residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'buffer 'ar-th-whitespace arg))

(defun ar-space-in-comment-atpt (&optional arg) 
  "Employ actions of  at things class of SPACE residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'comment 'ar-th arg))

(defun ar-greaterangle-space-in-comment-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of SPACE residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'comment 'ar-th-greaterangle arg))

(defun ar-lesserangle-space-in-comment-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of SPACE residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'comment 'ar-th-lesserangle arg))

(defun ar-backslash-space-in-comment-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of SPACE residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'comment 'ar-th-backslash arg))

(defun ar-colon-space-in-comment-atpt (&optional arg) 
  "Employ actions of COLON at things class of SPACE residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'comment 'ar-th-colon arg))

(defun ar-beg-space-in-comment-atpt (&optional arg) 
  "Employ actions of BEG at things class of SPACE residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'comment 'ar-th-beg arg))

(defun ar-blok-space-in-comment-atpt (&optional arg) 
  "Employ actions of BLOK at things class of SPACE residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'comment 'ar-th-blok arg))

(defun ar-bounds-space-in-comment-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of SPACE residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'comment 'ar-th-bounds arg))

(defun ar-brace-space-in-comment-atpt (&optional arg) 
  "Employ actions of BRACE at things class of SPACE residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'comment 'ar-th-brace arg))

(defun ar-bracket-space-in-comment-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of SPACE residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'comment 'ar-th-bracket arg))

(defun ar-commatize-space-in-comment-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of SPACE residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'comment 'ar-th-commatize arg))

(defun ar-comment-space-in-comment-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of SPACE residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'comment 'ar-th-comment arg))

(defun ar-dollar-space-in-comment-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of SPACE residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'comment 'ar-th-dollar arg))

(defun ar-doublebackslash-space-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of SPACE residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'comment 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-space-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of SPACE residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'comment 'ar-th-doublebacktick arg))

(defun ar-doublequote-space-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of SPACE residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'comment 'ar-th-doublequote arg))

(defun ar-doubleslash-space-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of SPACE residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'comment 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-space-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of SPACE residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'comment 'ar-th-doublebackslashparen arg))

(defun ar-end-space-in-comment-atpt (&optional arg) 
  "Employ actions of END at things class of SPACE residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'comment 'ar-th-end arg))

(defun ar-escape-space-in-comment-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of SPACE residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'comment 'ar-th-escape arg))

(defun ar-hide-space-in-comment-atpt (&optional arg) 
  "Employ actions of HIDE at things class of SPACE residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'comment 'ar-th-hide arg))

(defun ar-hide-show-space-in-comment-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of SPACE residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'comment 'ar-th-hide-show arg))

(defun ar-hyphen-space-in-comment-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of SPACE residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'comment 'ar-th-hyphen arg))

(defun ar-kill-space-in-comment-atpt (&optional arg) 
  "Employ actions of KILL at things class of SPACE residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'comment 'ar-th-kill arg))

(defun ar-leftrightsinglequote-space-in-comment-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of SPACE residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'comment 'ar-th-leftrightsinglequote arg))

(defun ar-length-space-in-comment-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of SPACE residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'comment 'ar-th-length arg))

(defun ar-parentize-space-in-comment-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of SPACE residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'comment 'ar-th-parentize arg))

(defun ar-quote-space-in-comment-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of SPACE residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'comment 'ar-th-quote arg))

(defun ar-separate-space-in-comment-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of SPACE residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'comment 'ar-th-separate arg))

(defun ar-show-space-in-comment-atpt (&optional arg) 
  "Employ actions of SHOW at things class of SPACE residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'comment 'ar-th-show arg))

(defun ar-singlequote-space-in-comment-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of SPACE residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'comment 'ar-th-singlequote arg))

(defun ar-slash-space-in-comment-atpt (&optional arg) 
  "Employ actions of SLASH at things class of SPACE residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'comment 'ar-th-slash arg))

(defun ar-star-space-in-comment-atpt (&optional arg) 
  "Employ actions of STAR at things class of SPACE residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'comment 'ar-th-star arg))

(defun ar-slashparen-space-in-comment-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of SPACE residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'comment 'ar-th-slashparen arg))

(defun ar-sort-space-in-comment-atpt (&optional arg) 
  "Employ actions of SORT at things class of SPACE residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'comment 'ar-th-sort arg))

(defun ar-trim-space-in-comment-atpt (&optional arg) 
  "Employ actions of TRIM at things class of SPACE residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'comment 'ar-th-trim arg))

(defun ar-trim-left-space-in-comment-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of SPACE residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'comment 'ar-th-trim-left arg))

(defun ar-trim-right-space-in-comment-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of SPACE residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'comment 'ar-th-trim-right arg))

(defun ar-underscore-space-in-comment-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of SPACE residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'comment 'ar-th-underscore arg))

(defun ar-whitespace-space-in-comment-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of SPACE residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'comment 'ar-th-whitespace arg))

(defun ar-space-in-csv-atpt (&optional arg) 
  "Employ actions of  at things class of SPACE residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'csv 'ar-th arg))

(defun ar-greaterangle-space-in-csv-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of SPACE residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'csv 'ar-th-greaterangle arg))

(defun ar-lesserangle-space-in-csv-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of SPACE residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'csv 'ar-th-lesserangle arg))

(defun ar-backslash-space-in-csv-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of SPACE residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'csv 'ar-th-backslash arg))

(defun ar-colon-space-in-csv-atpt (&optional arg) 
  "Employ actions of COLON at things class of SPACE residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'csv 'ar-th-colon arg))

(defun ar-beg-space-in-csv-atpt (&optional arg) 
  "Employ actions of BEG at things class of SPACE residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'csv 'ar-th-beg arg))

(defun ar-blok-space-in-csv-atpt (&optional arg) 
  "Employ actions of BLOK at things class of SPACE residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'csv 'ar-th-blok arg))

(defun ar-bounds-space-in-csv-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of SPACE residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'csv 'ar-th-bounds arg))

(defun ar-brace-space-in-csv-atpt (&optional arg) 
  "Employ actions of BRACE at things class of SPACE residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'csv 'ar-th-brace arg))

(defun ar-bracket-space-in-csv-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of SPACE residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'csv 'ar-th-bracket arg))

(defun ar-commatize-space-in-csv-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of SPACE residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'csv 'ar-th-commatize arg))

(defun ar-comment-space-in-csv-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of SPACE residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'csv 'ar-th-comment arg))

(defun ar-dollar-space-in-csv-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of SPACE residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'csv 'ar-th-dollar arg))

(defun ar-doublebackslash-space-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of SPACE residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'csv 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-space-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of SPACE residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'csv 'ar-th-doublebacktick arg))

(defun ar-doublequote-space-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of SPACE residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'csv 'ar-th-doublequote arg))

(defun ar-doubleslash-space-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of SPACE residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'csv 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-space-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of SPACE residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'csv 'ar-th-doublebackslashparen arg))

(defun ar-end-space-in-csv-atpt (&optional arg) 
  "Employ actions of END at things class of SPACE residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'csv 'ar-th-end arg))

(defun ar-escape-space-in-csv-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of SPACE residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'csv 'ar-th-escape arg))

(defun ar-hide-space-in-csv-atpt (&optional arg) 
  "Employ actions of HIDE at things class of SPACE residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'csv 'ar-th-hide arg))

(defun ar-hide-show-space-in-csv-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of SPACE residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'csv 'ar-th-hide-show arg))

(defun ar-hyphen-space-in-csv-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of SPACE residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'csv 'ar-th-hyphen arg))

(defun ar-kill-space-in-csv-atpt (&optional arg) 
  "Employ actions of KILL at things class of SPACE residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'csv 'ar-th-kill arg))

(defun ar-leftrightsinglequote-space-in-csv-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of SPACE residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'csv 'ar-th-leftrightsinglequote arg))

(defun ar-length-space-in-csv-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of SPACE residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'csv 'ar-th-length arg))

(defun ar-parentize-space-in-csv-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of SPACE residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'csv 'ar-th-parentize arg))

(defun ar-quote-space-in-csv-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of SPACE residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'csv 'ar-th-quote arg))

(defun ar-separate-space-in-csv-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of SPACE residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'csv 'ar-th-separate arg))

(defun ar-show-space-in-csv-atpt (&optional arg) 
  "Employ actions of SHOW at things class of SPACE residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'csv 'ar-th-show arg))

(defun ar-singlequote-space-in-csv-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of SPACE residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'csv 'ar-th-singlequote arg))

(defun ar-slash-space-in-csv-atpt (&optional arg) 
  "Employ actions of SLASH at things class of SPACE residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'csv 'ar-th-slash arg))

(defun ar-star-space-in-csv-atpt (&optional arg) 
  "Employ actions of STAR at things class of SPACE residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'csv 'ar-th-star arg))

(defun ar-slashparen-space-in-csv-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of SPACE residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'csv 'ar-th-slashparen arg))

(defun ar-sort-space-in-csv-atpt (&optional arg) 
  "Employ actions of SORT at things class of SPACE residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'csv 'ar-th-sort arg))

(defun ar-trim-space-in-csv-atpt (&optional arg) 
  "Employ actions of TRIM at things class of SPACE residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'csv 'ar-th-trim arg))

(defun ar-trim-left-space-in-csv-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of SPACE residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'csv 'ar-th-trim-left arg))

(defun ar-trim-right-space-in-csv-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of SPACE residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'csv 'ar-th-trim-right arg))

(defun ar-underscore-space-in-csv-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of SPACE residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'csv 'ar-th-underscore arg))

(defun ar-whitespace-space-in-csv-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of SPACE residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'csv 'ar-th-whitespace arg))

(defun ar-space-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of  at things class of SPACE residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'filenamenondirectory 'ar-th arg))

(defun ar-greaterangle-space-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of SPACE residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'filenamenondirectory 'ar-th-greaterangle arg))

(defun ar-lesserangle-space-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of SPACE residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'filenamenondirectory 'ar-th-lesserangle arg))

(defun ar-backslash-space-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of SPACE residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'filenamenondirectory 'ar-th-backslash arg))

(defun ar-colon-space-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of COLON at things class of SPACE residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'filenamenondirectory 'ar-th-colon arg))

(defun ar-beg-space-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BEG at things class of SPACE residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'filenamenondirectory 'ar-th-beg arg))

(defun ar-blok-space-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BLOK at things class of SPACE residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'filenamenondirectory 'ar-th-blok arg))

(defun ar-bounds-space-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of SPACE residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'filenamenondirectory 'ar-th-bounds arg))

(defun ar-brace-space-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BRACE at things class of SPACE residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'filenamenondirectory 'ar-th-brace arg))

(defun ar-bracket-space-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of SPACE residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'filenamenondirectory 'ar-th-bracket arg))

(defun ar-commatize-space-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of SPACE residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'filenamenondirectory 'ar-th-commatize arg))

(defun ar-comment-space-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of SPACE residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'filenamenondirectory 'ar-th-comment arg))

(defun ar-dollar-space-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of SPACE residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'filenamenondirectory 'ar-th-dollar arg))

(defun ar-doublebackslash-space-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of SPACE residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'filenamenondirectory 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-space-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of SPACE residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'filenamenondirectory 'ar-th-doublebacktick arg))

(defun ar-doublequote-space-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of SPACE residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'filenamenondirectory 'ar-th-doublequote arg))

(defun ar-doubleslash-space-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of SPACE residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'filenamenondirectory 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-space-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of SPACE residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'filenamenondirectory 'ar-th-doublebackslashparen arg))

(defun ar-end-space-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of END at things class of SPACE residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'filenamenondirectory 'ar-th-end arg))

(defun ar-escape-space-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of SPACE residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'filenamenondirectory 'ar-th-escape arg))

(defun ar-hide-space-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of HIDE at things class of SPACE residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'filenamenondirectory 'ar-th-hide arg))

(defun ar-hide-show-space-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of SPACE residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'filenamenondirectory 'ar-th-hide-show arg))

(defun ar-hyphen-space-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of SPACE residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'filenamenondirectory 'ar-th-hyphen arg))

(defun ar-kill-space-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of KILL at things class of SPACE residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'filenamenondirectory 'ar-th-kill arg))

(defun ar-leftrightsinglequote-space-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of SPACE residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'filenamenondirectory 'ar-th-leftrightsinglequote arg))

(defun ar-length-space-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of SPACE residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'filenamenondirectory 'ar-th-length arg))

(defun ar-parentize-space-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of SPACE residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'filenamenondirectory 'ar-th-parentize arg))

(defun ar-quote-space-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of SPACE residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'filenamenondirectory 'ar-th-quote arg))

(defun ar-separate-space-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of SPACE residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'filenamenondirectory 'ar-th-separate arg))

(defun ar-show-space-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SHOW at things class of SPACE residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'filenamenondirectory 'ar-th-show arg))

(defun ar-singlequote-space-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of SPACE residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'filenamenondirectory 'ar-th-singlequote arg))

(defun ar-slash-space-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SLASH at things class of SPACE residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'filenamenondirectory 'ar-th-slash arg))

(defun ar-star-space-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of STAR at things class of SPACE residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'filenamenondirectory 'ar-th-star arg))

(defun ar-slashparen-space-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of SPACE residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'filenamenondirectory 'ar-th-slashparen arg))

(defun ar-sort-space-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SORT at things class of SPACE residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'filenamenondirectory 'ar-th-sort arg))

(defun ar-trim-space-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of TRIM at things class of SPACE residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'filenamenondirectory 'ar-th-trim arg))

(defun ar-trim-left-space-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of SPACE residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'filenamenondirectory 'ar-th-trim-left arg))

(defun ar-trim-right-space-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of SPACE residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'filenamenondirectory 'ar-th-trim-right arg))

(defun ar-underscore-space-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of SPACE residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'filenamenondirectory 'ar-th-underscore arg))

(defun ar-whitespace-space-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of SPACE residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'filenamenondirectory 'ar-th-whitespace arg))

(defun ar-space-in-function-atpt (&optional arg) 
  "Employ actions of  at things class of SPACE residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'function 'ar-th arg))

(defun ar-greaterangle-space-in-function-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of SPACE residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'function 'ar-th-greaterangle arg))

(defun ar-lesserangle-space-in-function-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of SPACE residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'function 'ar-th-lesserangle arg))

(defun ar-backslash-space-in-function-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of SPACE residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'function 'ar-th-backslash arg))

(defun ar-colon-space-in-function-atpt (&optional arg) 
  "Employ actions of COLON at things class of SPACE residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'function 'ar-th-colon arg))

(defun ar-beg-space-in-function-atpt (&optional arg) 
  "Employ actions of BEG at things class of SPACE residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'function 'ar-th-beg arg))

(defun ar-blok-space-in-function-atpt (&optional arg) 
  "Employ actions of BLOK at things class of SPACE residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'function 'ar-th-blok arg))

(defun ar-bounds-space-in-function-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of SPACE residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'function 'ar-th-bounds arg))

(defun ar-brace-space-in-function-atpt (&optional arg) 
  "Employ actions of BRACE at things class of SPACE residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'function 'ar-th-brace arg))

(defun ar-bracket-space-in-function-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of SPACE residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'function 'ar-th-bracket arg))

(defun ar-commatize-space-in-function-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of SPACE residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'function 'ar-th-commatize arg))

(defun ar-comment-space-in-function-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of SPACE residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'function 'ar-th-comment arg))

(defun ar-dollar-space-in-function-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of SPACE residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'function 'ar-th-dollar arg))

(defun ar-doublebackslash-space-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of SPACE residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'function 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-space-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of SPACE residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'function 'ar-th-doublebacktick arg))

(defun ar-doublequote-space-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of SPACE residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'function 'ar-th-doublequote arg))

(defun ar-doubleslash-space-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of SPACE residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'function 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-space-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of SPACE residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'function 'ar-th-doublebackslashparen arg))

(defun ar-end-space-in-function-atpt (&optional arg) 
  "Employ actions of END at things class of SPACE residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'function 'ar-th-end arg))

(defun ar-escape-space-in-function-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of SPACE residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'function 'ar-th-escape arg))

(defun ar-hide-space-in-function-atpt (&optional arg) 
  "Employ actions of HIDE at things class of SPACE residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'function 'ar-th-hide arg))

(defun ar-hide-show-space-in-function-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of SPACE residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'function 'ar-th-hide-show arg))

(defun ar-hyphen-space-in-function-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of SPACE residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'function 'ar-th-hyphen arg))

(defun ar-kill-space-in-function-atpt (&optional arg) 
  "Employ actions of KILL at things class of SPACE residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'function 'ar-th-kill arg))

(defun ar-leftrightsinglequote-space-in-function-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of SPACE residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'function 'ar-th-leftrightsinglequote arg))

(defun ar-length-space-in-function-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of SPACE residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'function 'ar-th-length arg))

(defun ar-parentize-space-in-function-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of SPACE residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'function 'ar-th-parentize arg))

(defun ar-quote-space-in-function-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of SPACE residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'function 'ar-th-quote arg))

(defun ar-separate-space-in-function-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of SPACE residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'function 'ar-th-separate arg))

(defun ar-show-space-in-function-atpt (&optional arg) 
  "Employ actions of SHOW at things class of SPACE residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'function 'ar-th-show arg))

(defun ar-singlequote-space-in-function-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of SPACE residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'function 'ar-th-singlequote arg))

(defun ar-slash-space-in-function-atpt (&optional arg) 
  "Employ actions of SLASH at things class of SPACE residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'function 'ar-th-slash arg))

(defun ar-star-space-in-function-atpt (&optional arg) 
  "Employ actions of STAR at things class of SPACE residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'function 'ar-th-star arg))

(defun ar-slashparen-space-in-function-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of SPACE residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'function 'ar-th-slashparen arg))

(defun ar-sort-space-in-function-atpt (&optional arg) 
  "Employ actions of SORT at things class of SPACE residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'function 'ar-th-sort arg))

(defun ar-trim-space-in-function-atpt (&optional arg) 
  "Employ actions of TRIM at things class of SPACE residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'function 'ar-th-trim arg))

(defun ar-trim-left-space-in-function-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of SPACE residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'function 'ar-th-trim-left arg))

(defun ar-trim-right-space-in-function-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of SPACE residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'function 'ar-th-trim-right arg))

(defun ar-underscore-space-in-function-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of SPACE residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'function 'ar-th-underscore arg))

(defun ar-whitespace-space-in-function-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of SPACE residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'function 'ar-th-whitespace arg))

(defun ar-space-in-line-atpt (&optional arg) 
  "Employ actions of  at things class of SPACE residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'line 'ar-th arg))

(defun ar-greaterangle-space-in-line-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of SPACE residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'line 'ar-th-greaterangle arg))

(defun ar-lesserangle-space-in-line-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of SPACE residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'line 'ar-th-lesserangle arg))

(defun ar-backslash-space-in-line-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of SPACE residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'line 'ar-th-backslash arg))

(defun ar-colon-space-in-line-atpt (&optional arg) 
  "Employ actions of COLON at things class of SPACE residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'line 'ar-th-colon arg))

(defun ar-beg-space-in-line-atpt (&optional arg) 
  "Employ actions of BEG at things class of SPACE residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'line 'ar-th-beg arg))

(defun ar-blok-space-in-line-atpt (&optional arg) 
  "Employ actions of BLOK at things class of SPACE residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'line 'ar-th-blok arg))

(defun ar-bounds-space-in-line-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of SPACE residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'line 'ar-th-bounds arg))

(defun ar-brace-space-in-line-atpt (&optional arg) 
  "Employ actions of BRACE at things class of SPACE residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'line 'ar-th-brace arg))

(defun ar-bracket-space-in-line-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of SPACE residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'line 'ar-th-bracket arg))

(defun ar-commatize-space-in-line-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of SPACE residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'line 'ar-th-commatize arg))

(defun ar-comment-space-in-line-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of SPACE residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'line 'ar-th-comment arg))

(defun ar-dollar-space-in-line-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of SPACE residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'line 'ar-th-dollar arg))

(defun ar-doublebackslash-space-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of SPACE residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'line 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-space-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of SPACE residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'line 'ar-th-doublebacktick arg))

(defun ar-doublequote-space-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of SPACE residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'line 'ar-th-doublequote arg))

(defun ar-doubleslash-space-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of SPACE residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'line 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-space-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of SPACE residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'line 'ar-th-doublebackslashparen arg))

(defun ar-end-space-in-line-atpt (&optional arg) 
  "Employ actions of END at things class of SPACE residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'line 'ar-th-end arg))

(defun ar-escape-space-in-line-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of SPACE residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'line 'ar-th-escape arg))

(defun ar-hide-space-in-line-atpt (&optional arg) 
  "Employ actions of HIDE at things class of SPACE residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'line 'ar-th-hide arg))

(defun ar-hide-show-space-in-line-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of SPACE residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'line 'ar-th-hide-show arg))

(defun ar-hyphen-space-in-line-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of SPACE residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'line 'ar-th-hyphen arg))

(defun ar-kill-space-in-line-atpt (&optional arg) 
  "Employ actions of KILL at things class of SPACE residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'line 'ar-th-kill arg))

(defun ar-leftrightsinglequote-space-in-line-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of SPACE residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'line 'ar-th-leftrightsinglequote arg))

(defun ar-length-space-in-line-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of SPACE residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'line 'ar-th-length arg))

(defun ar-parentize-space-in-line-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of SPACE residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'line 'ar-th-parentize arg))

(defun ar-quote-space-in-line-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of SPACE residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'line 'ar-th-quote arg))

(defun ar-separate-space-in-line-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of SPACE residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'line 'ar-th-separate arg))

(defun ar-show-space-in-line-atpt (&optional arg) 
  "Employ actions of SHOW at things class of SPACE residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'line 'ar-th-show arg))

(defun ar-singlequote-space-in-line-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of SPACE residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'line 'ar-th-singlequote arg))

(defun ar-slash-space-in-line-atpt (&optional arg) 
  "Employ actions of SLASH at things class of SPACE residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'line 'ar-th-slash arg))

(defun ar-star-space-in-line-atpt (&optional arg) 
  "Employ actions of STAR at things class of SPACE residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'line 'ar-th-star arg))

(defun ar-slashparen-space-in-line-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of SPACE residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'line 'ar-th-slashparen arg))

(defun ar-sort-space-in-line-atpt (&optional arg) 
  "Employ actions of SORT at things class of SPACE residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'line 'ar-th-sort arg))

(defun ar-trim-space-in-line-atpt (&optional arg) 
  "Employ actions of TRIM at things class of SPACE residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'line 'ar-th-trim arg))

(defun ar-trim-left-space-in-line-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of SPACE residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'line 'ar-th-trim-left arg))

(defun ar-trim-right-space-in-line-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of SPACE residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'line 'ar-th-trim-right arg))

(defun ar-underscore-space-in-line-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of SPACE residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'line 'ar-th-underscore arg))

(defun ar-whitespace-space-in-line-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of SPACE residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'line 'ar-th-whitespace arg))

(defun ar-space-in-list-atpt (&optional arg) 
  "Employ actions of  at things class of SPACE residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'list 'ar-th arg))

(defun ar-greaterangle-space-in-list-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of SPACE residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'list 'ar-th-greaterangle arg))

(defun ar-lesserangle-space-in-list-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of SPACE residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'list 'ar-th-lesserangle arg))

(defun ar-backslash-space-in-list-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of SPACE residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'list 'ar-th-backslash arg))

(defun ar-colon-space-in-list-atpt (&optional arg) 
  "Employ actions of COLON at things class of SPACE residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'list 'ar-th-colon arg))

(defun ar-beg-space-in-list-atpt (&optional arg) 
  "Employ actions of BEG at things class of SPACE residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'list 'ar-th-beg arg))

(defun ar-blok-space-in-list-atpt (&optional arg) 
  "Employ actions of BLOK at things class of SPACE residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'list 'ar-th-blok arg))

(defun ar-bounds-space-in-list-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of SPACE residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'list 'ar-th-bounds arg))

(defun ar-brace-space-in-list-atpt (&optional arg) 
  "Employ actions of BRACE at things class of SPACE residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'list 'ar-th-brace arg))

(defun ar-bracket-space-in-list-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of SPACE residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'list 'ar-th-bracket arg))

(defun ar-commatize-space-in-list-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of SPACE residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'list 'ar-th-commatize arg))

(defun ar-comment-space-in-list-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of SPACE residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'list 'ar-th-comment arg))

(defun ar-dollar-space-in-list-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of SPACE residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'list 'ar-th-dollar arg))

(defun ar-doublebackslash-space-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of SPACE residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'list 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-space-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of SPACE residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'list 'ar-th-doublebacktick arg))

(defun ar-doublequote-space-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of SPACE residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'list 'ar-th-doublequote arg))

(defun ar-doubleslash-space-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of SPACE residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'list 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-space-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of SPACE residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'list 'ar-th-doublebackslashparen arg))

(defun ar-end-space-in-list-atpt (&optional arg) 
  "Employ actions of END at things class of SPACE residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'list 'ar-th-end arg))

(defun ar-escape-space-in-list-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of SPACE residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'list 'ar-th-escape arg))

(defun ar-hide-space-in-list-atpt (&optional arg) 
  "Employ actions of HIDE at things class of SPACE residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'list 'ar-th-hide arg))

(defun ar-hide-show-space-in-list-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of SPACE residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'list 'ar-th-hide-show arg))

(defun ar-hyphen-space-in-list-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of SPACE residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'list 'ar-th-hyphen arg))

(defun ar-kill-space-in-list-atpt (&optional arg) 
  "Employ actions of KILL at things class of SPACE residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'list 'ar-th-kill arg))

(defun ar-leftrightsinglequote-space-in-list-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of SPACE residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'list 'ar-th-leftrightsinglequote arg))

(defun ar-length-space-in-list-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of SPACE residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'list 'ar-th-length arg))

(defun ar-parentize-space-in-list-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of SPACE residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'list 'ar-th-parentize arg))

(defun ar-quote-space-in-list-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of SPACE residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'list 'ar-th-quote arg))

(defun ar-separate-space-in-list-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of SPACE residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'list 'ar-th-separate arg))

(defun ar-show-space-in-list-atpt (&optional arg) 
  "Employ actions of SHOW at things class of SPACE residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'list 'ar-th-show arg))

(defun ar-singlequote-space-in-list-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of SPACE residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'list 'ar-th-singlequote arg))

(defun ar-slash-space-in-list-atpt (&optional arg) 
  "Employ actions of SLASH at things class of SPACE residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'list 'ar-th-slash arg))

(defun ar-star-space-in-list-atpt (&optional arg) 
  "Employ actions of STAR at things class of SPACE residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'list 'ar-th-star arg))

(defun ar-slashparen-space-in-list-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of SPACE residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'list 'ar-th-slashparen arg))

(defun ar-sort-space-in-list-atpt (&optional arg) 
  "Employ actions of SORT at things class of SPACE residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'list 'ar-th-sort arg))

(defun ar-trim-space-in-list-atpt (&optional arg) 
  "Employ actions of TRIM at things class of SPACE residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'list 'ar-th-trim arg))

(defun ar-trim-left-space-in-list-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of SPACE residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'list 'ar-th-trim-left arg))

(defun ar-trim-right-space-in-list-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of SPACE residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'list 'ar-th-trim-right arg))

(defun ar-underscore-space-in-list-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of SPACE residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'list 'ar-th-underscore arg))

(defun ar-whitespace-space-in-list-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of SPACE residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'list 'ar-th-whitespace arg))

(defun ar-space-in-name-atpt (&optional arg) 
  "Employ actions of  at things class of SPACE residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'name 'ar-th arg))

(defun ar-greaterangle-space-in-name-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of SPACE residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'name 'ar-th-greaterangle arg))

(defun ar-lesserangle-space-in-name-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of SPACE residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'name 'ar-th-lesserangle arg))

(defun ar-backslash-space-in-name-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of SPACE residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'name 'ar-th-backslash arg))

(defun ar-colon-space-in-name-atpt (&optional arg) 
  "Employ actions of COLON at things class of SPACE residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'name 'ar-th-colon arg))

(defun ar-beg-space-in-name-atpt (&optional arg) 
  "Employ actions of BEG at things class of SPACE residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'name 'ar-th-beg arg))

(defun ar-blok-space-in-name-atpt (&optional arg) 
  "Employ actions of BLOK at things class of SPACE residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'name 'ar-th-blok arg))

(defun ar-bounds-space-in-name-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of SPACE residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'name 'ar-th-bounds arg))

(defun ar-brace-space-in-name-atpt (&optional arg) 
  "Employ actions of BRACE at things class of SPACE residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'name 'ar-th-brace arg))

(defun ar-bracket-space-in-name-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of SPACE residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'name 'ar-th-bracket arg))

(defun ar-commatize-space-in-name-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of SPACE residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'name 'ar-th-commatize arg))

(defun ar-comment-space-in-name-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of SPACE residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'name 'ar-th-comment arg))

(defun ar-dollar-space-in-name-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of SPACE residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'name 'ar-th-dollar arg))

(defun ar-doublebackslash-space-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of SPACE residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'name 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-space-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of SPACE residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'name 'ar-th-doublebacktick arg))

(defun ar-doublequote-space-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of SPACE residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'name 'ar-th-doublequote arg))

(defun ar-doubleslash-space-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of SPACE residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'name 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-space-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of SPACE residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'name 'ar-th-doublebackslashparen arg))

(defun ar-end-space-in-name-atpt (&optional arg) 
  "Employ actions of END at things class of SPACE residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'name 'ar-th-end arg))

(defun ar-escape-space-in-name-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of SPACE residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'name 'ar-th-escape arg))

(defun ar-hide-space-in-name-atpt (&optional arg) 
  "Employ actions of HIDE at things class of SPACE residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'name 'ar-th-hide arg))

(defun ar-hide-show-space-in-name-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of SPACE residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'name 'ar-th-hide-show arg))

(defun ar-hyphen-space-in-name-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of SPACE residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'name 'ar-th-hyphen arg))

(defun ar-kill-space-in-name-atpt (&optional arg) 
  "Employ actions of KILL at things class of SPACE residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'name 'ar-th-kill arg))

(defun ar-leftrightsinglequote-space-in-name-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of SPACE residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'name 'ar-th-leftrightsinglequote arg))

(defun ar-length-space-in-name-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of SPACE residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'name 'ar-th-length arg))

(defun ar-parentize-space-in-name-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of SPACE residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'name 'ar-th-parentize arg))

(defun ar-quote-space-in-name-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of SPACE residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'name 'ar-th-quote arg))

(defun ar-separate-space-in-name-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of SPACE residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'name 'ar-th-separate arg))

(defun ar-show-space-in-name-atpt (&optional arg) 
  "Employ actions of SHOW at things class of SPACE residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'name 'ar-th-show arg))

(defun ar-singlequote-space-in-name-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of SPACE residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'name 'ar-th-singlequote arg))

(defun ar-slash-space-in-name-atpt (&optional arg) 
  "Employ actions of SLASH at things class of SPACE residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'name 'ar-th-slash arg))

(defun ar-star-space-in-name-atpt (&optional arg) 
  "Employ actions of STAR at things class of SPACE residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'name 'ar-th-star arg))

(defun ar-slashparen-space-in-name-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of SPACE residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'name 'ar-th-slashparen arg))

(defun ar-sort-space-in-name-atpt (&optional arg) 
  "Employ actions of SORT at things class of SPACE residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'name 'ar-th-sort arg))

(defun ar-trim-space-in-name-atpt (&optional arg) 
  "Employ actions of TRIM at things class of SPACE residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'name 'ar-th-trim arg))

(defun ar-trim-left-space-in-name-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of SPACE residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'name 'ar-th-trim-left arg))

(defun ar-trim-right-space-in-name-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of SPACE residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'name 'ar-th-trim-right arg))

(defun ar-underscore-space-in-name-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of SPACE residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'name 'ar-th-underscore arg))

(defun ar-whitespace-space-in-name-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of SPACE residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'name 'ar-th-whitespace arg))

(defun ar-space-in-page-atpt (&optional arg) 
  "Employ actions of  at things class of SPACE residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'page 'ar-th arg))

(defun ar-greaterangle-space-in-page-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of SPACE residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'page 'ar-th-greaterangle arg))

(defun ar-lesserangle-space-in-page-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of SPACE residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'page 'ar-th-lesserangle arg))

(defun ar-backslash-space-in-page-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of SPACE residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'page 'ar-th-backslash arg))

(defun ar-colon-space-in-page-atpt (&optional arg) 
  "Employ actions of COLON at things class of SPACE residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'page 'ar-th-colon arg))

(defun ar-beg-space-in-page-atpt (&optional arg) 
  "Employ actions of BEG at things class of SPACE residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'page 'ar-th-beg arg))

(defun ar-blok-space-in-page-atpt (&optional arg) 
  "Employ actions of BLOK at things class of SPACE residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'page 'ar-th-blok arg))

(defun ar-bounds-space-in-page-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of SPACE residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'page 'ar-th-bounds arg))

(defun ar-brace-space-in-page-atpt (&optional arg) 
  "Employ actions of BRACE at things class of SPACE residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'page 'ar-th-brace arg))

(defun ar-bracket-space-in-page-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of SPACE residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'page 'ar-th-bracket arg))

(defun ar-commatize-space-in-page-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of SPACE residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'page 'ar-th-commatize arg))

(defun ar-comment-space-in-page-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of SPACE residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'page 'ar-th-comment arg))

(defun ar-dollar-space-in-page-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of SPACE residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'page 'ar-th-dollar arg))

(defun ar-doublebackslash-space-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of SPACE residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'page 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-space-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of SPACE residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'page 'ar-th-doublebacktick arg))

(defun ar-doublequote-space-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of SPACE residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'page 'ar-th-doublequote arg))

(defun ar-doubleslash-space-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of SPACE residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'page 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-space-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of SPACE residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'page 'ar-th-doublebackslashparen arg))

(defun ar-end-space-in-page-atpt (&optional arg) 
  "Employ actions of END at things class of SPACE residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'page 'ar-th-end arg))

(defun ar-escape-space-in-page-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of SPACE residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'page 'ar-th-escape arg))

(defun ar-hide-space-in-page-atpt (&optional arg) 
  "Employ actions of HIDE at things class of SPACE residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'page 'ar-th-hide arg))

(defun ar-hide-show-space-in-page-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of SPACE residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'page 'ar-th-hide-show arg))

(defun ar-hyphen-space-in-page-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of SPACE residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'page 'ar-th-hyphen arg))

(defun ar-kill-space-in-page-atpt (&optional arg) 
  "Employ actions of KILL at things class of SPACE residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'page 'ar-th-kill arg))

(defun ar-leftrightsinglequote-space-in-page-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of SPACE residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'page 'ar-th-leftrightsinglequote arg))

(defun ar-length-space-in-page-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of SPACE residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'page 'ar-th-length arg))

(defun ar-parentize-space-in-page-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of SPACE residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'page 'ar-th-parentize arg))

(defun ar-quote-space-in-page-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of SPACE residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'page 'ar-th-quote arg))

(defun ar-separate-space-in-page-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of SPACE residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'page 'ar-th-separate arg))

(defun ar-show-space-in-page-atpt (&optional arg) 
  "Employ actions of SHOW at things class of SPACE residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'page 'ar-th-show arg))

(defun ar-singlequote-space-in-page-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of SPACE residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'page 'ar-th-singlequote arg))

(defun ar-slash-space-in-page-atpt (&optional arg) 
  "Employ actions of SLASH at things class of SPACE residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'page 'ar-th-slash arg))

(defun ar-star-space-in-page-atpt (&optional arg) 
  "Employ actions of STAR at things class of SPACE residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'page 'ar-th-star arg))

(defun ar-slashparen-space-in-page-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of SPACE residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'page 'ar-th-slashparen arg))

(defun ar-sort-space-in-page-atpt (&optional arg) 
  "Employ actions of SORT at things class of SPACE residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'page 'ar-th-sort arg))

(defun ar-trim-space-in-page-atpt (&optional arg) 
  "Employ actions of TRIM at things class of SPACE residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'page 'ar-th-trim arg))

(defun ar-trim-left-space-in-page-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of SPACE residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'page 'ar-th-trim-left arg))

(defun ar-trim-right-space-in-page-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of SPACE residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'page 'ar-th-trim-right arg))

(defun ar-underscore-space-in-page-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of SPACE residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'page 'ar-th-underscore arg))

(defun ar-whitespace-space-in-page-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of SPACE residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'page 'ar-th-whitespace arg))

(defun ar-space-in-paragraph-atpt (&optional arg) 
  "Employ actions of  at things class of SPACE residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'paragraph 'ar-th arg))

(defun ar-greaterangle-space-in-paragraph-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of SPACE residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'paragraph 'ar-th-greaterangle arg))

(defun ar-lesserangle-space-in-paragraph-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of SPACE residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'paragraph 'ar-th-lesserangle arg))

(defun ar-backslash-space-in-paragraph-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of SPACE residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'paragraph 'ar-th-backslash arg))

(defun ar-colon-space-in-paragraph-atpt (&optional arg) 
  "Employ actions of COLON at things class of SPACE residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'paragraph 'ar-th-colon arg))

(defun ar-beg-space-in-paragraph-atpt (&optional arg) 
  "Employ actions of BEG at things class of SPACE residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'paragraph 'ar-th-beg arg))

(defun ar-blok-space-in-paragraph-atpt (&optional arg) 
  "Employ actions of BLOK at things class of SPACE residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'paragraph 'ar-th-blok arg))

(defun ar-bounds-space-in-paragraph-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of SPACE residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'paragraph 'ar-th-bounds arg))

(defun ar-brace-space-in-paragraph-atpt (&optional arg) 
  "Employ actions of BRACE at things class of SPACE residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'paragraph 'ar-th-brace arg))

(defun ar-bracket-space-in-paragraph-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of SPACE residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'paragraph 'ar-th-bracket arg))

(defun ar-commatize-space-in-paragraph-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of SPACE residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'paragraph 'ar-th-commatize arg))

(defun ar-comment-space-in-paragraph-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of SPACE residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'paragraph 'ar-th-comment arg))

(defun ar-dollar-space-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of SPACE residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'paragraph 'ar-th-dollar arg))

(defun ar-doublebackslash-space-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of SPACE residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'paragraph 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-space-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of SPACE residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'paragraph 'ar-th-doublebacktick arg))

(defun ar-doublequote-space-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of SPACE residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'paragraph 'ar-th-doublequote arg))

(defun ar-doubleslash-space-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of SPACE residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'paragraph 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-space-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of SPACE residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'paragraph 'ar-th-doublebackslashparen arg))

(defun ar-end-space-in-paragraph-atpt (&optional arg) 
  "Employ actions of END at things class of SPACE residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'paragraph 'ar-th-end arg))

(defun ar-escape-space-in-paragraph-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of SPACE residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'paragraph 'ar-th-escape arg))

(defun ar-hide-space-in-paragraph-atpt (&optional arg) 
  "Employ actions of HIDE at things class of SPACE residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'paragraph 'ar-th-hide arg))

(defun ar-hide-show-space-in-paragraph-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of SPACE residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'paragraph 'ar-th-hide-show arg))

(defun ar-hyphen-space-in-paragraph-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of SPACE residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'paragraph 'ar-th-hyphen arg))

(defun ar-kill-space-in-paragraph-atpt (&optional arg) 
  "Employ actions of KILL at things class of SPACE residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'paragraph 'ar-th-kill arg))

(defun ar-leftrightsinglequote-space-in-paragraph-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of SPACE residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'paragraph 'ar-th-leftrightsinglequote arg))

(defun ar-length-space-in-paragraph-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of SPACE residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'paragraph 'ar-th-length arg))

(defun ar-parentize-space-in-paragraph-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of SPACE residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'paragraph 'ar-th-parentize arg))

(defun ar-quote-space-in-paragraph-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of SPACE residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'paragraph 'ar-th-quote arg))

(defun ar-separate-space-in-paragraph-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of SPACE residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'paragraph 'ar-th-separate arg))

(defun ar-show-space-in-paragraph-atpt (&optional arg) 
  "Employ actions of SHOW at things class of SPACE residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'paragraph 'ar-th-show arg))

(defun ar-singlequote-space-in-paragraph-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of SPACE residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'paragraph 'ar-th-singlequote arg))

(defun ar-slash-space-in-paragraph-atpt (&optional arg) 
  "Employ actions of SLASH at things class of SPACE residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'paragraph 'ar-th-slash arg))

(defun ar-star-space-in-paragraph-atpt (&optional arg) 
  "Employ actions of STAR at things class of SPACE residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'paragraph 'ar-th-star arg))

(defun ar-slashparen-space-in-paragraph-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of SPACE residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'paragraph 'ar-th-slashparen arg))

(defun ar-sort-space-in-paragraph-atpt (&optional arg) 
  "Employ actions of SORT at things class of SPACE residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'paragraph 'ar-th-sort arg))

(defun ar-trim-space-in-paragraph-atpt (&optional arg) 
  "Employ actions of TRIM at things class of SPACE residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'paragraph 'ar-th-trim arg))

(defun ar-trim-left-space-in-paragraph-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of SPACE residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'paragraph 'ar-th-trim-left arg))

(defun ar-trim-right-space-in-paragraph-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of SPACE residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'paragraph 'ar-th-trim-right arg))

(defun ar-underscore-space-in-paragraph-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of SPACE residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'paragraph 'ar-th-underscore arg))

(defun ar-whitespace-space-in-paragraph-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of SPACE residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'paragraph 'ar-th-whitespace arg))

(defun ar-space-in-region-atpt (&optional arg) 
  "Employ actions of  at things class of SPACE residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'region 'ar-th arg))

(defun ar-greaterangle-space-in-region-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of SPACE residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'region 'ar-th-greaterangle arg))

(defun ar-lesserangle-space-in-region-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of SPACE residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'region 'ar-th-lesserangle arg))

(defun ar-backslash-space-in-region-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of SPACE residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'region 'ar-th-backslash arg))

(defun ar-colon-space-in-region-atpt (&optional arg) 
  "Employ actions of COLON at things class of SPACE residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'region 'ar-th-colon arg))

(defun ar-beg-space-in-region-atpt (&optional arg) 
  "Employ actions of BEG at things class of SPACE residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'region 'ar-th-beg arg))

(defun ar-blok-space-in-region-atpt (&optional arg) 
  "Employ actions of BLOK at things class of SPACE residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'region 'ar-th-blok arg))

(defun ar-bounds-space-in-region-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of SPACE residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'region 'ar-th-bounds arg))

(defun ar-brace-space-in-region-atpt (&optional arg) 
  "Employ actions of BRACE at things class of SPACE residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'region 'ar-th-brace arg))

(defun ar-bracket-space-in-region-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of SPACE residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'region 'ar-th-bracket arg))

(defun ar-commatize-space-in-region-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of SPACE residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'region 'ar-th-commatize arg))

(defun ar-comment-space-in-region-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of SPACE residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'region 'ar-th-comment arg))

(defun ar-dollar-space-in-region-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of SPACE residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'region 'ar-th-dollar arg))

(defun ar-doublebackslash-space-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of SPACE residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'region 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-space-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of SPACE residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'region 'ar-th-doublebacktick arg))

(defun ar-doublequote-space-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of SPACE residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'region 'ar-th-doublequote arg))

(defun ar-doubleslash-space-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of SPACE residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'region 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-space-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of SPACE residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'region 'ar-th-doublebackslashparen arg))

(defun ar-end-space-in-region-atpt (&optional arg) 
  "Employ actions of END at things class of SPACE residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'region 'ar-th-end arg))

(defun ar-escape-space-in-region-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of SPACE residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'region 'ar-th-escape arg))

(defun ar-hide-space-in-region-atpt (&optional arg) 
  "Employ actions of HIDE at things class of SPACE residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'region 'ar-th-hide arg))

(defun ar-hide-show-space-in-region-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of SPACE residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'region 'ar-th-hide-show arg))

(defun ar-hyphen-space-in-region-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of SPACE residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'region 'ar-th-hyphen arg))

(defun ar-kill-space-in-region-atpt (&optional arg) 
  "Employ actions of KILL at things class of SPACE residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'region 'ar-th-kill arg))

(defun ar-leftrightsinglequote-space-in-region-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of SPACE residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'region 'ar-th-leftrightsinglequote arg))

(defun ar-length-space-in-region-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of SPACE residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'region 'ar-th-length arg))

(defun ar-parentize-space-in-region-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of SPACE residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'region 'ar-th-parentize arg))

(defun ar-quote-space-in-region-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of SPACE residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'region 'ar-th-quote arg))

(defun ar-separate-space-in-region-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of SPACE residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'region 'ar-th-separate arg))

(defun ar-show-space-in-region-atpt (&optional arg) 
  "Employ actions of SHOW at things class of SPACE residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'region 'ar-th-show arg))

(defun ar-singlequote-space-in-region-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of SPACE residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'region 'ar-th-singlequote arg))

(defun ar-slash-space-in-region-atpt (&optional arg) 
  "Employ actions of SLASH at things class of SPACE residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'region 'ar-th-slash arg))

(defun ar-star-space-in-region-atpt (&optional arg) 
  "Employ actions of STAR at things class of SPACE residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'region 'ar-th-star arg))

(defun ar-slashparen-space-in-region-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of SPACE residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'region 'ar-th-slashparen arg))

(defun ar-sort-space-in-region-atpt (&optional arg) 
  "Employ actions of SORT at things class of SPACE residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'region 'ar-th-sort arg))

(defun ar-trim-space-in-region-atpt (&optional arg) 
  "Employ actions of TRIM at things class of SPACE residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'region 'ar-th-trim arg))

(defun ar-trim-left-space-in-region-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of SPACE residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'region 'ar-th-trim-left arg))

(defun ar-trim-right-space-in-region-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of SPACE residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'region 'ar-th-trim-right arg))

(defun ar-underscore-space-in-region-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of SPACE residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'region 'ar-th-underscore arg))

(defun ar-whitespace-space-in-region-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of SPACE residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'region 'ar-th-whitespace arg))

(defun ar-space-in-sentence-atpt (&optional arg) 
  "Employ actions of  at things class of SPACE residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sentence 'ar-th arg))

(defun ar-greaterangle-space-in-sentence-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of SPACE residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sentence 'ar-th-greaterangle arg))

(defun ar-lesserangle-space-in-sentence-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of SPACE residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sentence 'ar-th-lesserangle arg))

(defun ar-backslash-space-in-sentence-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of SPACE residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sentence 'ar-th-backslash arg))

(defun ar-colon-space-in-sentence-atpt (&optional arg) 
  "Employ actions of COLON at things class of SPACE residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sentence 'ar-th-colon arg))

(defun ar-beg-space-in-sentence-atpt (&optional arg) 
  "Employ actions of BEG at things class of SPACE residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sentence 'ar-th-beg arg))

(defun ar-blok-space-in-sentence-atpt (&optional arg) 
  "Employ actions of BLOK at things class of SPACE residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sentence 'ar-th-blok arg))

(defun ar-bounds-space-in-sentence-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of SPACE residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sentence 'ar-th-bounds arg))

(defun ar-brace-space-in-sentence-atpt (&optional arg) 
  "Employ actions of BRACE at things class of SPACE residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sentence 'ar-th-brace arg))

(defun ar-bracket-space-in-sentence-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of SPACE residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sentence 'ar-th-bracket arg))

(defun ar-commatize-space-in-sentence-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of SPACE residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sentence 'ar-th-commatize arg))

(defun ar-comment-space-in-sentence-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of SPACE residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sentence 'ar-th-comment arg))

(defun ar-dollar-space-in-sentence-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of SPACE residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sentence 'ar-th-dollar arg))

(defun ar-doublebackslash-space-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of SPACE residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sentence 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-space-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of SPACE residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sentence 'ar-th-doublebacktick arg))

(defun ar-doublequote-space-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of SPACE residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sentence 'ar-th-doublequote arg))

(defun ar-doubleslash-space-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of SPACE residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sentence 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-space-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of SPACE residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sentence 'ar-th-doublebackslashparen arg))

(defun ar-end-space-in-sentence-atpt (&optional arg) 
  "Employ actions of END at things class of SPACE residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sentence 'ar-th-end arg))

(defun ar-escape-space-in-sentence-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of SPACE residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sentence 'ar-th-escape arg))

(defun ar-hide-space-in-sentence-atpt (&optional arg) 
  "Employ actions of HIDE at things class of SPACE residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sentence 'ar-th-hide arg))

(defun ar-hide-show-space-in-sentence-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of SPACE residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sentence 'ar-th-hide-show arg))

(defun ar-hyphen-space-in-sentence-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of SPACE residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sentence 'ar-th-hyphen arg))

(defun ar-kill-space-in-sentence-atpt (&optional arg) 
  "Employ actions of KILL at things class of SPACE residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sentence 'ar-th-kill arg))

(defun ar-leftrightsinglequote-space-in-sentence-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of SPACE residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sentence 'ar-th-leftrightsinglequote arg))

(defun ar-length-space-in-sentence-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of SPACE residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sentence 'ar-th-length arg))

(defun ar-parentize-space-in-sentence-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of SPACE residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sentence 'ar-th-parentize arg))

(defun ar-quote-space-in-sentence-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of SPACE residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sentence 'ar-th-quote arg))

(defun ar-separate-space-in-sentence-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of SPACE residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sentence 'ar-th-separate arg))

(defun ar-show-space-in-sentence-atpt (&optional arg) 
  "Employ actions of SHOW at things class of SPACE residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sentence 'ar-th-show arg))

(defun ar-singlequote-space-in-sentence-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of SPACE residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sentence 'ar-th-singlequote arg))

(defun ar-slash-space-in-sentence-atpt (&optional arg) 
  "Employ actions of SLASH at things class of SPACE residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sentence 'ar-th-slash arg))

(defun ar-star-space-in-sentence-atpt (&optional arg) 
  "Employ actions of STAR at things class of SPACE residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sentence 'ar-th-star arg))

(defun ar-slashparen-space-in-sentence-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of SPACE residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sentence 'ar-th-slashparen arg))

(defun ar-sort-space-in-sentence-atpt (&optional arg) 
  "Employ actions of SORT at things class of SPACE residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sentence 'ar-th-sort arg))

(defun ar-trim-space-in-sentence-atpt (&optional arg) 
  "Employ actions of TRIM at things class of SPACE residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sentence 'ar-th-trim arg))

(defun ar-trim-left-space-in-sentence-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of SPACE residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sentence 'ar-th-trim-left arg))

(defun ar-trim-right-space-in-sentence-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of SPACE residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sentence 'ar-th-trim-right arg))

(defun ar-underscore-space-in-sentence-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of SPACE residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sentence 'ar-th-underscore arg))

(defun ar-whitespace-space-in-sentence-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of SPACE residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sentence 'ar-th-whitespace arg))

(defun ar-space-in-sexp-atpt (&optional arg) 
  "Employ actions of  at things class of SPACE residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sexp 'ar-th arg))

(defun ar-greaterangle-space-in-sexp-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of SPACE residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sexp 'ar-th-greaterangle arg))

(defun ar-lesserangle-space-in-sexp-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of SPACE residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sexp 'ar-th-lesserangle arg))

(defun ar-backslash-space-in-sexp-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of SPACE residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sexp 'ar-th-backslash arg))

(defun ar-colon-space-in-sexp-atpt (&optional arg) 
  "Employ actions of COLON at things class of SPACE residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sexp 'ar-th-colon arg))

(defun ar-beg-space-in-sexp-atpt (&optional arg) 
  "Employ actions of BEG at things class of SPACE residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sexp 'ar-th-beg arg))

(defun ar-blok-space-in-sexp-atpt (&optional arg) 
  "Employ actions of BLOK at things class of SPACE residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sexp 'ar-th-blok arg))

(defun ar-bounds-space-in-sexp-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of SPACE residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sexp 'ar-th-bounds arg))

(defun ar-brace-space-in-sexp-atpt (&optional arg) 
  "Employ actions of BRACE at things class of SPACE residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sexp 'ar-th-brace arg))

(defun ar-bracket-space-in-sexp-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of SPACE residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sexp 'ar-th-bracket arg))

(defun ar-commatize-space-in-sexp-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of SPACE residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sexp 'ar-th-commatize arg))

(defun ar-comment-space-in-sexp-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of SPACE residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sexp 'ar-th-comment arg))

(defun ar-dollar-space-in-sexp-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of SPACE residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sexp 'ar-th-dollar arg))

(defun ar-doublebackslash-space-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of SPACE residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sexp 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-space-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of SPACE residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sexp 'ar-th-doublebacktick arg))

(defun ar-doublequote-space-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of SPACE residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sexp 'ar-th-doublequote arg))

(defun ar-doubleslash-space-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of SPACE residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sexp 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-space-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of SPACE residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sexp 'ar-th-doublebackslashparen arg))

(defun ar-end-space-in-sexp-atpt (&optional arg) 
  "Employ actions of END at things class of SPACE residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sexp 'ar-th-end arg))

(defun ar-escape-space-in-sexp-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of SPACE residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sexp 'ar-th-escape arg))

(defun ar-hide-space-in-sexp-atpt (&optional arg) 
  "Employ actions of HIDE at things class of SPACE residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sexp 'ar-th-hide arg))

(defun ar-hide-show-space-in-sexp-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of SPACE residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sexp 'ar-th-hide-show arg))

(defun ar-hyphen-space-in-sexp-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of SPACE residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sexp 'ar-th-hyphen arg))

(defun ar-kill-space-in-sexp-atpt (&optional arg) 
  "Employ actions of KILL at things class of SPACE residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sexp 'ar-th-kill arg))

(defun ar-leftrightsinglequote-space-in-sexp-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of SPACE residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sexp 'ar-th-leftrightsinglequote arg))

(defun ar-length-space-in-sexp-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of SPACE residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sexp 'ar-th-length arg))

(defun ar-parentize-space-in-sexp-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of SPACE residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sexp 'ar-th-parentize arg))

(defun ar-quote-space-in-sexp-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of SPACE residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sexp 'ar-th-quote arg))

(defun ar-separate-space-in-sexp-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of SPACE residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sexp 'ar-th-separate arg))

(defun ar-show-space-in-sexp-atpt (&optional arg) 
  "Employ actions of SHOW at things class of SPACE residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sexp 'ar-th-show arg))

(defun ar-singlequote-space-in-sexp-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of SPACE residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sexp 'ar-th-singlequote arg))

(defun ar-slash-space-in-sexp-atpt (&optional arg) 
  "Employ actions of SLASH at things class of SPACE residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sexp 'ar-th-slash arg))

(defun ar-star-space-in-sexp-atpt (&optional arg) 
  "Employ actions of STAR at things class of SPACE residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sexp 'ar-th-star arg))

(defun ar-slashparen-space-in-sexp-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of SPACE residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sexp 'ar-th-slashparen arg))

(defun ar-sort-space-in-sexp-atpt (&optional arg) 
  "Employ actions of SORT at things class of SPACE residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sexp 'ar-th-sort arg))

(defun ar-trim-space-in-sexp-atpt (&optional arg) 
  "Employ actions of TRIM at things class of SPACE residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sexp 'ar-th-trim arg))

(defun ar-trim-left-space-in-sexp-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of SPACE residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sexp 'ar-th-trim-left arg))

(defun ar-trim-right-space-in-sexp-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of SPACE residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sexp 'ar-th-trim-right arg))

(defun ar-underscore-space-in-sexp-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of SPACE residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sexp 'ar-th-underscore arg))

(defun ar-whitespace-space-in-sexp-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of SPACE residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'sexp 'ar-th-whitespace arg))

(defun ar-space-in-shstruct-atpt (&optional arg) 
  "Employ actions of  at things class of SPACE residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'shstruct 'ar-th arg))

(defun ar-greaterangle-space-in-shstruct-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of SPACE residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'shstruct 'ar-th-greaterangle arg))

(defun ar-lesserangle-space-in-shstruct-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of SPACE residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'shstruct 'ar-th-lesserangle arg))

(defun ar-backslash-space-in-shstruct-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of SPACE residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'shstruct 'ar-th-backslash arg))

(defun ar-colon-space-in-shstruct-atpt (&optional arg) 
  "Employ actions of COLON at things class of SPACE residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'shstruct 'ar-th-colon arg))

(defun ar-beg-space-in-shstruct-atpt (&optional arg) 
  "Employ actions of BEG at things class of SPACE residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'shstruct 'ar-th-beg arg))

(defun ar-blok-space-in-shstruct-atpt (&optional arg) 
  "Employ actions of BLOK at things class of SPACE residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'shstruct 'ar-th-blok arg))

(defun ar-bounds-space-in-shstruct-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of SPACE residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'shstruct 'ar-th-bounds arg))

(defun ar-brace-space-in-shstruct-atpt (&optional arg) 
  "Employ actions of BRACE at things class of SPACE residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'shstruct 'ar-th-brace arg))

(defun ar-bracket-space-in-shstruct-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of SPACE residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'shstruct 'ar-th-bracket arg))

(defun ar-commatize-space-in-shstruct-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of SPACE residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'shstruct 'ar-th-commatize arg))

(defun ar-comment-space-in-shstruct-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of SPACE residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'shstruct 'ar-th-comment arg))

(defun ar-dollar-space-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of SPACE residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'shstruct 'ar-th-dollar arg))

(defun ar-doublebackslash-space-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of SPACE residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'shstruct 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-space-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of SPACE residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'shstruct 'ar-th-doublebacktick arg))

(defun ar-doublequote-space-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of SPACE residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'shstruct 'ar-th-doublequote arg))

(defun ar-doubleslash-space-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of SPACE residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'shstruct 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-space-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of SPACE residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'shstruct 'ar-th-doublebackslashparen arg))

(defun ar-end-space-in-shstruct-atpt (&optional arg) 
  "Employ actions of END at things class of SPACE residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'shstruct 'ar-th-end arg))

(defun ar-escape-space-in-shstruct-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of SPACE residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'shstruct 'ar-th-escape arg))

(defun ar-hide-space-in-shstruct-atpt (&optional arg) 
  "Employ actions of HIDE at things class of SPACE residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'shstruct 'ar-th-hide arg))

(defun ar-hide-show-space-in-shstruct-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of SPACE residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'shstruct 'ar-th-hide-show arg))

(defun ar-hyphen-space-in-shstruct-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of SPACE residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'shstruct 'ar-th-hyphen arg))

(defun ar-kill-space-in-shstruct-atpt (&optional arg) 
  "Employ actions of KILL at things class of SPACE residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'shstruct 'ar-th-kill arg))

(defun ar-leftrightsinglequote-space-in-shstruct-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of SPACE residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'shstruct 'ar-th-leftrightsinglequote arg))

(defun ar-length-space-in-shstruct-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of SPACE residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'shstruct 'ar-th-length arg))

(defun ar-parentize-space-in-shstruct-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of SPACE residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'shstruct 'ar-th-parentize arg))

(defun ar-quote-space-in-shstruct-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of SPACE residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'shstruct 'ar-th-quote arg))

(defun ar-separate-space-in-shstruct-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of SPACE residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'shstruct 'ar-th-separate arg))

(defun ar-show-space-in-shstruct-atpt (&optional arg) 
  "Employ actions of SHOW at things class of SPACE residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'shstruct 'ar-th-show arg))

(defun ar-singlequote-space-in-shstruct-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of SPACE residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'shstruct 'ar-th-singlequote arg))

(defun ar-slash-space-in-shstruct-atpt (&optional arg) 
  "Employ actions of SLASH at things class of SPACE residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'shstruct 'ar-th-slash arg))

(defun ar-star-space-in-shstruct-atpt (&optional arg) 
  "Employ actions of STAR at things class of SPACE residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'shstruct 'ar-th-star arg))

(defun ar-slashparen-space-in-shstruct-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of SPACE residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'shstruct 'ar-th-slashparen arg))

(defun ar-sort-space-in-shstruct-atpt (&optional arg) 
  "Employ actions of SORT at things class of SPACE residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'shstruct 'ar-th-sort arg))

(defun ar-trim-space-in-shstruct-atpt (&optional arg) 
  "Employ actions of TRIM at things class of SPACE residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'shstruct 'ar-th-trim arg))

(defun ar-trim-left-space-in-shstruct-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of SPACE residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'shstruct 'ar-th-trim-left arg))

(defun ar-trim-right-space-in-shstruct-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of SPACE residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'shstruct 'ar-th-trim-right arg))

(defun ar-underscore-space-in-shstruct-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of SPACE residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'shstruct 'ar-th-underscore arg))

(defun ar-whitespace-space-in-shstruct-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of SPACE residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'space 'shstruct 'ar-th-whitespace arg))

(defun ar-upper-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of  at things class of UPPER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'greateranglednested 'ar-th arg))

(defun ar-greaterangle-upper-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of UPPER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'greateranglednested 'ar-th-greaterangle arg))

(defun ar-lesserangle-upper-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of UPPER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'greateranglednested 'ar-th-lesserangle arg))

(defun ar-backslash-upper-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of UPPER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'greateranglednested 'ar-th-backslash arg))

(defun ar-colon-upper-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of COLON at things class of UPPER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'greateranglednested 'ar-th-colon arg))

(defun ar-beg-upper-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BEG at things class of UPPER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'greateranglednested 'ar-th-beg arg))

(defun ar-blok-upper-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BLOK at things class of UPPER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'greateranglednested 'ar-th-blok arg))

(defun ar-bounds-upper-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of UPPER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'greateranglednested 'ar-th-bounds arg))

(defun ar-brace-upper-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BRACE at things class of UPPER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'greateranglednested 'ar-th-brace arg))

(defun ar-bracket-upper-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of UPPER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'greateranglednested 'ar-th-bracket arg))

(defun ar-commatize-upper-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of UPPER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'greateranglednested 'ar-th-commatize arg))

(defun ar-comment-upper-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of UPPER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'greateranglednested 'ar-th-comment arg))

(defun ar-dollar-upper-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of UPPER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'greateranglednested 'ar-th-dollar arg))

(defun ar-doublebackslash-upper-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of UPPER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'greateranglednested 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-upper-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of UPPER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'greateranglednested 'ar-th-doublebacktick arg))

(defun ar-doublequote-upper-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of UPPER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'greateranglednested 'ar-th-doublequote arg))

(defun ar-doubleslash-upper-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of UPPER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'greateranglednested 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-upper-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of UPPER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'greateranglednested 'ar-th-doublebackslashparen arg))

(defun ar-end-upper-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of END at things class of UPPER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'greateranglednested 'ar-th-end arg))

(defun ar-escape-upper-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of UPPER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'greateranglednested 'ar-th-escape arg))

(defun ar-hide-upper-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of HIDE at things class of UPPER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'greateranglednested 'ar-th-hide arg))

(defun ar-hide-show-upper-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of UPPER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'greateranglednested 'ar-th-hide-show arg))

(defun ar-hyphen-upper-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of UPPER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'greateranglednested 'ar-th-hyphen arg))

(defun ar-kill-upper-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of KILL at things class of UPPER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'greateranglednested 'ar-th-kill arg))

(defun ar-leftrightsinglequote-upper-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of UPPER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'greateranglednested 'ar-th-leftrightsinglequote arg))

(defun ar-length-upper-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of UPPER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'greateranglednested 'ar-th-length arg))

(defun ar-parentize-upper-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of UPPER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'greateranglednested 'ar-th-parentize arg))

(defun ar-quote-upper-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of UPPER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'greateranglednested 'ar-th-quote arg))

(defun ar-separate-upper-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of UPPER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'greateranglednested 'ar-th-separate arg))

(defun ar-show-upper-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SHOW at things class of UPPER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'greateranglednested 'ar-th-show arg))

(defun ar-singlequote-upper-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of UPPER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'greateranglednested 'ar-th-singlequote arg))

(defun ar-slash-upper-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SLASH at things class of UPPER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'greateranglednested 'ar-th-slash arg))

(defun ar-star-upper-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of STAR at things class of UPPER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'greateranglednested 'ar-th-star arg))

(defun ar-slashparen-upper-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of UPPER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'greateranglednested 'ar-th-slashparen arg))

(defun ar-sort-upper-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SORT at things class of UPPER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'greateranglednested 'ar-th-sort arg))

(defun ar-trim-upper-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of TRIM at things class of UPPER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'greateranglednested 'ar-th-trim arg))

(defun ar-trim-left-upper-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of UPPER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'greateranglednested 'ar-th-trim-left arg))

(defun ar-trim-right-upper-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of UPPER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'greateranglednested 'ar-th-trim-right arg))

(defun ar-underscore-upper-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of UPPER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'greateranglednested 'ar-th-underscore arg))

(defun ar-whitespace-upper-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of UPPER residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'greateranglednested 'ar-th-whitespace arg))

(defun ar-upper-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of  at things class of UPPER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'lesseranglednested 'ar-th arg))

(defun ar-greaterangle-upper-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of UPPER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'lesseranglednested 'ar-th-greaterangle arg))

(defun ar-lesserangle-upper-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of UPPER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'lesseranglednested 'ar-th-lesserangle arg))

(defun ar-backslash-upper-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of UPPER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'lesseranglednested 'ar-th-backslash arg))

(defun ar-colon-upper-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of COLON at things class of UPPER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'lesseranglednested 'ar-th-colon arg))

(defun ar-beg-upper-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BEG at things class of UPPER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'lesseranglednested 'ar-th-beg arg))

(defun ar-blok-upper-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BLOK at things class of UPPER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'lesseranglednested 'ar-th-blok arg))

(defun ar-bounds-upper-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of UPPER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'lesseranglednested 'ar-th-bounds arg))

(defun ar-brace-upper-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BRACE at things class of UPPER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'lesseranglednested 'ar-th-brace arg))

(defun ar-bracket-upper-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of UPPER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'lesseranglednested 'ar-th-bracket arg))

(defun ar-commatize-upper-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of UPPER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'lesseranglednested 'ar-th-commatize arg))

(defun ar-comment-upper-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of UPPER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'lesseranglednested 'ar-th-comment arg))

(defun ar-dollar-upper-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of UPPER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'lesseranglednested 'ar-th-dollar arg))

(defun ar-doublebackslash-upper-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of UPPER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'lesseranglednested 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-upper-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of UPPER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'lesseranglednested 'ar-th-doublebacktick arg))

(defun ar-doublequote-upper-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of UPPER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'lesseranglednested 'ar-th-doublequote arg))

(defun ar-doubleslash-upper-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of UPPER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'lesseranglednested 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-upper-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of UPPER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'lesseranglednested 'ar-th-doublebackslashparen arg))

(defun ar-end-upper-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of END at things class of UPPER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'lesseranglednested 'ar-th-end arg))

(defun ar-escape-upper-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of UPPER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'lesseranglednested 'ar-th-escape arg))

(defun ar-hide-upper-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of HIDE at things class of UPPER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'lesseranglednested 'ar-th-hide arg))

(defun ar-hide-show-upper-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of UPPER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'lesseranglednested 'ar-th-hide-show arg))

(defun ar-hyphen-upper-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of UPPER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'lesseranglednested 'ar-th-hyphen arg))

(defun ar-kill-upper-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of KILL at things class of UPPER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'lesseranglednested 'ar-th-kill arg))

(defun ar-leftrightsinglequote-upper-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of UPPER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'lesseranglednested 'ar-th-leftrightsinglequote arg))

(defun ar-length-upper-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of UPPER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'lesseranglednested 'ar-th-length arg))

(defun ar-parentize-upper-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of UPPER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'lesseranglednested 'ar-th-parentize arg))

(defun ar-quote-upper-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of UPPER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'lesseranglednested 'ar-th-quote arg))

(defun ar-separate-upper-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of UPPER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'lesseranglednested 'ar-th-separate arg))

(defun ar-show-upper-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SHOW at things class of UPPER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'lesseranglednested 'ar-th-show arg))

(defun ar-singlequote-upper-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of UPPER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'lesseranglednested 'ar-th-singlequote arg))

(defun ar-slash-upper-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SLASH at things class of UPPER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'lesseranglednested 'ar-th-slash arg))

(defun ar-star-upper-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of STAR at things class of UPPER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'lesseranglednested 'ar-th-star arg))

(defun ar-slashparen-upper-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of UPPER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'lesseranglednested 'ar-th-slashparen arg))

(defun ar-sort-upper-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SORT at things class of UPPER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'lesseranglednested 'ar-th-sort arg))

(defun ar-trim-upper-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of TRIM at things class of UPPER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'lesseranglednested 'ar-th-trim arg))

(defun ar-trim-left-upper-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of UPPER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'lesseranglednested 'ar-th-trim-left arg))

(defun ar-trim-right-upper-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of UPPER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'lesseranglednested 'ar-th-trim-right arg))

(defun ar-underscore-upper-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of UPPER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'lesseranglednested 'ar-th-underscore arg))

(defun ar-whitespace-upper-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of UPPER residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'lesseranglednested 'ar-th-whitespace arg))

(defun ar-upper-in-buffer-atpt (&optional arg) 
  "Employ actions of  at things class of UPPER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'buffer 'ar-th arg))

(defun ar-greaterangle-upper-in-buffer-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of UPPER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'buffer 'ar-th-greaterangle arg))

(defun ar-lesserangle-upper-in-buffer-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of UPPER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'buffer 'ar-th-lesserangle arg))

(defun ar-backslash-upper-in-buffer-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of UPPER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'buffer 'ar-th-backslash arg))

(defun ar-colon-upper-in-buffer-atpt (&optional arg) 
  "Employ actions of COLON at things class of UPPER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'buffer 'ar-th-colon arg))

(defun ar-beg-upper-in-buffer-atpt (&optional arg) 
  "Employ actions of BEG at things class of UPPER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'buffer 'ar-th-beg arg))

(defun ar-blok-upper-in-buffer-atpt (&optional arg) 
  "Employ actions of BLOK at things class of UPPER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'buffer 'ar-th-blok arg))

(defun ar-bounds-upper-in-buffer-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of UPPER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'buffer 'ar-th-bounds arg))

(defun ar-brace-upper-in-buffer-atpt (&optional arg) 
  "Employ actions of BRACE at things class of UPPER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'buffer 'ar-th-brace arg))

(defun ar-bracket-upper-in-buffer-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of UPPER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'buffer 'ar-th-bracket arg))

(defun ar-commatize-upper-in-buffer-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of UPPER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'buffer 'ar-th-commatize arg))

(defun ar-comment-upper-in-buffer-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of UPPER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'buffer 'ar-th-comment arg))

(defun ar-dollar-upper-in-buffer-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of UPPER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'buffer 'ar-th-dollar arg))

(defun ar-doublebackslash-upper-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of UPPER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'buffer 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-upper-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of UPPER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'buffer 'ar-th-doublebacktick arg))

(defun ar-doublequote-upper-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of UPPER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'buffer 'ar-th-doublequote arg))

(defun ar-doubleslash-upper-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of UPPER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'buffer 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-upper-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of UPPER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'buffer 'ar-th-doublebackslashparen arg))

(defun ar-end-upper-in-buffer-atpt (&optional arg) 
  "Employ actions of END at things class of UPPER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'buffer 'ar-th-end arg))

(defun ar-escape-upper-in-buffer-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of UPPER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'buffer 'ar-th-escape arg))

(defun ar-hide-upper-in-buffer-atpt (&optional arg) 
  "Employ actions of HIDE at things class of UPPER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'buffer 'ar-th-hide arg))

(defun ar-hide-show-upper-in-buffer-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of UPPER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'buffer 'ar-th-hide-show arg))

(defun ar-hyphen-upper-in-buffer-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of UPPER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'buffer 'ar-th-hyphen arg))

(defun ar-kill-upper-in-buffer-atpt (&optional arg) 
  "Employ actions of KILL at things class of UPPER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'buffer 'ar-th-kill arg))

(defun ar-leftrightsinglequote-upper-in-buffer-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of UPPER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'buffer 'ar-th-leftrightsinglequote arg))

(defun ar-length-upper-in-buffer-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of UPPER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'buffer 'ar-th-length arg))

(defun ar-parentize-upper-in-buffer-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of UPPER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'buffer 'ar-th-parentize arg))

(defun ar-quote-upper-in-buffer-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of UPPER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'buffer 'ar-th-quote arg))

(defun ar-separate-upper-in-buffer-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of UPPER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'buffer 'ar-th-separate arg))

(defun ar-show-upper-in-buffer-atpt (&optional arg) 
  "Employ actions of SHOW at things class of UPPER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'buffer 'ar-th-show arg))

(defun ar-singlequote-upper-in-buffer-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of UPPER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'buffer 'ar-th-singlequote arg))

(defun ar-slash-upper-in-buffer-atpt (&optional arg) 
  "Employ actions of SLASH at things class of UPPER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'buffer 'ar-th-slash arg))

(defun ar-star-upper-in-buffer-atpt (&optional arg) 
  "Employ actions of STAR at things class of UPPER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'buffer 'ar-th-star arg))

(defun ar-slashparen-upper-in-buffer-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of UPPER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'buffer 'ar-th-slashparen arg))

(defun ar-sort-upper-in-buffer-atpt (&optional arg) 
  "Employ actions of SORT at things class of UPPER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'buffer 'ar-th-sort arg))

(defun ar-trim-upper-in-buffer-atpt (&optional arg) 
  "Employ actions of TRIM at things class of UPPER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'buffer 'ar-th-trim arg))

(defun ar-trim-left-upper-in-buffer-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of UPPER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'buffer 'ar-th-trim-left arg))

(defun ar-trim-right-upper-in-buffer-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of UPPER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'buffer 'ar-th-trim-right arg))

(defun ar-underscore-upper-in-buffer-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of UPPER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'buffer 'ar-th-underscore arg))

(defun ar-whitespace-upper-in-buffer-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of UPPER residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'buffer 'ar-th-whitespace arg))

(defun ar-upper-in-comment-atpt (&optional arg) 
  "Employ actions of  at things class of UPPER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'comment 'ar-th arg))

(defun ar-greaterangle-upper-in-comment-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of UPPER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'comment 'ar-th-greaterangle arg))

(defun ar-lesserangle-upper-in-comment-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of UPPER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'comment 'ar-th-lesserangle arg))

(defun ar-backslash-upper-in-comment-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of UPPER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'comment 'ar-th-backslash arg))

(defun ar-colon-upper-in-comment-atpt (&optional arg) 
  "Employ actions of COLON at things class of UPPER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'comment 'ar-th-colon arg))

(defun ar-beg-upper-in-comment-atpt (&optional arg) 
  "Employ actions of BEG at things class of UPPER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'comment 'ar-th-beg arg))

(defun ar-blok-upper-in-comment-atpt (&optional arg) 
  "Employ actions of BLOK at things class of UPPER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'comment 'ar-th-blok arg))

(defun ar-bounds-upper-in-comment-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of UPPER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'comment 'ar-th-bounds arg))

(defun ar-brace-upper-in-comment-atpt (&optional arg) 
  "Employ actions of BRACE at things class of UPPER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'comment 'ar-th-brace arg))

(defun ar-bracket-upper-in-comment-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of UPPER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'comment 'ar-th-bracket arg))

(defun ar-commatize-upper-in-comment-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of UPPER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'comment 'ar-th-commatize arg))

(defun ar-comment-upper-in-comment-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of UPPER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'comment 'ar-th-comment arg))

(defun ar-dollar-upper-in-comment-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of UPPER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'comment 'ar-th-dollar arg))

(defun ar-doublebackslash-upper-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of UPPER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'comment 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-upper-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of UPPER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'comment 'ar-th-doublebacktick arg))

(defun ar-doublequote-upper-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of UPPER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'comment 'ar-th-doublequote arg))

(defun ar-doubleslash-upper-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of UPPER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'comment 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-upper-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of UPPER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'comment 'ar-th-doublebackslashparen arg))

(defun ar-end-upper-in-comment-atpt (&optional arg) 
  "Employ actions of END at things class of UPPER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'comment 'ar-th-end arg))

(defun ar-escape-upper-in-comment-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of UPPER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'comment 'ar-th-escape arg))

(defun ar-hide-upper-in-comment-atpt (&optional arg) 
  "Employ actions of HIDE at things class of UPPER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'comment 'ar-th-hide arg))

(defun ar-hide-show-upper-in-comment-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of UPPER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'comment 'ar-th-hide-show arg))

(defun ar-hyphen-upper-in-comment-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of UPPER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'comment 'ar-th-hyphen arg))

(defun ar-kill-upper-in-comment-atpt (&optional arg) 
  "Employ actions of KILL at things class of UPPER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'comment 'ar-th-kill arg))

(defun ar-leftrightsinglequote-upper-in-comment-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of UPPER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'comment 'ar-th-leftrightsinglequote arg))

(defun ar-length-upper-in-comment-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of UPPER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'comment 'ar-th-length arg))

(defun ar-parentize-upper-in-comment-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of UPPER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'comment 'ar-th-parentize arg))

(defun ar-quote-upper-in-comment-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of UPPER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'comment 'ar-th-quote arg))

(defun ar-separate-upper-in-comment-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of UPPER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'comment 'ar-th-separate arg))

(defun ar-show-upper-in-comment-atpt (&optional arg) 
  "Employ actions of SHOW at things class of UPPER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'comment 'ar-th-show arg))

(defun ar-singlequote-upper-in-comment-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of UPPER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'comment 'ar-th-singlequote arg))

(defun ar-slash-upper-in-comment-atpt (&optional arg) 
  "Employ actions of SLASH at things class of UPPER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'comment 'ar-th-slash arg))

(defun ar-star-upper-in-comment-atpt (&optional arg) 
  "Employ actions of STAR at things class of UPPER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'comment 'ar-th-star arg))

(defun ar-slashparen-upper-in-comment-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of UPPER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'comment 'ar-th-slashparen arg))

(defun ar-sort-upper-in-comment-atpt (&optional arg) 
  "Employ actions of SORT at things class of UPPER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'comment 'ar-th-sort arg))

(defun ar-trim-upper-in-comment-atpt (&optional arg) 
  "Employ actions of TRIM at things class of UPPER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'comment 'ar-th-trim arg))

(defun ar-trim-left-upper-in-comment-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of UPPER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'comment 'ar-th-trim-left arg))

(defun ar-trim-right-upper-in-comment-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of UPPER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'comment 'ar-th-trim-right arg))

(defun ar-underscore-upper-in-comment-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of UPPER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'comment 'ar-th-underscore arg))

(defun ar-whitespace-upper-in-comment-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of UPPER residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'comment 'ar-th-whitespace arg))

(defun ar-upper-in-csv-atpt (&optional arg) 
  "Employ actions of  at things class of UPPER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'csv 'ar-th arg))

(defun ar-greaterangle-upper-in-csv-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of UPPER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'csv 'ar-th-greaterangle arg))

(defun ar-lesserangle-upper-in-csv-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of UPPER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'csv 'ar-th-lesserangle arg))

(defun ar-backslash-upper-in-csv-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of UPPER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'csv 'ar-th-backslash arg))

(defun ar-colon-upper-in-csv-atpt (&optional arg) 
  "Employ actions of COLON at things class of UPPER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'csv 'ar-th-colon arg))

(defun ar-beg-upper-in-csv-atpt (&optional arg) 
  "Employ actions of BEG at things class of UPPER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'csv 'ar-th-beg arg))

(defun ar-blok-upper-in-csv-atpt (&optional arg) 
  "Employ actions of BLOK at things class of UPPER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'csv 'ar-th-blok arg))

(defun ar-bounds-upper-in-csv-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of UPPER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'csv 'ar-th-bounds arg))

(defun ar-brace-upper-in-csv-atpt (&optional arg) 
  "Employ actions of BRACE at things class of UPPER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'csv 'ar-th-brace arg))

(defun ar-bracket-upper-in-csv-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of UPPER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'csv 'ar-th-bracket arg))

(defun ar-commatize-upper-in-csv-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of UPPER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'csv 'ar-th-commatize arg))

(defun ar-comment-upper-in-csv-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of UPPER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'csv 'ar-th-comment arg))

(defun ar-dollar-upper-in-csv-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of UPPER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'csv 'ar-th-dollar arg))

(defun ar-doublebackslash-upper-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of UPPER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'csv 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-upper-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of UPPER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'csv 'ar-th-doublebacktick arg))

(defun ar-doublequote-upper-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of UPPER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'csv 'ar-th-doublequote arg))

(defun ar-doubleslash-upper-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of UPPER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'csv 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-upper-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of UPPER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'csv 'ar-th-doublebackslashparen arg))

(defun ar-end-upper-in-csv-atpt (&optional arg) 
  "Employ actions of END at things class of UPPER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'csv 'ar-th-end arg))

(defun ar-escape-upper-in-csv-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of UPPER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'csv 'ar-th-escape arg))

(defun ar-hide-upper-in-csv-atpt (&optional arg) 
  "Employ actions of HIDE at things class of UPPER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'csv 'ar-th-hide arg))

(defun ar-hide-show-upper-in-csv-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of UPPER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'csv 'ar-th-hide-show arg))

(defun ar-hyphen-upper-in-csv-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of UPPER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'csv 'ar-th-hyphen arg))

(defun ar-kill-upper-in-csv-atpt (&optional arg) 
  "Employ actions of KILL at things class of UPPER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'csv 'ar-th-kill arg))

(defun ar-leftrightsinglequote-upper-in-csv-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of UPPER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'csv 'ar-th-leftrightsinglequote arg))

(defun ar-length-upper-in-csv-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of UPPER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'csv 'ar-th-length arg))

(defun ar-parentize-upper-in-csv-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of UPPER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'csv 'ar-th-parentize arg))

(defun ar-quote-upper-in-csv-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of UPPER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'csv 'ar-th-quote arg))

(defun ar-separate-upper-in-csv-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of UPPER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'csv 'ar-th-separate arg))

(defun ar-show-upper-in-csv-atpt (&optional arg) 
  "Employ actions of SHOW at things class of UPPER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'csv 'ar-th-show arg))

(defun ar-singlequote-upper-in-csv-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of UPPER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'csv 'ar-th-singlequote arg))

(defun ar-slash-upper-in-csv-atpt (&optional arg) 
  "Employ actions of SLASH at things class of UPPER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'csv 'ar-th-slash arg))

(defun ar-star-upper-in-csv-atpt (&optional arg) 
  "Employ actions of STAR at things class of UPPER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'csv 'ar-th-star arg))

(defun ar-slashparen-upper-in-csv-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of UPPER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'csv 'ar-th-slashparen arg))

(defun ar-sort-upper-in-csv-atpt (&optional arg) 
  "Employ actions of SORT at things class of UPPER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'csv 'ar-th-sort arg))

(defun ar-trim-upper-in-csv-atpt (&optional arg) 
  "Employ actions of TRIM at things class of UPPER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'csv 'ar-th-trim arg))

(defun ar-trim-left-upper-in-csv-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of UPPER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'csv 'ar-th-trim-left arg))

(defun ar-trim-right-upper-in-csv-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of UPPER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'csv 'ar-th-trim-right arg))

(defun ar-underscore-upper-in-csv-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of UPPER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'csv 'ar-th-underscore arg))

(defun ar-whitespace-upper-in-csv-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of UPPER residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'csv 'ar-th-whitespace arg))

(defun ar-upper-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of  at things class of UPPER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'filenamenondirectory 'ar-th arg))

(defun ar-greaterangle-upper-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of UPPER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'filenamenondirectory 'ar-th-greaterangle arg))

(defun ar-lesserangle-upper-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of UPPER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'filenamenondirectory 'ar-th-lesserangle arg))

(defun ar-backslash-upper-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of UPPER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'filenamenondirectory 'ar-th-backslash arg))

(defun ar-colon-upper-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of COLON at things class of UPPER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'filenamenondirectory 'ar-th-colon arg))

(defun ar-beg-upper-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BEG at things class of UPPER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'filenamenondirectory 'ar-th-beg arg))

(defun ar-blok-upper-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BLOK at things class of UPPER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'filenamenondirectory 'ar-th-blok arg))

(defun ar-bounds-upper-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of UPPER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'filenamenondirectory 'ar-th-bounds arg))

(defun ar-brace-upper-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BRACE at things class of UPPER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'filenamenondirectory 'ar-th-brace arg))

(defun ar-bracket-upper-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of UPPER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'filenamenondirectory 'ar-th-bracket arg))

(defun ar-commatize-upper-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of UPPER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'filenamenondirectory 'ar-th-commatize arg))

(defun ar-comment-upper-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of UPPER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'filenamenondirectory 'ar-th-comment arg))

(defun ar-dollar-upper-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of UPPER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'filenamenondirectory 'ar-th-dollar arg))

(defun ar-doublebackslash-upper-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of UPPER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'filenamenondirectory 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-upper-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of UPPER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'filenamenondirectory 'ar-th-doublebacktick arg))

(defun ar-doublequote-upper-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of UPPER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'filenamenondirectory 'ar-th-doublequote arg))

(defun ar-doubleslash-upper-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of UPPER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'filenamenondirectory 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-upper-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of UPPER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'filenamenondirectory 'ar-th-doublebackslashparen arg))

(defun ar-end-upper-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of END at things class of UPPER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'filenamenondirectory 'ar-th-end arg))

(defun ar-escape-upper-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of UPPER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'filenamenondirectory 'ar-th-escape arg))

(defun ar-hide-upper-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of HIDE at things class of UPPER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'filenamenondirectory 'ar-th-hide arg))

(defun ar-hide-show-upper-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of UPPER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'filenamenondirectory 'ar-th-hide-show arg))

(defun ar-hyphen-upper-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of UPPER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'filenamenondirectory 'ar-th-hyphen arg))

(defun ar-kill-upper-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of KILL at things class of UPPER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'filenamenondirectory 'ar-th-kill arg))

(defun ar-leftrightsinglequote-upper-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of UPPER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'filenamenondirectory 'ar-th-leftrightsinglequote arg))

(defun ar-length-upper-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of UPPER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'filenamenondirectory 'ar-th-length arg))

(defun ar-parentize-upper-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of UPPER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'filenamenondirectory 'ar-th-parentize arg))

(defun ar-quote-upper-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of UPPER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'filenamenondirectory 'ar-th-quote arg))

(defun ar-separate-upper-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of UPPER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'filenamenondirectory 'ar-th-separate arg))

(defun ar-show-upper-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SHOW at things class of UPPER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'filenamenondirectory 'ar-th-show arg))

(defun ar-singlequote-upper-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of UPPER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'filenamenondirectory 'ar-th-singlequote arg))

(defun ar-slash-upper-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SLASH at things class of UPPER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'filenamenondirectory 'ar-th-slash arg))

(defun ar-star-upper-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of STAR at things class of UPPER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'filenamenondirectory 'ar-th-star arg))

(defun ar-slashparen-upper-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of UPPER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'filenamenondirectory 'ar-th-slashparen arg))

(defun ar-sort-upper-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SORT at things class of UPPER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'filenamenondirectory 'ar-th-sort arg))

(defun ar-trim-upper-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of TRIM at things class of UPPER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'filenamenondirectory 'ar-th-trim arg))

(defun ar-trim-left-upper-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of UPPER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'filenamenondirectory 'ar-th-trim-left arg))

(defun ar-trim-right-upper-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of UPPER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'filenamenondirectory 'ar-th-trim-right arg))

(defun ar-underscore-upper-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of UPPER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'filenamenondirectory 'ar-th-underscore arg))

(defun ar-whitespace-upper-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of UPPER residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'filenamenondirectory 'ar-th-whitespace arg))

(defun ar-upper-in-function-atpt (&optional arg) 
  "Employ actions of  at things class of UPPER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'function 'ar-th arg))

(defun ar-greaterangle-upper-in-function-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of UPPER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'function 'ar-th-greaterangle arg))

(defun ar-lesserangle-upper-in-function-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of UPPER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'function 'ar-th-lesserangle arg))

(defun ar-backslash-upper-in-function-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of UPPER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'function 'ar-th-backslash arg))

(defun ar-colon-upper-in-function-atpt (&optional arg) 
  "Employ actions of COLON at things class of UPPER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'function 'ar-th-colon arg))

(defun ar-beg-upper-in-function-atpt (&optional arg) 
  "Employ actions of BEG at things class of UPPER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'function 'ar-th-beg arg))

(defun ar-blok-upper-in-function-atpt (&optional arg) 
  "Employ actions of BLOK at things class of UPPER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'function 'ar-th-blok arg))

(defun ar-bounds-upper-in-function-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of UPPER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'function 'ar-th-bounds arg))

(defun ar-brace-upper-in-function-atpt (&optional arg) 
  "Employ actions of BRACE at things class of UPPER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'function 'ar-th-brace arg))

(defun ar-bracket-upper-in-function-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of UPPER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'function 'ar-th-bracket arg))

(defun ar-commatize-upper-in-function-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of UPPER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'function 'ar-th-commatize arg))

(defun ar-comment-upper-in-function-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of UPPER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'function 'ar-th-comment arg))

(defun ar-dollar-upper-in-function-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of UPPER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'function 'ar-th-dollar arg))

(defun ar-doublebackslash-upper-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of UPPER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'function 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-upper-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of UPPER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'function 'ar-th-doublebacktick arg))

(defun ar-doublequote-upper-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of UPPER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'function 'ar-th-doublequote arg))

(defun ar-doubleslash-upper-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of UPPER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'function 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-upper-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of UPPER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'function 'ar-th-doublebackslashparen arg))

(defun ar-end-upper-in-function-atpt (&optional arg) 
  "Employ actions of END at things class of UPPER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'function 'ar-th-end arg))

(defun ar-escape-upper-in-function-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of UPPER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'function 'ar-th-escape arg))

(defun ar-hide-upper-in-function-atpt (&optional arg) 
  "Employ actions of HIDE at things class of UPPER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'function 'ar-th-hide arg))

(defun ar-hide-show-upper-in-function-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of UPPER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'function 'ar-th-hide-show arg))

(defun ar-hyphen-upper-in-function-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of UPPER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'function 'ar-th-hyphen arg))

(defun ar-kill-upper-in-function-atpt (&optional arg) 
  "Employ actions of KILL at things class of UPPER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'function 'ar-th-kill arg))

(defun ar-leftrightsinglequote-upper-in-function-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of UPPER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'function 'ar-th-leftrightsinglequote arg))

(defun ar-length-upper-in-function-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of UPPER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'function 'ar-th-length arg))

(defun ar-parentize-upper-in-function-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of UPPER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'function 'ar-th-parentize arg))

(defun ar-quote-upper-in-function-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of UPPER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'function 'ar-th-quote arg))

(defun ar-separate-upper-in-function-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of UPPER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'function 'ar-th-separate arg))

(defun ar-show-upper-in-function-atpt (&optional arg) 
  "Employ actions of SHOW at things class of UPPER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'function 'ar-th-show arg))

(defun ar-singlequote-upper-in-function-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of UPPER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'function 'ar-th-singlequote arg))

(defun ar-slash-upper-in-function-atpt (&optional arg) 
  "Employ actions of SLASH at things class of UPPER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'function 'ar-th-slash arg))

(defun ar-star-upper-in-function-atpt (&optional arg) 
  "Employ actions of STAR at things class of UPPER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'function 'ar-th-star arg))

(defun ar-slashparen-upper-in-function-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of UPPER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'function 'ar-th-slashparen arg))

(defun ar-sort-upper-in-function-atpt (&optional arg) 
  "Employ actions of SORT at things class of UPPER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'function 'ar-th-sort arg))

(defun ar-trim-upper-in-function-atpt (&optional arg) 
  "Employ actions of TRIM at things class of UPPER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'function 'ar-th-trim arg))

(defun ar-trim-left-upper-in-function-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of UPPER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'function 'ar-th-trim-left arg))

(defun ar-trim-right-upper-in-function-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of UPPER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'function 'ar-th-trim-right arg))

(defun ar-underscore-upper-in-function-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of UPPER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'function 'ar-th-underscore arg))

(defun ar-whitespace-upper-in-function-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of UPPER residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'function 'ar-th-whitespace arg))

(defun ar-upper-in-line-atpt (&optional arg) 
  "Employ actions of  at things class of UPPER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'line 'ar-th arg))

(defun ar-greaterangle-upper-in-line-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of UPPER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'line 'ar-th-greaterangle arg))

(defun ar-lesserangle-upper-in-line-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of UPPER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'line 'ar-th-lesserangle arg))

(defun ar-backslash-upper-in-line-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of UPPER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'line 'ar-th-backslash arg))

(defun ar-colon-upper-in-line-atpt (&optional arg) 
  "Employ actions of COLON at things class of UPPER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'line 'ar-th-colon arg))

(defun ar-beg-upper-in-line-atpt (&optional arg) 
  "Employ actions of BEG at things class of UPPER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'line 'ar-th-beg arg))

(defun ar-blok-upper-in-line-atpt (&optional arg) 
  "Employ actions of BLOK at things class of UPPER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'line 'ar-th-blok arg))

(defun ar-bounds-upper-in-line-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of UPPER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'line 'ar-th-bounds arg))

(defun ar-brace-upper-in-line-atpt (&optional arg) 
  "Employ actions of BRACE at things class of UPPER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'line 'ar-th-brace arg))

(defun ar-bracket-upper-in-line-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of UPPER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'line 'ar-th-bracket arg))

(defun ar-commatize-upper-in-line-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of UPPER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'line 'ar-th-commatize arg))

(defun ar-comment-upper-in-line-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of UPPER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'line 'ar-th-comment arg))

(defun ar-dollar-upper-in-line-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of UPPER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'line 'ar-th-dollar arg))

(defun ar-doublebackslash-upper-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of UPPER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'line 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-upper-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of UPPER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'line 'ar-th-doublebacktick arg))

(defun ar-doublequote-upper-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of UPPER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'line 'ar-th-doublequote arg))

(defun ar-doubleslash-upper-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of UPPER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'line 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-upper-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of UPPER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'line 'ar-th-doublebackslashparen arg))

(defun ar-end-upper-in-line-atpt (&optional arg) 
  "Employ actions of END at things class of UPPER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'line 'ar-th-end arg))

(defun ar-escape-upper-in-line-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of UPPER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'line 'ar-th-escape arg))

(defun ar-hide-upper-in-line-atpt (&optional arg) 
  "Employ actions of HIDE at things class of UPPER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'line 'ar-th-hide arg))

(defun ar-hide-show-upper-in-line-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of UPPER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'line 'ar-th-hide-show arg))

(defun ar-hyphen-upper-in-line-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of UPPER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'line 'ar-th-hyphen arg))

(defun ar-kill-upper-in-line-atpt (&optional arg) 
  "Employ actions of KILL at things class of UPPER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'line 'ar-th-kill arg))

(defun ar-leftrightsinglequote-upper-in-line-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of UPPER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'line 'ar-th-leftrightsinglequote arg))

(defun ar-length-upper-in-line-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of UPPER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'line 'ar-th-length arg))

(defun ar-parentize-upper-in-line-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of UPPER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'line 'ar-th-parentize arg))

(defun ar-quote-upper-in-line-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of UPPER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'line 'ar-th-quote arg))

(defun ar-separate-upper-in-line-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of UPPER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'line 'ar-th-separate arg))

(defun ar-show-upper-in-line-atpt (&optional arg) 
  "Employ actions of SHOW at things class of UPPER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'line 'ar-th-show arg))

(defun ar-singlequote-upper-in-line-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of UPPER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'line 'ar-th-singlequote arg))

(defun ar-slash-upper-in-line-atpt (&optional arg) 
  "Employ actions of SLASH at things class of UPPER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'line 'ar-th-slash arg))

(defun ar-star-upper-in-line-atpt (&optional arg) 
  "Employ actions of STAR at things class of UPPER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'line 'ar-th-star arg))

(defun ar-slashparen-upper-in-line-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of UPPER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'line 'ar-th-slashparen arg))

(defun ar-sort-upper-in-line-atpt (&optional arg) 
  "Employ actions of SORT at things class of UPPER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'line 'ar-th-sort arg))

(defun ar-trim-upper-in-line-atpt (&optional arg) 
  "Employ actions of TRIM at things class of UPPER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'line 'ar-th-trim arg))

(defun ar-trim-left-upper-in-line-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of UPPER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'line 'ar-th-trim-left arg))

(defun ar-trim-right-upper-in-line-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of UPPER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'line 'ar-th-trim-right arg))

(defun ar-underscore-upper-in-line-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of UPPER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'line 'ar-th-underscore arg))

(defun ar-whitespace-upper-in-line-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of UPPER residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'line 'ar-th-whitespace arg))

(defun ar-upper-in-list-atpt (&optional arg) 
  "Employ actions of  at things class of UPPER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'list 'ar-th arg))

(defun ar-greaterangle-upper-in-list-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of UPPER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'list 'ar-th-greaterangle arg))

(defun ar-lesserangle-upper-in-list-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of UPPER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'list 'ar-th-lesserangle arg))

(defun ar-backslash-upper-in-list-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of UPPER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'list 'ar-th-backslash arg))

(defun ar-colon-upper-in-list-atpt (&optional arg) 
  "Employ actions of COLON at things class of UPPER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'list 'ar-th-colon arg))

(defun ar-beg-upper-in-list-atpt (&optional arg) 
  "Employ actions of BEG at things class of UPPER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'list 'ar-th-beg arg))

(defun ar-blok-upper-in-list-atpt (&optional arg) 
  "Employ actions of BLOK at things class of UPPER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'list 'ar-th-blok arg))

(defun ar-bounds-upper-in-list-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of UPPER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'list 'ar-th-bounds arg))

(defun ar-brace-upper-in-list-atpt (&optional arg) 
  "Employ actions of BRACE at things class of UPPER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'list 'ar-th-brace arg))

(defun ar-bracket-upper-in-list-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of UPPER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'list 'ar-th-bracket arg))

(defun ar-commatize-upper-in-list-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of UPPER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'list 'ar-th-commatize arg))

(defun ar-comment-upper-in-list-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of UPPER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'list 'ar-th-comment arg))

(defun ar-dollar-upper-in-list-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of UPPER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'list 'ar-th-dollar arg))

(defun ar-doublebackslash-upper-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of UPPER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'list 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-upper-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of UPPER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'list 'ar-th-doublebacktick arg))

(defun ar-doublequote-upper-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of UPPER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'list 'ar-th-doublequote arg))

(defun ar-doubleslash-upper-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of UPPER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'list 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-upper-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of UPPER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'list 'ar-th-doublebackslashparen arg))

(defun ar-end-upper-in-list-atpt (&optional arg) 
  "Employ actions of END at things class of UPPER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'list 'ar-th-end arg))

(defun ar-escape-upper-in-list-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of UPPER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'list 'ar-th-escape arg))

(defun ar-hide-upper-in-list-atpt (&optional arg) 
  "Employ actions of HIDE at things class of UPPER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'list 'ar-th-hide arg))

(defun ar-hide-show-upper-in-list-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of UPPER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'list 'ar-th-hide-show arg))

(defun ar-hyphen-upper-in-list-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of UPPER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'list 'ar-th-hyphen arg))

(defun ar-kill-upper-in-list-atpt (&optional arg) 
  "Employ actions of KILL at things class of UPPER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'list 'ar-th-kill arg))

(defun ar-leftrightsinglequote-upper-in-list-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of UPPER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'list 'ar-th-leftrightsinglequote arg))

(defun ar-length-upper-in-list-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of UPPER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'list 'ar-th-length arg))

(defun ar-parentize-upper-in-list-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of UPPER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'list 'ar-th-parentize arg))

(defun ar-quote-upper-in-list-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of UPPER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'list 'ar-th-quote arg))

(defun ar-separate-upper-in-list-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of UPPER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'list 'ar-th-separate arg))

(defun ar-show-upper-in-list-atpt (&optional arg) 
  "Employ actions of SHOW at things class of UPPER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'list 'ar-th-show arg))

(defun ar-singlequote-upper-in-list-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of UPPER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'list 'ar-th-singlequote arg))

(defun ar-slash-upper-in-list-atpt (&optional arg) 
  "Employ actions of SLASH at things class of UPPER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'list 'ar-th-slash arg))

(defun ar-star-upper-in-list-atpt (&optional arg) 
  "Employ actions of STAR at things class of UPPER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'list 'ar-th-star arg))

(defun ar-slashparen-upper-in-list-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of UPPER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'list 'ar-th-slashparen arg))

(defun ar-sort-upper-in-list-atpt (&optional arg) 
  "Employ actions of SORT at things class of UPPER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'list 'ar-th-sort arg))

(defun ar-trim-upper-in-list-atpt (&optional arg) 
  "Employ actions of TRIM at things class of UPPER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'list 'ar-th-trim arg))

(defun ar-trim-left-upper-in-list-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of UPPER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'list 'ar-th-trim-left arg))

(defun ar-trim-right-upper-in-list-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of UPPER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'list 'ar-th-trim-right arg))

(defun ar-underscore-upper-in-list-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of UPPER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'list 'ar-th-underscore arg))

(defun ar-whitespace-upper-in-list-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of UPPER residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'list 'ar-th-whitespace arg))

(defun ar-upper-in-name-atpt (&optional arg) 
  "Employ actions of  at things class of UPPER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'name 'ar-th arg))

(defun ar-greaterangle-upper-in-name-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of UPPER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'name 'ar-th-greaterangle arg))

(defun ar-lesserangle-upper-in-name-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of UPPER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'name 'ar-th-lesserangle arg))

(defun ar-backslash-upper-in-name-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of UPPER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'name 'ar-th-backslash arg))

(defun ar-colon-upper-in-name-atpt (&optional arg) 
  "Employ actions of COLON at things class of UPPER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'name 'ar-th-colon arg))

(defun ar-beg-upper-in-name-atpt (&optional arg) 
  "Employ actions of BEG at things class of UPPER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'name 'ar-th-beg arg))

(defun ar-blok-upper-in-name-atpt (&optional arg) 
  "Employ actions of BLOK at things class of UPPER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'name 'ar-th-blok arg))

(defun ar-bounds-upper-in-name-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of UPPER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'name 'ar-th-bounds arg))

(defun ar-brace-upper-in-name-atpt (&optional arg) 
  "Employ actions of BRACE at things class of UPPER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'name 'ar-th-brace arg))

(defun ar-bracket-upper-in-name-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of UPPER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'name 'ar-th-bracket arg))

(defun ar-commatize-upper-in-name-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of UPPER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'name 'ar-th-commatize arg))

(defun ar-comment-upper-in-name-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of UPPER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'name 'ar-th-comment arg))

(defun ar-dollar-upper-in-name-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of UPPER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'name 'ar-th-dollar arg))

(defun ar-doublebackslash-upper-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of UPPER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'name 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-upper-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of UPPER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'name 'ar-th-doublebacktick arg))

(defun ar-doublequote-upper-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of UPPER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'name 'ar-th-doublequote arg))

(defun ar-doubleslash-upper-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of UPPER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'name 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-upper-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of UPPER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'name 'ar-th-doublebackslashparen arg))

(defun ar-end-upper-in-name-atpt (&optional arg) 
  "Employ actions of END at things class of UPPER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'name 'ar-th-end arg))

(defun ar-escape-upper-in-name-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of UPPER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'name 'ar-th-escape arg))

(defun ar-hide-upper-in-name-atpt (&optional arg) 
  "Employ actions of HIDE at things class of UPPER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'name 'ar-th-hide arg))

(defun ar-hide-show-upper-in-name-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of UPPER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'name 'ar-th-hide-show arg))

(defun ar-hyphen-upper-in-name-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of UPPER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'name 'ar-th-hyphen arg))

(defun ar-kill-upper-in-name-atpt (&optional arg) 
  "Employ actions of KILL at things class of UPPER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'name 'ar-th-kill arg))

(defun ar-leftrightsinglequote-upper-in-name-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of UPPER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'name 'ar-th-leftrightsinglequote arg))

(defun ar-length-upper-in-name-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of UPPER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'name 'ar-th-length arg))

(defun ar-parentize-upper-in-name-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of UPPER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'name 'ar-th-parentize arg))

(defun ar-quote-upper-in-name-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of UPPER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'name 'ar-th-quote arg))

(defun ar-separate-upper-in-name-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of UPPER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'name 'ar-th-separate arg))

(defun ar-show-upper-in-name-atpt (&optional arg) 
  "Employ actions of SHOW at things class of UPPER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'name 'ar-th-show arg))

(defun ar-singlequote-upper-in-name-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of UPPER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'name 'ar-th-singlequote arg))

(defun ar-slash-upper-in-name-atpt (&optional arg) 
  "Employ actions of SLASH at things class of UPPER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'name 'ar-th-slash arg))

(defun ar-star-upper-in-name-atpt (&optional arg) 
  "Employ actions of STAR at things class of UPPER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'name 'ar-th-star arg))

(defun ar-slashparen-upper-in-name-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of UPPER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'name 'ar-th-slashparen arg))

(defun ar-sort-upper-in-name-atpt (&optional arg) 
  "Employ actions of SORT at things class of UPPER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'name 'ar-th-sort arg))

(defun ar-trim-upper-in-name-atpt (&optional arg) 
  "Employ actions of TRIM at things class of UPPER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'name 'ar-th-trim arg))

(defun ar-trim-left-upper-in-name-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of UPPER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'name 'ar-th-trim-left arg))

(defun ar-trim-right-upper-in-name-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of UPPER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'name 'ar-th-trim-right arg))

(defun ar-underscore-upper-in-name-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of UPPER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'name 'ar-th-underscore arg))

(defun ar-whitespace-upper-in-name-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of UPPER residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'name 'ar-th-whitespace arg))

(defun ar-upper-in-page-atpt (&optional arg) 
  "Employ actions of  at things class of UPPER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'page 'ar-th arg))

(defun ar-greaterangle-upper-in-page-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of UPPER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'page 'ar-th-greaterangle arg))

(defun ar-lesserangle-upper-in-page-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of UPPER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'page 'ar-th-lesserangle arg))

(defun ar-backslash-upper-in-page-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of UPPER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'page 'ar-th-backslash arg))

(defun ar-colon-upper-in-page-atpt (&optional arg) 
  "Employ actions of COLON at things class of UPPER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'page 'ar-th-colon arg))

(defun ar-beg-upper-in-page-atpt (&optional arg) 
  "Employ actions of BEG at things class of UPPER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'page 'ar-th-beg arg))

(defun ar-blok-upper-in-page-atpt (&optional arg) 
  "Employ actions of BLOK at things class of UPPER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'page 'ar-th-blok arg))

(defun ar-bounds-upper-in-page-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of UPPER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'page 'ar-th-bounds arg))

(defun ar-brace-upper-in-page-atpt (&optional arg) 
  "Employ actions of BRACE at things class of UPPER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'page 'ar-th-brace arg))

(defun ar-bracket-upper-in-page-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of UPPER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'page 'ar-th-bracket arg))

(defun ar-commatize-upper-in-page-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of UPPER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'page 'ar-th-commatize arg))

(defun ar-comment-upper-in-page-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of UPPER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'page 'ar-th-comment arg))

(defun ar-dollar-upper-in-page-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of UPPER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'page 'ar-th-dollar arg))

(defun ar-doublebackslash-upper-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of UPPER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'page 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-upper-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of UPPER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'page 'ar-th-doublebacktick arg))

(defun ar-doublequote-upper-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of UPPER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'page 'ar-th-doublequote arg))

(defun ar-doubleslash-upper-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of UPPER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'page 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-upper-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of UPPER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'page 'ar-th-doublebackslashparen arg))

(defun ar-end-upper-in-page-atpt (&optional arg) 
  "Employ actions of END at things class of UPPER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'page 'ar-th-end arg))

(defun ar-escape-upper-in-page-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of UPPER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'page 'ar-th-escape arg))

(defun ar-hide-upper-in-page-atpt (&optional arg) 
  "Employ actions of HIDE at things class of UPPER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'page 'ar-th-hide arg))

(defun ar-hide-show-upper-in-page-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of UPPER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'page 'ar-th-hide-show arg))

(defun ar-hyphen-upper-in-page-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of UPPER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'page 'ar-th-hyphen arg))

(defun ar-kill-upper-in-page-atpt (&optional arg) 
  "Employ actions of KILL at things class of UPPER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'page 'ar-th-kill arg))

(defun ar-leftrightsinglequote-upper-in-page-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of UPPER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'page 'ar-th-leftrightsinglequote arg))

(defun ar-length-upper-in-page-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of UPPER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'page 'ar-th-length arg))

(defun ar-parentize-upper-in-page-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of UPPER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'page 'ar-th-parentize arg))

(defun ar-quote-upper-in-page-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of UPPER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'page 'ar-th-quote arg))

(defun ar-separate-upper-in-page-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of UPPER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'page 'ar-th-separate arg))

(defun ar-show-upper-in-page-atpt (&optional arg) 
  "Employ actions of SHOW at things class of UPPER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'page 'ar-th-show arg))

(defun ar-singlequote-upper-in-page-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of UPPER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'page 'ar-th-singlequote arg))

(defun ar-slash-upper-in-page-atpt (&optional arg) 
  "Employ actions of SLASH at things class of UPPER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'page 'ar-th-slash arg))

(defun ar-star-upper-in-page-atpt (&optional arg) 
  "Employ actions of STAR at things class of UPPER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'page 'ar-th-star arg))

(defun ar-slashparen-upper-in-page-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of UPPER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'page 'ar-th-slashparen arg))

(defun ar-sort-upper-in-page-atpt (&optional arg) 
  "Employ actions of SORT at things class of UPPER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'page 'ar-th-sort arg))

(defun ar-trim-upper-in-page-atpt (&optional arg) 
  "Employ actions of TRIM at things class of UPPER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'page 'ar-th-trim arg))

(defun ar-trim-left-upper-in-page-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of UPPER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'page 'ar-th-trim-left arg))

(defun ar-trim-right-upper-in-page-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of UPPER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'page 'ar-th-trim-right arg))

(defun ar-underscore-upper-in-page-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of UPPER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'page 'ar-th-underscore arg))

(defun ar-whitespace-upper-in-page-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of UPPER residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'page 'ar-th-whitespace arg))

(defun ar-upper-in-paragraph-atpt (&optional arg) 
  "Employ actions of  at things class of UPPER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'paragraph 'ar-th arg))

(defun ar-greaterangle-upper-in-paragraph-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of UPPER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'paragraph 'ar-th-greaterangle arg))

(defun ar-lesserangle-upper-in-paragraph-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of UPPER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'paragraph 'ar-th-lesserangle arg))

(defun ar-backslash-upper-in-paragraph-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of UPPER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'paragraph 'ar-th-backslash arg))

(defun ar-colon-upper-in-paragraph-atpt (&optional arg) 
  "Employ actions of COLON at things class of UPPER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'paragraph 'ar-th-colon arg))

(defun ar-beg-upper-in-paragraph-atpt (&optional arg) 
  "Employ actions of BEG at things class of UPPER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'paragraph 'ar-th-beg arg))

(defun ar-blok-upper-in-paragraph-atpt (&optional arg) 
  "Employ actions of BLOK at things class of UPPER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'paragraph 'ar-th-blok arg))

(defun ar-bounds-upper-in-paragraph-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of UPPER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'paragraph 'ar-th-bounds arg))

(defun ar-brace-upper-in-paragraph-atpt (&optional arg) 
  "Employ actions of BRACE at things class of UPPER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'paragraph 'ar-th-brace arg))

(defun ar-bracket-upper-in-paragraph-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of UPPER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'paragraph 'ar-th-bracket arg))

(defun ar-commatize-upper-in-paragraph-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of UPPER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'paragraph 'ar-th-commatize arg))

(defun ar-comment-upper-in-paragraph-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of UPPER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'paragraph 'ar-th-comment arg))

(defun ar-dollar-upper-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of UPPER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'paragraph 'ar-th-dollar arg))

(defun ar-doublebackslash-upper-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of UPPER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'paragraph 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-upper-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of UPPER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'paragraph 'ar-th-doublebacktick arg))

(defun ar-doublequote-upper-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of UPPER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'paragraph 'ar-th-doublequote arg))

(defun ar-doubleslash-upper-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of UPPER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'paragraph 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-upper-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of UPPER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'paragraph 'ar-th-doublebackslashparen arg))

(defun ar-end-upper-in-paragraph-atpt (&optional arg) 
  "Employ actions of END at things class of UPPER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'paragraph 'ar-th-end arg))

(defun ar-escape-upper-in-paragraph-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of UPPER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'paragraph 'ar-th-escape arg))

(defun ar-hide-upper-in-paragraph-atpt (&optional arg) 
  "Employ actions of HIDE at things class of UPPER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'paragraph 'ar-th-hide arg))

(defun ar-hide-show-upper-in-paragraph-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of UPPER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'paragraph 'ar-th-hide-show arg))

(defun ar-hyphen-upper-in-paragraph-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of UPPER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'paragraph 'ar-th-hyphen arg))

(defun ar-kill-upper-in-paragraph-atpt (&optional arg) 
  "Employ actions of KILL at things class of UPPER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'paragraph 'ar-th-kill arg))

(defun ar-leftrightsinglequote-upper-in-paragraph-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of UPPER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'paragraph 'ar-th-leftrightsinglequote arg))

(defun ar-length-upper-in-paragraph-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of UPPER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'paragraph 'ar-th-length arg))

(defun ar-parentize-upper-in-paragraph-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of UPPER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'paragraph 'ar-th-parentize arg))

(defun ar-quote-upper-in-paragraph-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of UPPER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'paragraph 'ar-th-quote arg))

(defun ar-separate-upper-in-paragraph-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of UPPER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'paragraph 'ar-th-separate arg))

(defun ar-show-upper-in-paragraph-atpt (&optional arg) 
  "Employ actions of SHOW at things class of UPPER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'paragraph 'ar-th-show arg))

(defun ar-singlequote-upper-in-paragraph-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of UPPER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'paragraph 'ar-th-singlequote arg))

(defun ar-slash-upper-in-paragraph-atpt (&optional arg) 
  "Employ actions of SLASH at things class of UPPER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'paragraph 'ar-th-slash arg))

(defun ar-star-upper-in-paragraph-atpt (&optional arg) 
  "Employ actions of STAR at things class of UPPER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'paragraph 'ar-th-star arg))

(defun ar-slashparen-upper-in-paragraph-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of UPPER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'paragraph 'ar-th-slashparen arg))

(defun ar-sort-upper-in-paragraph-atpt (&optional arg) 
  "Employ actions of SORT at things class of UPPER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'paragraph 'ar-th-sort arg))

(defun ar-trim-upper-in-paragraph-atpt (&optional arg) 
  "Employ actions of TRIM at things class of UPPER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'paragraph 'ar-th-trim arg))

(defun ar-trim-left-upper-in-paragraph-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of UPPER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'paragraph 'ar-th-trim-left arg))

(defun ar-trim-right-upper-in-paragraph-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of UPPER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'paragraph 'ar-th-trim-right arg))

(defun ar-underscore-upper-in-paragraph-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of UPPER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'paragraph 'ar-th-underscore arg))

(defun ar-whitespace-upper-in-paragraph-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of UPPER residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'paragraph 'ar-th-whitespace arg))

(defun ar-upper-in-region-atpt (&optional arg) 
  "Employ actions of  at things class of UPPER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'region 'ar-th arg))

(defun ar-greaterangle-upper-in-region-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of UPPER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'region 'ar-th-greaterangle arg))

(defun ar-lesserangle-upper-in-region-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of UPPER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'region 'ar-th-lesserangle arg))

(defun ar-backslash-upper-in-region-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of UPPER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'region 'ar-th-backslash arg))

(defun ar-colon-upper-in-region-atpt (&optional arg) 
  "Employ actions of COLON at things class of UPPER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'region 'ar-th-colon arg))

(defun ar-beg-upper-in-region-atpt (&optional arg) 
  "Employ actions of BEG at things class of UPPER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'region 'ar-th-beg arg))

(defun ar-blok-upper-in-region-atpt (&optional arg) 
  "Employ actions of BLOK at things class of UPPER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'region 'ar-th-blok arg))

(defun ar-bounds-upper-in-region-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of UPPER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'region 'ar-th-bounds arg))

(defun ar-brace-upper-in-region-atpt (&optional arg) 
  "Employ actions of BRACE at things class of UPPER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'region 'ar-th-brace arg))

(defun ar-bracket-upper-in-region-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of UPPER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'region 'ar-th-bracket arg))

(defun ar-commatize-upper-in-region-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of UPPER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'region 'ar-th-commatize arg))

(defun ar-comment-upper-in-region-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of UPPER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'region 'ar-th-comment arg))

(defun ar-dollar-upper-in-region-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of UPPER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'region 'ar-th-dollar arg))

(defun ar-doublebackslash-upper-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of UPPER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'region 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-upper-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of UPPER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'region 'ar-th-doublebacktick arg))

(defun ar-doublequote-upper-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of UPPER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'region 'ar-th-doublequote arg))

(defun ar-doubleslash-upper-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of UPPER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'region 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-upper-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of UPPER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'region 'ar-th-doublebackslashparen arg))

(defun ar-end-upper-in-region-atpt (&optional arg) 
  "Employ actions of END at things class of UPPER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'region 'ar-th-end arg))

(defun ar-escape-upper-in-region-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of UPPER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'region 'ar-th-escape arg))

(defun ar-hide-upper-in-region-atpt (&optional arg) 
  "Employ actions of HIDE at things class of UPPER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'region 'ar-th-hide arg))

(defun ar-hide-show-upper-in-region-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of UPPER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'region 'ar-th-hide-show arg))

(defun ar-hyphen-upper-in-region-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of UPPER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'region 'ar-th-hyphen arg))

(defun ar-kill-upper-in-region-atpt (&optional arg) 
  "Employ actions of KILL at things class of UPPER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'region 'ar-th-kill arg))

(defun ar-leftrightsinglequote-upper-in-region-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of UPPER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'region 'ar-th-leftrightsinglequote arg))

(defun ar-length-upper-in-region-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of UPPER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'region 'ar-th-length arg))

(defun ar-parentize-upper-in-region-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of UPPER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'region 'ar-th-parentize arg))

(defun ar-quote-upper-in-region-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of UPPER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'region 'ar-th-quote arg))

(defun ar-separate-upper-in-region-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of UPPER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'region 'ar-th-separate arg))

(defun ar-show-upper-in-region-atpt (&optional arg) 
  "Employ actions of SHOW at things class of UPPER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'region 'ar-th-show arg))

(defun ar-singlequote-upper-in-region-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of UPPER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'region 'ar-th-singlequote arg))

(defun ar-slash-upper-in-region-atpt (&optional arg) 
  "Employ actions of SLASH at things class of UPPER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'region 'ar-th-slash arg))

(defun ar-star-upper-in-region-atpt (&optional arg) 
  "Employ actions of STAR at things class of UPPER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'region 'ar-th-star arg))

(defun ar-slashparen-upper-in-region-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of UPPER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'region 'ar-th-slashparen arg))

(defun ar-sort-upper-in-region-atpt (&optional arg) 
  "Employ actions of SORT at things class of UPPER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'region 'ar-th-sort arg))

(defun ar-trim-upper-in-region-atpt (&optional arg) 
  "Employ actions of TRIM at things class of UPPER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'region 'ar-th-trim arg))

(defun ar-trim-left-upper-in-region-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of UPPER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'region 'ar-th-trim-left arg))

(defun ar-trim-right-upper-in-region-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of UPPER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'region 'ar-th-trim-right arg))

(defun ar-underscore-upper-in-region-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of UPPER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'region 'ar-th-underscore arg))

(defun ar-whitespace-upper-in-region-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of UPPER residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'region 'ar-th-whitespace arg))

(defun ar-upper-in-sentence-atpt (&optional arg) 
  "Employ actions of  at things class of UPPER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sentence 'ar-th arg))

(defun ar-greaterangle-upper-in-sentence-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of UPPER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sentence 'ar-th-greaterangle arg))

(defun ar-lesserangle-upper-in-sentence-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of UPPER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sentence 'ar-th-lesserangle arg))

(defun ar-backslash-upper-in-sentence-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of UPPER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sentence 'ar-th-backslash arg))

(defun ar-colon-upper-in-sentence-atpt (&optional arg) 
  "Employ actions of COLON at things class of UPPER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sentence 'ar-th-colon arg))

(defun ar-beg-upper-in-sentence-atpt (&optional arg) 
  "Employ actions of BEG at things class of UPPER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sentence 'ar-th-beg arg))

(defun ar-blok-upper-in-sentence-atpt (&optional arg) 
  "Employ actions of BLOK at things class of UPPER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sentence 'ar-th-blok arg))

(defun ar-bounds-upper-in-sentence-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of UPPER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sentence 'ar-th-bounds arg))

(defun ar-brace-upper-in-sentence-atpt (&optional arg) 
  "Employ actions of BRACE at things class of UPPER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sentence 'ar-th-brace arg))

(defun ar-bracket-upper-in-sentence-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of UPPER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sentence 'ar-th-bracket arg))

(defun ar-commatize-upper-in-sentence-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of UPPER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sentence 'ar-th-commatize arg))

(defun ar-comment-upper-in-sentence-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of UPPER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sentence 'ar-th-comment arg))

(defun ar-dollar-upper-in-sentence-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of UPPER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sentence 'ar-th-dollar arg))

(defun ar-doublebackslash-upper-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of UPPER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sentence 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-upper-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of UPPER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sentence 'ar-th-doublebacktick arg))

(defun ar-doublequote-upper-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of UPPER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sentence 'ar-th-doublequote arg))

(defun ar-doubleslash-upper-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of UPPER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sentence 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-upper-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of UPPER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sentence 'ar-th-doublebackslashparen arg))

(defun ar-end-upper-in-sentence-atpt (&optional arg) 
  "Employ actions of END at things class of UPPER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sentence 'ar-th-end arg))

(defun ar-escape-upper-in-sentence-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of UPPER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sentence 'ar-th-escape arg))

(defun ar-hide-upper-in-sentence-atpt (&optional arg) 
  "Employ actions of HIDE at things class of UPPER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sentence 'ar-th-hide arg))

(defun ar-hide-show-upper-in-sentence-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of UPPER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sentence 'ar-th-hide-show arg))

(defun ar-hyphen-upper-in-sentence-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of UPPER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sentence 'ar-th-hyphen arg))

(defun ar-kill-upper-in-sentence-atpt (&optional arg) 
  "Employ actions of KILL at things class of UPPER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sentence 'ar-th-kill arg))

(defun ar-leftrightsinglequote-upper-in-sentence-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of UPPER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sentence 'ar-th-leftrightsinglequote arg))

(defun ar-length-upper-in-sentence-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of UPPER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sentence 'ar-th-length arg))

(defun ar-parentize-upper-in-sentence-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of UPPER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sentence 'ar-th-parentize arg))

(defun ar-quote-upper-in-sentence-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of UPPER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sentence 'ar-th-quote arg))

(defun ar-separate-upper-in-sentence-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of UPPER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sentence 'ar-th-separate arg))

(defun ar-show-upper-in-sentence-atpt (&optional arg) 
  "Employ actions of SHOW at things class of UPPER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sentence 'ar-th-show arg))

(defun ar-singlequote-upper-in-sentence-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of UPPER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sentence 'ar-th-singlequote arg))

(defun ar-slash-upper-in-sentence-atpt (&optional arg) 
  "Employ actions of SLASH at things class of UPPER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sentence 'ar-th-slash arg))

(defun ar-star-upper-in-sentence-atpt (&optional arg) 
  "Employ actions of STAR at things class of UPPER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sentence 'ar-th-star arg))

(defun ar-slashparen-upper-in-sentence-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of UPPER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sentence 'ar-th-slashparen arg))

(defun ar-sort-upper-in-sentence-atpt (&optional arg) 
  "Employ actions of SORT at things class of UPPER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sentence 'ar-th-sort arg))

(defun ar-trim-upper-in-sentence-atpt (&optional arg) 
  "Employ actions of TRIM at things class of UPPER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sentence 'ar-th-trim arg))

(defun ar-trim-left-upper-in-sentence-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of UPPER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sentence 'ar-th-trim-left arg))

(defun ar-trim-right-upper-in-sentence-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of UPPER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sentence 'ar-th-trim-right arg))

(defun ar-underscore-upper-in-sentence-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of UPPER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sentence 'ar-th-underscore arg))

(defun ar-whitespace-upper-in-sentence-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of UPPER residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sentence 'ar-th-whitespace arg))

(defun ar-upper-in-sexp-atpt (&optional arg) 
  "Employ actions of  at things class of UPPER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sexp 'ar-th arg))

(defun ar-greaterangle-upper-in-sexp-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of UPPER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sexp 'ar-th-greaterangle arg))

(defun ar-lesserangle-upper-in-sexp-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of UPPER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sexp 'ar-th-lesserangle arg))

(defun ar-backslash-upper-in-sexp-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of UPPER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sexp 'ar-th-backslash arg))

(defun ar-colon-upper-in-sexp-atpt (&optional arg) 
  "Employ actions of COLON at things class of UPPER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sexp 'ar-th-colon arg))

(defun ar-beg-upper-in-sexp-atpt (&optional arg) 
  "Employ actions of BEG at things class of UPPER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sexp 'ar-th-beg arg))

(defun ar-blok-upper-in-sexp-atpt (&optional arg) 
  "Employ actions of BLOK at things class of UPPER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sexp 'ar-th-blok arg))

(defun ar-bounds-upper-in-sexp-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of UPPER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sexp 'ar-th-bounds arg))

(defun ar-brace-upper-in-sexp-atpt (&optional arg) 
  "Employ actions of BRACE at things class of UPPER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sexp 'ar-th-brace arg))

(defun ar-bracket-upper-in-sexp-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of UPPER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sexp 'ar-th-bracket arg))

(defun ar-commatize-upper-in-sexp-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of UPPER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sexp 'ar-th-commatize arg))

(defun ar-comment-upper-in-sexp-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of UPPER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sexp 'ar-th-comment arg))

(defun ar-dollar-upper-in-sexp-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of UPPER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sexp 'ar-th-dollar arg))

(defun ar-doublebackslash-upper-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of UPPER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sexp 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-upper-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of UPPER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sexp 'ar-th-doublebacktick arg))

(defun ar-doublequote-upper-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of UPPER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sexp 'ar-th-doublequote arg))

(defun ar-doubleslash-upper-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of UPPER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sexp 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-upper-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of UPPER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sexp 'ar-th-doublebackslashparen arg))

(defun ar-end-upper-in-sexp-atpt (&optional arg) 
  "Employ actions of END at things class of UPPER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sexp 'ar-th-end arg))

(defun ar-escape-upper-in-sexp-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of UPPER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sexp 'ar-th-escape arg))

(defun ar-hide-upper-in-sexp-atpt (&optional arg) 
  "Employ actions of HIDE at things class of UPPER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sexp 'ar-th-hide arg))

(defun ar-hide-show-upper-in-sexp-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of UPPER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sexp 'ar-th-hide-show arg))

(defun ar-hyphen-upper-in-sexp-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of UPPER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sexp 'ar-th-hyphen arg))

(defun ar-kill-upper-in-sexp-atpt (&optional arg) 
  "Employ actions of KILL at things class of UPPER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sexp 'ar-th-kill arg))

(defun ar-leftrightsinglequote-upper-in-sexp-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of UPPER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sexp 'ar-th-leftrightsinglequote arg))

(defun ar-length-upper-in-sexp-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of UPPER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sexp 'ar-th-length arg))

(defun ar-parentize-upper-in-sexp-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of UPPER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sexp 'ar-th-parentize arg))

(defun ar-quote-upper-in-sexp-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of UPPER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sexp 'ar-th-quote arg))

(defun ar-separate-upper-in-sexp-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of UPPER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sexp 'ar-th-separate arg))

(defun ar-show-upper-in-sexp-atpt (&optional arg) 
  "Employ actions of SHOW at things class of UPPER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sexp 'ar-th-show arg))

(defun ar-singlequote-upper-in-sexp-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of UPPER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sexp 'ar-th-singlequote arg))

(defun ar-slash-upper-in-sexp-atpt (&optional arg) 
  "Employ actions of SLASH at things class of UPPER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sexp 'ar-th-slash arg))

(defun ar-star-upper-in-sexp-atpt (&optional arg) 
  "Employ actions of STAR at things class of UPPER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sexp 'ar-th-star arg))

(defun ar-slashparen-upper-in-sexp-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of UPPER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sexp 'ar-th-slashparen arg))

(defun ar-sort-upper-in-sexp-atpt (&optional arg) 
  "Employ actions of SORT at things class of UPPER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sexp 'ar-th-sort arg))

(defun ar-trim-upper-in-sexp-atpt (&optional arg) 
  "Employ actions of TRIM at things class of UPPER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sexp 'ar-th-trim arg))

(defun ar-trim-left-upper-in-sexp-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of UPPER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sexp 'ar-th-trim-left arg))

(defun ar-trim-right-upper-in-sexp-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of UPPER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sexp 'ar-th-trim-right arg))

(defun ar-underscore-upper-in-sexp-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of UPPER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sexp 'ar-th-underscore arg))

(defun ar-whitespace-upper-in-sexp-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of UPPER residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'sexp 'ar-th-whitespace arg))

(defun ar-upper-in-shstruct-atpt (&optional arg) 
  "Employ actions of  at things class of UPPER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'shstruct 'ar-th arg))

(defun ar-greaterangle-upper-in-shstruct-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of UPPER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'shstruct 'ar-th-greaterangle arg))

(defun ar-lesserangle-upper-in-shstruct-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of UPPER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'shstruct 'ar-th-lesserangle arg))

(defun ar-backslash-upper-in-shstruct-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of UPPER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'shstruct 'ar-th-backslash arg))

(defun ar-colon-upper-in-shstruct-atpt (&optional arg) 
  "Employ actions of COLON at things class of UPPER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'shstruct 'ar-th-colon arg))

(defun ar-beg-upper-in-shstruct-atpt (&optional arg) 
  "Employ actions of BEG at things class of UPPER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'shstruct 'ar-th-beg arg))

(defun ar-blok-upper-in-shstruct-atpt (&optional arg) 
  "Employ actions of BLOK at things class of UPPER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'shstruct 'ar-th-blok arg))

(defun ar-bounds-upper-in-shstruct-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of UPPER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'shstruct 'ar-th-bounds arg))

(defun ar-brace-upper-in-shstruct-atpt (&optional arg) 
  "Employ actions of BRACE at things class of UPPER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'shstruct 'ar-th-brace arg))

(defun ar-bracket-upper-in-shstruct-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of UPPER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'shstruct 'ar-th-bracket arg))

(defun ar-commatize-upper-in-shstruct-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of UPPER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'shstruct 'ar-th-commatize arg))

(defun ar-comment-upper-in-shstruct-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of UPPER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'shstruct 'ar-th-comment arg))

(defun ar-dollar-upper-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of UPPER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'shstruct 'ar-th-dollar arg))

(defun ar-doublebackslash-upper-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of UPPER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'shstruct 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-upper-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of UPPER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'shstruct 'ar-th-doublebacktick arg))

(defun ar-doublequote-upper-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of UPPER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'shstruct 'ar-th-doublequote arg))

(defun ar-doubleslash-upper-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of UPPER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'shstruct 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-upper-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of UPPER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'shstruct 'ar-th-doublebackslashparen arg))

(defun ar-end-upper-in-shstruct-atpt (&optional arg) 
  "Employ actions of END at things class of UPPER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'shstruct 'ar-th-end arg))

(defun ar-escape-upper-in-shstruct-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of UPPER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'shstruct 'ar-th-escape arg))

(defun ar-hide-upper-in-shstruct-atpt (&optional arg) 
  "Employ actions of HIDE at things class of UPPER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'shstruct 'ar-th-hide arg))

(defun ar-hide-show-upper-in-shstruct-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of UPPER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'shstruct 'ar-th-hide-show arg))

(defun ar-hyphen-upper-in-shstruct-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of UPPER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'shstruct 'ar-th-hyphen arg))

(defun ar-kill-upper-in-shstruct-atpt (&optional arg) 
  "Employ actions of KILL at things class of UPPER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'shstruct 'ar-th-kill arg))

(defun ar-leftrightsinglequote-upper-in-shstruct-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of UPPER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'shstruct 'ar-th-leftrightsinglequote arg))

(defun ar-length-upper-in-shstruct-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of UPPER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'shstruct 'ar-th-length arg))

(defun ar-parentize-upper-in-shstruct-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of UPPER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'shstruct 'ar-th-parentize arg))

(defun ar-quote-upper-in-shstruct-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of UPPER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'shstruct 'ar-th-quote arg))

(defun ar-separate-upper-in-shstruct-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of UPPER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'shstruct 'ar-th-separate arg))

(defun ar-show-upper-in-shstruct-atpt (&optional arg) 
  "Employ actions of SHOW at things class of UPPER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'shstruct 'ar-th-show arg))

(defun ar-singlequote-upper-in-shstruct-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of UPPER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'shstruct 'ar-th-singlequote arg))

(defun ar-slash-upper-in-shstruct-atpt (&optional arg) 
  "Employ actions of SLASH at things class of UPPER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'shstruct 'ar-th-slash arg))

(defun ar-star-upper-in-shstruct-atpt (&optional arg) 
  "Employ actions of STAR at things class of UPPER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'shstruct 'ar-th-star arg))

(defun ar-slashparen-upper-in-shstruct-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of UPPER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'shstruct 'ar-th-slashparen arg))

(defun ar-sort-upper-in-shstruct-atpt (&optional arg) 
  "Employ actions of SORT at things class of UPPER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'shstruct 'ar-th-sort arg))

(defun ar-trim-upper-in-shstruct-atpt (&optional arg) 
  "Employ actions of TRIM at things class of UPPER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'shstruct 'ar-th-trim arg))

(defun ar-trim-left-upper-in-shstruct-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of UPPER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'shstruct 'ar-th-trim-left arg))

(defun ar-trim-right-upper-in-shstruct-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of UPPER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'shstruct 'ar-th-trim-right arg))

(defun ar-underscore-upper-in-shstruct-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of UPPER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'shstruct 'ar-th-underscore arg))

(defun ar-whitespace-upper-in-shstruct-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of UPPER residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'upper 'shstruct 'ar-th-whitespace arg))

(defun ar-xdigit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of  at things class of XDIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'greateranglednested 'ar-th arg))

(defun ar-greaterangle-xdigit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of XDIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'greateranglednested 'ar-th-greaterangle arg))

(defun ar-lesserangle-xdigit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of XDIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'greateranglednested 'ar-th-lesserangle arg))

(defun ar-backslash-xdigit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of XDIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'greateranglednested 'ar-th-backslash arg))

(defun ar-colon-xdigit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of COLON at things class of XDIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'greateranglednested 'ar-th-colon arg))

(defun ar-beg-xdigit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BEG at things class of XDIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'greateranglednested 'ar-th-beg arg))

(defun ar-blok-xdigit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BLOK at things class of XDIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'greateranglednested 'ar-th-blok arg))

(defun ar-bounds-xdigit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of XDIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'greateranglednested 'ar-th-bounds arg))

(defun ar-brace-xdigit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BRACE at things class of XDIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'greateranglednested 'ar-th-brace arg))

(defun ar-bracket-xdigit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of XDIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'greateranglednested 'ar-th-bracket arg))

(defun ar-commatize-xdigit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of XDIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'greateranglednested 'ar-th-commatize arg))

(defun ar-comment-xdigit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of XDIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'greateranglednested 'ar-th-comment arg))

(defun ar-dollar-xdigit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of XDIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'greateranglednested 'ar-th-dollar arg))

(defun ar-doublebackslash-xdigit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of XDIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'greateranglednested 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-xdigit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of XDIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'greateranglednested 'ar-th-doublebacktick arg))

(defun ar-doublequote-xdigit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of XDIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'greateranglednested 'ar-th-doublequote arg))

(defun ar-doubleslash-xdigit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of XDIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'greateranglednested 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-xdigit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of XDIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'greateranglednested 'ar-th-doublebackslashparen arg))

(defun ar-end-xdigit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of END at things class of XDIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'greateranglednested 'ar-th-end arg))

(defun ar-escape-xdigit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of XDIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'greateranglednested 'ar-th-escape arg))

(defun ar-hide-xdigit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of HIDE at things class of XDIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'greateranglednested 'ar-th-hide arg))

(defun ar-hide-show-xdigit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of XDIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'greateranglednested 'ar-th-hide-show arg))

(defun ar-hyphen-xdigit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of XDIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'greateranglednested 'ar-th-hyphen arg))

(defun ar-kill-xdigit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of KILL at things class of XDIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'greateranglednested 'ar-th-kill arg))

(defun ar-leftrightsinglequote-xdigit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of XDIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'greateranglednested 'ar-th-leftrightsinglequote arg))

(defun ar-length-xdigit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of XDIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'greateranglednested 'ar-th-length arg))

(defun ar-parentize-xdigit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of XDIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'greateranglednested 'ar-th-parentize arg))

(defun ar-quote-xdigit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of XDIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'greateranglednested 'ar-th-quote arg))

(defun ar-separate-xdigit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of XDIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'greateranglednested 'ar-th-separate arg))

(defun ar-show-xdigit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SHOW at things class of XDIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'greateranglednested 'ar-th-show arg))

(defun ar-singlequote-xdigit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of XDIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'greateranglednested 'ar-th-singlequote arg))

(defun ar-slash-xdigit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SLASH at things class of XDIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'greateranglednested 'ar-th-slash arg))

(defun ar-star-xdigit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of STAR at things class of XDIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'greateranglednested 'ar-th-star arg))

(defun ar-slashparen-xdigit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of XDIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'greateranglednested 'ar-th-slashparen arg))

(defun ar-sort-xdigit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of SORT at things class of XDIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'greateranglednested 'ar-th-sort arg))

(defun ar-trim-xdigit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of TRIM at things class of XDIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'greateranglednested 'ar-th-trim arg))

(defun ar-trim-left-xdigit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of XDIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'greateranglednested 'ar-th-trim-left arg))

(defun ar-trim-right-xdigit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of XDIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'greateranglednested 'ar-th-trim-right arg))

(defun ar-underscore-xdigit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of XDIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'greateranglednested 'ar-th-underscore arg))

(defun ar-whitespace-xdigit-in-greateranglednested-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of XDIGIT residing withing GREATERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'greateranglednested 'ar-th-whitespace arg))

(defun ar-xdigit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of  at things class of XDIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'lesseranglednested 'ar-th arg))

(defun ar-greaterangle-xdigit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of XDIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'lesseranglednested 'ar-th-greaterangle arg))

(defun ar-lesserangle-xdigit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of XDIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'lesseranglednested 'ar-th-lesserangle arg))

(defun ar-backslash-xdigit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of XDIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'lesseranglednested 'ar-th-backslash arg))

(defun ar-colon-xdigit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of COLON at things class of XDIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'lesseranglednested 'ar-th-colon arg))

(defun ar-beg-xdigit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BEG at things class of XDIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'lesseranglednested 'ar-th-beg arg))

(defun ar-blok-xdigit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BLOK at things class of XDIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'lesseranglednested 'ar-th-blok arg))

(defun ar-bounds-xdigit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of XDIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'lesseranglednested 'ar-th-bounds arg))

(defun ar-brace-xdigit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BRACE at things class of XDIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'lesseranglednested 'ar-th-brace arg))

(defun ar-bracket-xdigit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of XDIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'lesseranglednested 'ar-th-bracket arg))

(defun ar-commatize-xdigit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of XDIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'lesseranglednested 'ar-th-commatize arg))

(defun ar-comment-xdigit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of XDIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'lesseranglednested 'ar-th-comment arg))

(defun ar-dollar-xdigit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of XDIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'lesseranglednested 'ar-th-dollar arg))

(defun ar-doublebackslash-xdigit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of XDIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'lesseranglednested 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-xdigit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of XDIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'lesseranglednested 'ar-th-doublebacktick arg))

(defun ar-doublequote-xdigit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of XDIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'lesseranglednested 'ar-th-doublequote arg))

(defun ar-doubleslash-xdigit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of XDIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'lesseranglednested 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-xdigit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of XDIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'lesseranglednested 'ar-th-doublebackslashparen arg))

(defun ar-end-xdigit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of END at things class of XDIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'lesseranglednested 'ar-th-end arg))

(defun ar-escape-xdigit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of XDIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'lesseranglednested 'ar-th-escape arg))

(defun ar-hide-xdigit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of HIDE at things class of XDIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'lesseranglednested 'ar-th-hide arg))

(defun ar-hide-show-xdigit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of XDIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'lesseranglednested 'ar-th-hide-show arg))

(defun ar-hyphen-xdigit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of XDIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'lesseranglednested 'ar-th-hyphen arg))

(defun ar-kill-xdigit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of KILL at things class of XDIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'lesseranglednested 'ar-th-kill arg))

(defun ar-leftrightsinglequote-xdigit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of XDIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'lesseranglednested 'ar-th-leftrightsinglequote arg))

(defun ar-length-xdigit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of XDIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'lesseranglednested 'ar-th-length arg))

(defun ar-parentize-xdigit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of XDIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'lesseranglednested 'ar-th-parentize arg))

(defun ar-quote-xdigit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of XDIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'lesseranglednested 'ar-th-quote arg))

(defun ar-separate-xdigit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of XDIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'lesseranglednested 'ar-th-separate arg))

(defun ar-show-xdigit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SHOW at things class of XDIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'lesseranglednested 'ar-th-show arg))

(defun ar-singlequote-xdigit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of XDIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'lesseranglednested 'ar-th-singlequote arg))

(defun ar-slash-xdigit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SLASH at things class of XDIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'lesseranglednested 'ar-th-slash arg))

(defun ar-star-xdigit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of STAR at things class of XDIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'lesseranglednested 'ar-th-star arg))

(defun ar-slashparen-xdigit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of XDIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'lesseranglednested 'ar-th-slashparen arg))

(defun ar-sort-xdigit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of SORT at things class of XDIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'lesseranglednested 'ar-th-sort arg))

(defun ar-trim-xdigit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of TRIM at things class of XDIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'lesseranglednested 'ar-th-trim arg))

(defun ar-trim-left-xdigit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of XDIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'lesseranglednested 'ar-th-trim-left arg))

(defun ar-trim-right-xdigit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of XDIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'lesseranglednested 'ar-th-trim-right arg))

(defun ar-underscore-xdigit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of XDIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'lesseranglednested 'ar-th-underscore arg))

(defun ar-whitespace-xdigit-in-lesseranglednested-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of XDIGIT residing withing LESSERANGLEDNESTED. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'lesseranglednested 'ar-th-whitespace arg))

(defun ar-xdigit-in-buffer-atpt (&optional arg) 
  "Employ actions of  at things class of XDIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'buffer 'ar-th arg))

(defun ar-greaterangle-xdigit-in-buffer-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of XDIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'buffer 'ar-th-greaterangle arg))

(defun ar-lesserangle-xdigit-in-buffer-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of XDIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'buffer 'ar-th-lesserangle arg))

(defun ar-backslash-xdigit-in-buffer-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of XDIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'buffer 'ar-th-backslash arg))

(defun ar-colon-xdigit-in-buffer-atpt (&optional arg) 
  "Employ actions of COLON at things class of XDIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'buffer 'ar-th-colon arg))

(defun ar-beg-xdigit-in-buffer-atpt (&optional arg) 
  "Employ actions of BEG at things class of XDIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'buffer 'ar-th-beg arg))

(defun ar-blok-xdigit-in-buffer-atpt (&optional arg) 
  "Employ actions of BLOK at things class of XDIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'buffer 'ar-th-blok arg))

(defun ar-bounds-xdigit-in-buffer-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of XDIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'buffer 'ar-th-bounds arg))

(defun ar-brace-xdigit-in-buffer-atpt (&optional arg) 
  "Employ actions of BRACE at things class of XDIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'buffer 'ar-th-brace arg))

(defun ar-bracket-xdigit-in-buffer-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of XDIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'buffer 'ar-th-bracket arg))

(defun ar-commatize-xdigit-in-buffer-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of XDIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'buffer 'ar-th-commatize arg))

(defun ar-comment-xdigit-in-buffer-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of XDIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'buffer 'ar-th-comment arg))

(defun ar-dollar-xdigit-in-buffer-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of XDIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'buffer 'ar-th-dollar arg))

(defun ar-doublebackslash-xdigit-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of XDIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'buffer 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-xdigit-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of XDIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'buffer 'ar-th-doublebacktick arg))

(defun ar-doublequote-xdigit-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of XDIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'buffer 'ar-th-doublequote arg))

(defun ar-doubleslash-xdigit-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of XDIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'buffer 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-xdigit-in-buffer-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of XDIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'buffer 'ar-th-doublebackslashparen arg))

(defun ar-end-xdigit-in-buffer-atpt (&optional arg) 
  "Employ actions of END at things class of XDIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'buffer 'ar-th-end arg))

(defun ar-escape-xdigit-in-buffer-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of XDIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'buffer 'ar-th-escape arg))

(defun ar-hide-xdigit-in-buffer-atpt (&optional arg) 
  "Employ actions of HIDE at things class of XDIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'buffer 'ar-th-hide arg))

(defun ar-hide-show-xdigit-in-buffer-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of XDIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'buffer 'ar-th-hide-show arg))

(defun ar-hyphen-xdigit-in-buffer-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of XDIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'buffer 'ar-th-hyphen arg))

(defun ar-kill-xdigit-in-buffer-atpt (&optional arg) 
  "Employ actions of KILL at things class of XDIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'buffer 'ar-th-kill arg))

(defun ar-leftrightsinglequote-xdigit-in-buffer-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of XDIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'buffer 'ar-th-leftrightsinglequote arg))

(defun ar-length-xdigit-in-buffer-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of XDIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'buffer 'ar-th-length arg))

(defun ar-parentize-xdigit-in-buffer-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of XDIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'buffer 'ar-th-parentize arg))

(defun ar-quote-xdigit-in-buffer-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of XDIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'buffer 'ar-th-quote arg))

(defun ar-separate-xdigit-in-buffer-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of XDIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'buffer 'ar-th-separate arg))

(defun ar-show-xdigit-in-buffer-atpt (&optional arg) 
  "Employ actions of SHOW at things class of XDIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'buffer 'ar-th-show arg))

(defun ar-singlequote-xdigit-in-buffer-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of XDIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'buffer 'ar-th-singlequote arg))

(defun ar-slash-xdigit-in-buffer-atpt (&optional arg) 
  "Employ actions of SLASH at things class of XDIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'buffer 'ar-th-slash arg))

(defun ar-star-xdigit-in-buffer-atpt (&optional arg) 
  "Employ actions of STAR at things class of XDIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'buffer 'ar-th-star arg))

(defun ar-slashparen-xdigit-in-buffer-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of XDIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'buffer 'ar-th-slashparen arg))

(defun ar-sort-xdigit-in-buffer-atpt (&optional arg) 
  "Employ actions of SORT at things class of XDIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'buffer 'ar-th-sort arg))

(defun ar-trim-xdigit-in-buffer-atpt (&optional arg) 
  "Employ actions of TRIM at things class of XDIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'buffer 'ar-th-trim arg))

(defun ar-trim-left-xdigit-in-buffer-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of XDIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'buffer 'ar-th-trim-left arg))

(defun ar-trim-right-xdigit-in-buffer-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of XDIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'buffer 'ar-th-trim-right arg))

(defun ar-underscore-xdigit-in-buffer-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of XDIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'buffer 'ar-th-underscore arg))

(defun ar-whitespace-xdigit-in-buffer-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of XDIGIT residing withing BUFFER. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'buffer 'ar-th-whitespace arg))

(defun ar-xdigit-in-comment-atpt (&optional arg) 
  "Employ actions of  at things class of XDIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'comment 'ar-th arg))

(defun ar-greaterangle-xdigit-in-comment-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of XDIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'comment 'ar-th-greaterangle arg))

(defun ar-lesserangle-xdigit-in-comment-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of XDIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'comment 'ar-th-lesserangle arg))

(defun ar-backslash-xdigit-in-comment-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of XDIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'comment 'ar-th-backslash arg))

(defun ar-colon-xdigit-in-comment-atpt (&optional arg) 
  "Employ actions of COLON at things class of XDIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'comment 'ar-th-colon arg))

(defun ar-beg-xdigit-in-comment-atpt (&optional arg) 
  "Employ actions of BEG at things class of XDIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'comment 'ar-th-beg arg))

(defun ar-blok-xdigit-in-comment-atpt (&optional arg) 
  "Employ actions of BLOK at things class of XDIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'comment 'ar-th-blok arg))

(defun ar-bounds-xdigit-in-comment-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of XDIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'comment 'ar-th-bounds arg))

(defun ar-brace-xdigit-in-comment-atpt (&optional arg) 
  "Employ actions of BRACE at things class of XDIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'comment 'ar-th-brace arg))

(defun ar-bracket-xdigit-in-comment-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of XDIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'comment 'ar-th-bracket arg))

(defun ar-commatize-xdigit-in-comment-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of XDIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'comment 'ar-th-commatize arg))

(defun ar-comment-xdigit-in-comment-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of XDIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'comment 'ar-th-comment arg))

(defun ar-dollar-xdigit-in-comment-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of XDIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'comment 'ar-th-dollar arg))

(defun ar-doublebackslash-xdigit-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of XDIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'comment 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-xdigit-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of XDIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'comment 'ar-th-doublebacktick arg))

(defun ar-doublequote-xdigit-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of XDIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'comment 'ar-th-doublequote arg))

(defun ar-doubleslash-xdigit-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of XDIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'comment 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-xdigit-in-comment-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of XDIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'comment 'ar-th-doublebackslashparen arg))

(defun ar-end-xdigit-in-comment-atpt (&optional arg) 
  "Employ actions of END at things class of XDIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'comment 'ar-th-end arg))

(defun ar-escape-xdigit-in-comment-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of XDIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'comment 'ar-th-escape arg))

(defun ar-hide-xdigit-in-comment-atpt (&optional arg) 
  "Employ actions of HIDE at things class of XDIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'comment 'ar-th-hide arg))

(defun ar-hide-show-xdigit-in-comment-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of XDIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'comment 'ar-th-hide-show arg))

(defun ar-hyphen-xdigit-in-comment-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of XDIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'comment 'ar-th-hyphen arg))

(defun ar-kill-xdigit-in-comment-atpt (&optional arg) 
  "Employ actions of KILL at things class of XDIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'comment 'ar-th-kill arg))

(defun ar-leftrightsinglequote-xdigit-in-comment-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of XDIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'comment 'ar-th-leftrightsinglequote arg))

(defun ar-length-xdigit-in-comment-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of XDIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'comment 'ar-th-length arg))

(defun ar-parentize-xdigit-in-comment-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of XDIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'comment 'ar-th-parentize arg))

(defun ar-quote-xdigit-in-comment-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of XDIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'comment 'ar-th-quote arg))

(defun ar-separate-xdigit-in-comment-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of XDIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'comment 'ar-th-separate arg))

(defun ar-show-xdigit-in-comment-atpt (&optional arg) 
  "Employ actions of SHOW at things class of XDIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'comment 'ar-th-show arg))

(defun ar-singlequote-xdigit-in-comment-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of XDIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'comment 'ar-th-singlequote arg))

(defun ar-slash-xdigit-in-comment-atpt (&optional arg) 
  "Employ actions of SLASH at things class of XDIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'comment 'ar-th-slash arg))

(defun ar-star-xdigit-in-comment-atpt (&optional arg) 
  "Employ actions of STAR at things class of XDIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'comment 'ar-th-star arg))

(defun ar-slashparen-xdigit-in-comment-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of XDIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'comment 'ar-th-slashparen arg))

(defun ar-sort-xdigit-in-comment-atpt (&optional arg) 
  "Employ actions of SORT at things class of XDIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'comment 'ar-th-sort arg))

(defun ar-trim-xdigit-in-comment-atpt (&optional arg) 
  "Employ actions of TRIM at things class of XDIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'comment 'ar-th-trim arg))

(defun ar-trim-left-xdigit-in-comment-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of XDIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'comment 'ar-th-trim-left arg))

(defun ar-trim-right-xdigit-in-comment-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of XDIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'comment 'ar-th-trim-right arg))

(defun ar-underscore-xdigit-in-comment-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of XDIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'comment 'ar-th-underscore arg))

(defun ar-whitespace-xdigit-in-comment-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of XDIGIT residing withing COMMENT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'comment 'ar-th-whitespace arg))

(defun ar-xdigit-in-csv-atpt (&optional arg) 
  "Employ actions of  at things class of XDIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'csv 'ar-th arg))

(defun ar-greaterangle-xdigit-in-csv-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of XDIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'csv 'ar-th-greaterangle arg))

(defun ar-lesserangle-xdigit-in-csv-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of XDIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'csv 'ar-th-lesserangle arg))

(defun ar-backslash-xdigit-in-csv-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of XDIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'csv 'ar-th-backslash arg))

(defun ar-colon-xdigit-in-csv-atpt (&optional arg) 
  "Employ actions of COLON at things class of XDIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'csv 'ar-th-colon arg))

(defun ar-beg-xdigit-in-csv-atpt (&optional arg) 
  "Employ actions of BEG at things class of XDIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'csv 'ar-th-beg arg))

(defun ar-blok-xdigit-in-csv-atpt (&optional arg) 
  "Employ actions of BLOK at things class of XDIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'csv 'ar-th-blok arg))

(defun ar-bounds-xdigit-in-csv-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of XDIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'csv 'ar-th-bounds arg))

(defun ar-brace-xdigit-in-csv-atpt (&optional arg) 
  "Employ actions of BRACE at things class of XDIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'csv 'ar-th-brace arg))

(defun ar-bracket-xdigit-in-csv-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of XDIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'csv 'ar-th-bracket arg))

(defun ar-commatize-xdigit-in-csv-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of XDIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'csv 'ar-th-commatize arg))

(defun ar-comment-xdigit-in-csv-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of XDIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'csv 'ar-th-comment arg))

(defun ar-dollar-xdigit-in-csv-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of XDIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'csv 'ar-th-dollar arg))

(defun ar-doublebackslash-xdigit-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of XDIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'csv 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-xdigit-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of XDIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'csv 'ar-th-doublebacktick arg))

(defun ar-doublequote-xdigit-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of XDIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'csv 'ar-th-doublequote arg))

(defun ar-doubleslash-xdigit-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of XDIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'csv 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-xdigit-in-csv-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of XDIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'csv 'ar-th-doublebackslashparen arg))

(defun ar-end-xdigit-in-csv-atpt (&optional arg) 
  "Employ actions of END at things class of XDIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'csv 'ar-th-end arg))

(defun ar-escape-xdigit-in-csv-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of XDIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'csv 'ar-th-escape arg))

(defun ar-hide-xdigit-in-csv-atpt (&optional arg) 
  "Employ actions of HIDE at things class of XDIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'csv 'ar-th-hide arg))

(defun ar-hide-show-xdigit-in-csv-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of XDIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'csv 'ar-th-hide-show arg))

(defun ar-hyphen-xdigit-in-csv-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of XDIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'csv 'ar-th-hyphen arg))

(defun ar-kill-xdigit-in-csv-atpt (&optional arg) 
  "Employ actions of KILL at things class of XDIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'csv 'ar-th-kill arg))

(defun ar-leftrightsinglequote-xdigit-in-csv-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of XDIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'csv 'ar-th-leftrightsinglequote arg))

(defun ar-length-xdigit-in-csv-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of XDIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'csv 'ar-th-length arg))

(defun ar-parentize-xdigit-in-csv-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of XDIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'csv 'ar-th-parentize arg))

(defun ar-quote-xdigit-in-csv-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of XDIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'csv 'ar-th-quote arg))

(defun ar-separate-xdigit-in-csv-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of XDIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'csv 'ar-th-separate arg))

(defun ar-show-xdigit-in-csv-atpt (&optional arg) 
  "Employ actions of SHOW at things class of XDIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'csv 'ar-th-show arg))

(defun ar-singlequote-xdigit-in-csv-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of XDIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'csv 'ar-th-singlequote arg))

(defun ar-slash-xdigit-in-csv-atpt (&optional arg) 
  "Employ actions of SLASH at things class of XDIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'csv 'ar-th-slash arg))

(defun ar-star-xdigit-in-csv-atpt (&optional arg) 
  "Employ actions of STAR at things class of XDIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'csv 'ar-th-star arg))

(defun ar-slashparen-xdigit-in-csv-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of XDIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'csv 'ar-th-slashparen arg))

(defun ar-sort-xdigit-in-csv-atpt (&optional arg) 
  "Employ actions of SORT at things class of XDIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'csv 'ar-th-sort arg))

(defun ar-trim-xdigit-in-csv-atpt (&optional arg) 
  "Employ actions of TRIM at things class of XDIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'csv 'ar-th-trim arg))

(defun ar-trim-left-xdigit-in-csv-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of XDIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'csv 'ar-th-trim-left arg))

(defun ar-trim-right-xdigit-in-csv-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of XDIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'csv 'ar-th-trim-right arg))

(defun ar-underscore-xdigit-in-csv-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of XDIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'csv 'ar-th-underscore arg))

(defun ar-whitespace-xdigit-in-csv-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of XDIGIT residing withing CSV. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'csv 'ar-th-whitespace arg))

(defun ar-xdigit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of  at things class of XDIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'filenamenondirectory 'ar-th arg))

(defun ar-greaterangle-xdigit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of XDIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'filenamenondirectory 'ar-th-greaterangle arg))

(defun ar-lesserangle-xdigit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of XDIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'filenamenondirectory 'ar-th-lesserangle arg))

(defun ar-backslash-xdigit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of XDIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'filenamenondirectory 'ar-th-backslash arg))

(defun ar-colon-xdigit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of COLON at things class of XDIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'filenamenondirectory 'ar-th-colon arg))

(defun ar-beg-xdigit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BEG at things class of XDIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'filenamenondirectory 'ar-th-beg arg))

(defun ar-blok-xdigit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BLOK at things class of XDIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'filenamenondirectory 'ar-th-blok arg))

(defun ar-bounds-xdigit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of XDIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'filenamenondirectory 'ar-th-bounds arg))

(defun ar-brace-xdigit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BRACE at things class of XDIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'filenamenondirectory 'ar-th-brace arg))

(defun ar-bracket-xdigit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of XDIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'filenamenondirectory 'ar-th-bracket arg))

(defun ar-commatize-xdigit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of XDIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'filenamenondirectory 'ar-th-commatize arg))

(defun ar-comment-xdigit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of XDIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'filenamenondirectory 'ar-th-comment arg))

(defun ar-dollar-xdigit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of XDIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'filenamenondirectory 'ar-th-dollar arg))

(defun ar-doublebackslash-xdigit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of XDIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'filenamenondirectory 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-xdigit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of XDIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'filenamenondirectory 'ar-th-doublebacktick arg))

(defun ar-doublequote-xdigit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of XDIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'filenamenondirectory 'ar-th-doublequote arg))

(defun ar-doubleslash-xdigit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of XDIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'filenamenondirectory 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-xdigit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of XDIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'filenamenondirectory 'ar-th-doublebackslashparen arg))

(defun ar-end-xdigit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of END at things class of XDIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'filenamenondirectory 'ar-th-end arg))

(defun ar-escape-xdigit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of XDIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'filenamenondirectory 'ar-th-escape arg))

(defun ar-hide-xdigit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of HIDE at things class of XDIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'filenamenondirectory 'ar-th-hide arg))

(defun ar-hide-show-xdigit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of XDIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'filenamenondirectory 'ar-th-hide-show arg))

(defun ar-hyphen-xdigit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of XDIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'filenamenondirectory 'ar-th-hyphen arg))

(defun ar-kill-xdigit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of KILL at things class of XDIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'filenamenondirectory 'ar-th-kill arg))

(defun ar-leftrightsinglequote-xdigit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of XDIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'filenamenondirectory 'ar-th-leftrightsinglequote arg))

(defun ar-length-xdigit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of XDIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'filenamenondirectory 'ar-th-length arg))

(defun ar-parentize-xdigit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of XDIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'filenamenondirectory 'ar-th-parentize arg))

(defun ar-quote-xdigit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of XDIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'filenamenondirectory 'ar-th-quote arg))

(defun ar-separate-xdigit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of XDIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'filenamenondirectory 'ar-th-separate arg))

(defun ar-show-xdigit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SHOW at things class of XDIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'filenamenondirectory 'ar-th-show arg))

(defun ar-singlequote-xdigit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of XDIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'filenamenondirectory 'ar-th-singlequote arg))

(defun ar-slash-xdigit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SLASH at things class of XDIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'filenamenondirectory 'ar-th-slash arg))

(defun ar-star-xdigit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of STAR at things class of XDIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'filenamenondirectory 'ar-th-star arg))

(defun ar-slashparen-xdigit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of XDIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'filenamenondirectory 'ar-th-slashparen arg))

(defun ar-sort-xdigit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of SORT at things class of XDIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'filenamenondirectory 'ar-th-sort arg))

(defun ar-trim-xdigit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of TRIM at things class of XDIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'filenamenondirectory 'ar-th-trim arg))

(defun ar-trim-left-xdigit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of XDIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'filenamenondirectory 'ar-th-trim-left arg))

(defun ar-trim-right-xdigit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of XDIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'filenamenondirectory 'ar-th-trim-right arg))

(defun ar-underscore-xdigit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of XDIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'filenamenondirectory 'ar-th-underscore arg))

(defun ar-whitespace-xdigit-in-filenamenondirectory-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of XDIGIT residing withing FILENAMENONDIRECTORY. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'filenamenondirectory 'ar-th-whitespace arg))

(defun ar-xdigit-in-function-atpt (&optional arg) 
  "Employ actions of  at things class of XDIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'function 'ar-th arg))

(defun ar-greaterangle-xdigit-in-function-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of XDIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'function 'ar-th-greaterangle arg))

(defun ar-lesserangle-xdigit-in-function-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of XDIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'function 'ar-th-lesserangle arg))

(defun ar-backslash-xdigit-in-function-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of XDIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'function 'ar-th-backslash arg))

(defun ar-colon-xdigit-in-function-atpt (&optional arg) 
  "Employ actions of COLON at things class of XDIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'function 'ar-th-colon arg))

(defun ar-beg-xdigit-in-function-atpt (&optional arg) 
  "Employ actions of BEG at things class of XDIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'function 'ar-th-beg arg))

(defun ar-blok-xdigit-in-function-atpt (&optional arg) 
  "Employ actions of BLOK at things class of XDIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'function 'ar-th-blok arg))

(defun ar-bounds-xdigit-in-function-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of XDIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'function 'ar-th-bounds arg))

(defun ar-brace-xdigit-in-function-atpt (&optional arg) 
  "Employ actions of BRACE at things class of XDIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'function 'ar-th-brace arg))

(defun ar-bracket-xdigit-in-function-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of XDIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'function 'ar-th-bracket arg))

(defun ar-commatize-xdigit-in-function-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of XDIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'function 'ar-th-commatize arg))

(defun ar-comment-xdigit-in-function-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of XDIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'function 'ar-th-comment arg))

(defun ar-dollar-xdigit-in-function-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of XDIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'function 'ar-th-dollar arg))

(defun ar-doublebackslash-xdigit-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of XDIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'function 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-xdigit-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of XDIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'function 'ar-th-doublebacktick arg))

(defun ar-doublequote-xdigit-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of XDIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'function 'ar-th-doublequote arg))

(defun ar-doubleslash-xdigit-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of XDIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'function 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-xdigit-in-function-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of XDIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'function 'ar-th-doublebackslashparen arg))

(defun ar-end-xdigit-in-function-atpt (&optional arg) 
  "Employ actions of END at things class of XDIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'function 'ar-th-end arg))

(defun ar-escape-xdigit-in-function-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of XDIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'function 'ar-th-escape arg))

(defun ar-hide-xdigit-in-function-atpt (&optional arg) 
  "Employ actions of HIDE at things class of XDIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'function 'ar-th-hide arg))

(defun ar-hide-show-xdigit-in-function-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of XDIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'function 'ar-th-hide-show arg))

(defun ar-hyphen-xdigit-in-function-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of XDIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'function 'ar-th-hyphen arg))

(defun ar-kill-xdigit-in-function-atpt (&optional arg) 
  "Employ actions of KILL at things class of XDIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'function 'ar-th-kill arg))

(defun ar-leftrightsinglequote-xdigit-in-function-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of XDIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'function 'ar-th-leftrightsinglequote arg))

(defun ar-length-xdigit-in-function-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of XDIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'function 'ar-th-length arg))

(defun ar-parentize-xdigit-in-function-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of XDIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'function 'ar-th-parentize arg))

(defun ar-quote-xdigit-in-function-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of XDIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'function 'ar-th-quote arg))

(defun ar-separate-xdigit-in-function-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of XDIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'function 'ar-th-separate arg))

(defun ar-show-xdigit-in-function-atpt (&optional arg) 
  "Employ actions of SHOW at things class of XDIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'function 'ar-th-show arg))

(defun ar-singlequote-xdigit-in-function-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of XDIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'function 'ar-th-singlequote arg))

(defun ar-slash-xdigit-in-function-atpt (&optional arg) 
  "Employ actions of SLASH at things class of XDIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'function 'ar-th-slash arg))

(defun ar-star-xdigit-in-function-atpt (&optional arg) 
  "Employ actions of STAR at things class of XDIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'function 'ar-th-star arg))

(defun ar-slashparen-xdigit-in-function-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of XDIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'function 'ar-th-slashparen arg))

(defun ar-sort-xdigit-in-function-atpt (&optional arg) 
  "Employ actions of SORT at things class of XDIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'function 'ar-th-sort arg))

(defun ar-trim-xdigit-in-function-atpt (&optional arg) 
  "Employ actions of TRIM at things class of XDIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'function 'ar-th-trim arg))

(defun ar-trim-left-xdigit-in-function-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of XDIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'function 'ar-th-trim-left arg))

(defun ar-trim-right-xdigit-in-function-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of XDIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'function 'ar-th-trim-right arg))

(defun ar-underscore-xdigit-in-function-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of XDIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'function 'ar-th-underscore arg))

(defun ar-whitespace-xdigit-in-function-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of XDIGIT residing withing FUNCTION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'function 'ar-th-whitespace arg))

(defun ar-xdigit-in-line-atpt (&optional arg) 
  "Employ actions of  at things class of XDIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'line 'ar-th arg))

(defun ar-greaterangle-xdigit-in-line-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of XDIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'line 'ar-th-greaterangle arg))

(defun ar-lesserangle-xdigit-in-line-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of XDIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'line 'ar-th-lesserangle arg))

(defun ar-backslash-xdigit-in-line-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of XDIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'line 'ar-th-backslash arg))

(defun ar-colon-xdigit-in-line-atpt (&optional arg) 
  "Employ actions of COLON at things class of XDIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'line 'ar-th-colon arg))

(defun ar-beg-xdigit-in-line-atpt (&optional arg) 
  "Employ actions of BEG at things class of XDIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'line 'ar-th-beg arg))

(defun ar-blok-xdigit-in-line-atpt (&optional arg) 
  "Employ actions of BLOK at things class of XDIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'line 'ar-th-blok arg))

(defun ar-bounds-xdigit-in-line-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of XDIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'line 'ar-th-bounds arg))

(defun ar-brace-xdigit-in-line-atpt (&optional arg) 
  "Employ actions of BRACE at things class of XDIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'line 'ar-th-brace arg))

(defun ar-bracket-xdigit-in-line-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of XDIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'line 'ar-th-bracket arg))

(defun ar-commatize-xdigit-in-line-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of XDIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'line 'ar-th-commatize arg))

(defun ar-comment-xdigit-in-line-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of XDIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'line 'ar-th-comment arg))

(defun ar-dollar-xdigit-in-line-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of XDIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'line 'ar-th-dollar arg))

(defun ar-doublebackslash-xdigit-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of XDIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'line 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-xdigit-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of XDIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'line 'ar-th-doublebacktick arg))

(defun ar-doublequote-xdigit-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of XDIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'line 'ar-th-doublequote arg))

(defun ar-doubleslash-xdigit-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of XDIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'line 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-xdigit-in-line-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of XDIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'line 'ar-th-doublebackslashparen arg))

(defun ar-end-xdigit-in-line-atpt (&optional arg) 
  "Employ actions of END at things class of XDIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'line 'ar-th-end arg))

(defun ar-escape-xdigit-in-line-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of XDIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'line 'ar-th-escape arg))

(defun ar-hide-xdigit-in-line-atpt (&optional arg) 
  "Employ actions of HIDE at things class of XDIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'line 'ar-th-hide arg))

(defun ar-hide-show-xdigit-in-line-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of XDIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'line 'ar-th-hide-show arg))

(defun ar-hyphen-xdigit-in-line-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of XDIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'line 'ar-th-hyphen arg))

(defun ar-kill-xdigit-in-line-atpt (&optional arg) 
  "Employ actions of KILL at things class of XDIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'line 'ar-th-kill arg))

(defun ar-leftrightsinglequote-xdigit-in-line-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of XDIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'line 'ar-th-leftrightsinglequote arg))

(defun ar-length-xdigit-in-line-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of XDIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'line 'ar-th-length arg))

(defun ar-parentize-xdigit-in-line-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of XDIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'line 'ar-th-parentize arg))

(defun ar-quote-xdigit-in-line-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of XDIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'line 'ar-th-quote arg))

(defun ar-separate-xdigit-in-line-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of XDIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'line 'ar-th-separate arg))

(defun ar-show-xdigit-in-line-atpt (&optional arg) 
  "Employ actions of SHOW at things class of XDIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'line 'ar-th-show arg))

(defun ar-singlequote-xdigit-in-line-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of XDIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'line 'ar-th-singlequote arg))

(defun ar-slash-xdigit-in-line-atpt (&optional arg) 
  "Employ actions of SLASH at things class of XDIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'line 'ar-th-slash arg))

(defun ar-star-xdigit-in-line-atpt (&optional arg) 
  "Employ actions of STAR at things class of XDIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'line 'ar-th-star arg))

(defun ar-slashparen-xdigit-in-line-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of XDIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'line 'ar-th-slashparen arg))

(defun ar-sort-xdigit-in-line-atpt (&optional arg) 
  "Employ actions of SORT at things class of XDIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'line 'ar-th-sort arg))

(defun ar-trim-xdigit-in-line-atpt (&optional arg) 
  "Employ actions of TRIM at things class of XDIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'line 'ar-th-trim arg))

(defun ar-trim-left-xdigit-in-line-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of XDIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'line 'ar-th-trim-left arg))

(defun ar-trim-right-xdigit-in-line-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of XDIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'line 'ar-th-trim-right arg))

(defun ar-underscore-xdigit-in-line-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of XDIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'line 'ar-th-underscore arg))

(defun ar-whitespace-xdigit-in-line-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of XDIGIT residing withing LINE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'line 'ar-th-whitespace arg))

(defun ar-xdigit-in-list-atpt (&optional arg) 
  "Employ actions of  at things class of XDIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'list 'ar-th arg))

(defun ar-greaterangle-xdigit-in-list-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of XDIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'list 'ar-th-greaterangle arg))

(defun ar-lesserangle-xdigit-in-list-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of XDIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'list 'ar-th-lesserangle arg))

(defun ar-backslash-xdigit-in-list-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of XDIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'list 'ar-th-backslash arg))

(defun ar-colon-xdigit-in-list-atpt (&optional arg) 
  "Employ actions of COLON at things class of XDIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'list 'ar-th-colon arg))

(defun ar-beg-xdigit-in-list-atpt (&optional arg) 
  "Employ actions of BEG at things class of XDIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'list 'ar-th-beg arg))

(defun ar-blok-xdigit-in-list-atpt (&optional arg) 
  "Employ actions of BLOK at things class of XDIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'list 'ar-th-blok arg))

(defun ar-bounds-xdigit-in-list-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of XDIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'list 'ar-th-bounds arg))

(defun ar-brace-xdigit-in-list-atpt (&optional arg) 
  "Employ actions of BRACE at things class of XDIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'list 'ar-th-brace arg))

(defun ar-bracket-xdigit-in-list-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of XDIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'list 'ar-th-bracket arg))

(defun ar-commatize-xdigit-in-list-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of XDIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'list 'ar-th-commatize arg))

(defun ar-comment-xdigit-in-list-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of XDIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'list 'ar-th-comment arg))

(defun ar-dollar-xdigit-in-list-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of XDIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'list 'ar-th-dollar arg))

(defun ar-doublebackslash-xdigit-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of XDIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'list 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-xdigit-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of XDIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'list 'ar-th-doublebacktick arg))

(defun ar-doublequote-xdigit-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of XDIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'list 'ar-th-doublequote arg))

(defun ar-doubleslash-xdigit-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of XDIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'list 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-xdigit-in-list-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of XDIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'list 'ar-th-doublebackslashparen arg))

(defun ar-end-xdigit-in-list-atpt (&optional arg) 
  "Employ actions of END at things class of XDIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'list 'ar-th-end arg))

(defun ar-escape-xdigit-in-list-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of XDIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'list 'ar-th-escape arg))

(defun ar-hide-xdigit-in-list-atpt (&optional arg) 
  "Employ actions of HIDE at things class of XDIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'list 'ar-th-hide arg))

(defun ar-hide-show-xdigit-in-list-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of XDIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'list 'ar-th-hide-show arg))

(defun ar-hyphen-xdigit-in-list-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of XDIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'list 'ar-th-hyphen arg))

(defun ar-kill-xdigit-in-list-atpt (&optional arg) 
  "Employ actions of KILL at things class of XDIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'list 'ar-th-kill arg))

(defun ar-leftrightsinglequote-xdigit-in-list-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of XDIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'list 'ar-th-leftrightsinglequote arg))

(defun ar-length-xdigit-in-list-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of XDIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'list 'ar-th-length arg))

(defun ar-parentize-xdigit-in-list-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of XDIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'list 'ar-th-parentize arg))

(defun ar-quote-xdigit-in-list-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of XDIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'list 'ar-th-quote arg))

(defun ar-separate-xdigit-in-list-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of XDIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'list 'ar-th-separate arg))

(defun ar-show-xdigit-in-list-atpt (&optional arg) 
  "Employ actions of SHOW at things class of XDIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'list 'ar-th-show arg))

(defun ar-singlequote-xdigit-in-list-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of XDIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'list 'ar-th-singlequote arg))

(defun ar-slash-xdigit-in-list-atpt (&optional arg) 
  "Employ actions of SLASH at things class of XDIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'list 'ar-th-slash arg))

(defun ar-star-xdigit-in-list-atpt (&optional arg) 
  "Employ actions of STAR at things class of XDIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'list 'ar-th-star arg))

(defun ar-slashparen-xdigit-in-list-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of XDIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'list 'ar-th-slashparen arg))

(defun ar-sort-xdigit-in-list-atpt (&optional arg) 
  "Employ actions of SORT at things class of XDIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'list 'ar-th-sort arg))

(defun ar-trim-xdigit-in-list-atpt (&optional arg) 
  "Employ actions of TRIM at things class of XDIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'list 'ar-th-trim arg))

(defun ar-trim-left-xdigit-in-list-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of XDIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'list 'ar-th-trim-left arg))

(defun ar-trim-right-xdigit-in-list-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of XDIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'list 'ar-th-trim-right arg))

(defun ar-underscore-xdigit-in-list-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of XDIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'list 'ar-th-underscore arg))

(defun ar-whitespace-xdigit-in-list-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of XDIGIT residing withing LIST. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'list 'ar-th-whitespace arg))

(defun ar-xdigit-in-name-atpt (&optional arg) 
  "Employ actions of  at things class of XDIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'name 'ar-th arg))

(defun ar-greaterangle-xdigit-in-name-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of XDIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'name 'ar-th-greaterangle arg))

(defun ar-lesserangle-xdigit-in-name-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of XDIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'name 'ar-th-lesserangle arg))

(defun ar-backslash-xdigit-in-name-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of XDIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'name 'ar-th-backslash arg))

(defun ar-colon-xdigit-in-name-atpt (&optional arg) 
  "Employ actions of COLON at things class of XDIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'name 'ar-th-colon arg))

(defun ar-beg-xdigit-in-name-atpt (&optional arg) 
  "Employ actions of BEG at things class of XDIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'name 'ar-th-beg arg))

(defun ar-blok-xdigit-in-name-atpt (&optional arg) 
  "Employ actions of BLOK at things class of XDIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'name 'ar-th-blok arg))

(defun ar-bounds-xdigit-in-name-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of XDIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'name 'ar-th-bounds arg))

(defun ar-brace-xdigit-in-name-atpt (&optional arg) 
  "Employ actions of BRACE at things class of XDIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'name 'ar-th-brace arg))

(defun ar-bracket-xdigit-in-name-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of XDIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'name 'ar-th-bracket arg))

(defun ar-commatize-xdigit-in-name-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of XDIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'name 'ar-th-commatize arg))

(defun ar-comment-xdigit-in-name-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of XDIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'name 'ar-th-comment arg))

(defun ar-dollar-xdigit-in-name-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of XDIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'name 'ar-th-dollar arg))

(defun ar-doublebackslash-xdigit-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of XDIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'name 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-xdigit-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of XDIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'name 'ar-th-doublebacktick arg))

(defun ar-doublequote-xdigit-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of XDIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'name 'ar-th-doublequote arg))

(defun ar-doubleslash-xdigit-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of XDIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'name 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-xdigit-in-name-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of XDIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'name 'ar-th-doublebackslashparen arg))

(defun ar-end-xdigit-in-name-atpt (&optional arg) 
  "Employ actions of END at things class of XDIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'name 'ar-th-end arg))

(defun ar-escape-xdigit-in-name-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of XDIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'name 'ar-th-escape arg))

(defun ar-hide-xdigit-in-name-atpt (&optional arg) 
  "Employ actions of HIDE at things class of XDIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'name 'ar-th-hide arg))

(defun ar-hide-show-xdigit-in-name-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of XDIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'name 'ar-th-hide-show arg))

(defun ar-hyphen-xdigit-in-name-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of XDIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'name 'ar-th-hyphen arg))

(defun ar-kill-xdigit-in-name-atpt (&optional arg) 
  "Employ actions of KILL at things class of XDIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'name 'ar-th-kill arg))

(defun ar-leftrightsinglequote-xdigit-in-name-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of XDIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'name 'ar-th-leftrightsinglequote arg))

(defun ar-length-xdigit-in-name-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of XDIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'name 'ar-th-length arg))

(defun ar-parentize-xdigit-in-name-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of XDIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'name 'ar-th-parentize arg))

(defun ar-quote-xdigit-in-name-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of XDIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'name 'ar-th-quote arg))

(defun ar-separate-xdigit-in-name-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of XDIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'name 'ar-th-separate arg))

(defun ar-show-xdigit-in-name-atpt (&optional arg) 
  "Employ actions of SHOW at things class of XDIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'name 'ar-th-show arg))

(defun ar-singlequote-xdigit-in-name-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of XDIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'name 'ar-th-singlequote arg))

(defun ar-slash-xdigit-in-name-atpt (&optional arg) 
  "Employ actions of SLASH at things class of XDIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'name 'ar-th-slash arg))

(defun ar-star-xdigit-in-name-atpt (&optional arg) 
  "Employ actions of STAR at things class of XDIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'name 'ar-th-star arg))

(defun ar-slashparen-xdigit-in-name-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of XDIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'name 'ar-th-slashparen arg))

(defun ar-sort-xdigit-in-name-atpt (&optional arg) 
  "Employ actions of SORT at things class of XDIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'name 'ar-th-sort arg))

(defun ar-trim-xdigit-in-name-atpt (&optional arg) 
  "Employ actions of TRIM at things class of XDIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'name 'ar-th-trim arg))

(defun ar-trim-left-xdigit-in-name-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of XDIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'name 'ar-th-trim-left arg))

(defun ar-trim-right-xdigit-in-name-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of XDIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'name 'ar-th-trim-right arg))

(defun ar-underscore-xdigit-in-name-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of XDIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'name 'ar-th-underscore arg))

(defun ar-whitespace-xdigit-in-name-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of XDIGIT residing withing NAME. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'name 'ar-th-whitespace arg))

(defun ar-xdigit-in-page-atpt (&optional arg) 
  "Employ actions of  at things class of XDIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'page 'ar-th arg))

(defun ar-greaterangle-xdigit-in-page-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of XDIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'page 'ar-th-greaterangle arg))

(defun ar-lesserangle-xdigit-in-page-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of XDIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'page 'ar-th-lesserangle arg))

(defun ar-backslash-xdigit-in-page-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of XDIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'page 'ar-th-backslash arg))

(defun ar-colon-xdigit-in-page-atpt (&optional arg) 
  "Employ actions of COLON at things class of XDIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'page 'ar-th-colon arg))

(defun ar-beg-xdigit-in-page-atpt (&optional arg) 
  "Employ actions of BEG at things class of XDIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'page 'ar-th-beg arg))

(defun ar-blok-xdigit-in-page-atpt (&optional arg) 
  "Employ actions of BLOK at things class of XDIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'page 'ar-th-blok arg))

(defun ar-bounds-xdigit-in-page-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of XDIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'page 'ar-th-bounds arg))

(defun ar-brace-xdigit-in-page-atpt (&optional arg) 
  "Employ actions of BRACE at things class of XDIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'page 'ar-th-brace arg))

(defun ar-bracket-xdigit-in-page-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of XDIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'page 'ar-th-bracket arg))

(defun ar-commatize-xdigit-in-page-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of XDIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'page 'ar-th-commatize arg))

(defun ar-comment-xdigit-in-page-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of XDIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'page 'ar-th-comment arg))

(defun ar-dollar-xdigit-in-page-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of XDIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'page 'ar-th-dollar arg))

(defun ar-doublebackslash-xdigit-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of XDIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'page 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-xdigit-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of XDIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'page 'ar-th-doublebacktick arg))

(defun ar-doublequote-xdigit-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of XDIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'page 'ar-th-doublequote arg))

(defun ar-doubleslash-xdigit-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of XDIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'page 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-xdigit-in-page-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of XDIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'page 'ar-th-doublebackslashparen arg))

(defun ar-end-xdigit-in-page-atpt (&optional arg) 
  "Employ actions of END at things class of XDIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'page 'ar-th-end arg))

(defun ar-escape-xdigit-in-page-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of XDIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'page 'ar-th-escape arg))

(defun ar-hide-xdigit-in-page-atpt (&optional arg) 
  "Employ actions of HIDE at things class of XDIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'page 'ar-th-hide arg))

(defun ar-hide-show-xdigit-in-page-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of XDIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'page 'ar-th-hide-show arg))

(defun ar-hyphen-xdigit-in-page-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of XDIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'page 'ar-th-hyphen arg))

(defun ar-kill-xdigit-in-page-atpt (&optional arg) 
  "Employ actions of KILL at things class of XDIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'page 'ar-th-kill arg))

(defun ar-leftrightsinglequote-xdigit-in-page-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of XDIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'page 'ar-th-leftrightsinglequote arg))

(defun ar-length-xdigit-in-page-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of XDIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'page 'ar-th-length arg))

(defun ar-parentize-xdigit-in-page-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of XDIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'page 'ar-th-parentize arg))

(defun ar-quote-xdigit-in-page-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of XDIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'page 'ar-th-quote arg))

(defun ar-separate-xdigit-in-page-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of XDIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'page 'ar-th-separate arg))

(defun ar-show-xdigit-in-page-atpt (&optional arg) 
  "Employ actions of SHOW at things class of XDIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'page 'ar-th-show arg))

(defun ar-singlequote-xdigit-in-page-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of XDIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'page 'ar-th-singlequote arg))

(defun ar-slash-xdigit-in-page-atpt (&optional arg) 
  "Employ actions of SLASH at things class of XDIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'page 'ar-th-slash arg))

(defun ar-star-xdigit-in-page-atpt (&optional arg) 
  "Employ actions of STAR at things class of XDIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'page 'ar-th-star arg))

(defun ar-slashparen-xdigit-in-page-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of XDIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'page 'ar-th-slashparen arg))

(defun ar-sort-xdigit-in-page-atpt (&optional arg) 
  "Employ actions of SORT at things class of XDIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'page 'ar-th-sort arg))

(defun ar-trim-xdigit-in-page-atpt (&optional arg) 
  "Employ actions of TRIM at things class of XDIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'page 'ar-th-trim arg))

(defun ar-trim-left-xdigit-in-page-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of XDIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'page 'ar-th-trim-left arg))

(defun ar-trim-right-xdigit-in-page-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of XDIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'page 'ar-th-trim-right arg))

(defun ar-underscore-xdigit-in-page-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of XDIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'page 'ar-th-underscore arg))

(defun ar-whitespace-xdigit-in-page-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of XDIGIT residing withing PAGE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'page 'ar-th-whitespace arg))

(defun ar-xdigit-in-paragraph-atpt (&optional arg) 
  "Employ actions of  at things class of XDIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'paragraph 'ar-th arg))

(defun ar-greaterangle-xdigit-in-paragraph-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of XDIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'paragraph 'ar-th-greaterangle arg))

(defun ar-lesserangle-xdigit-in-paragraph-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of XDIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'paragraph 'ar-th-lesserangle arg))

(defun ar-backslash-xdigit-in-paragraph-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of XDIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'paragraph 'ar-th-backslash arg))

(defun ar-colon-xdigit-in-paragraph-atpt (&optional arg) 
  "Employ actions of COLON at things class of XDIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'paragraph 'ar-th-colon arg))

(defun ar-beg-xdigit-in-paragraph-atpt (&optional arg) 
  "Employ actions of BEG at things class of XDIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'paragraph 'ar-th-beg arg))

(defun ar-blok-xdigit-in-paragraph-atpt (&optional arg) 
  "Employ actions of BLOK at things class of XDIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'paragraph 'ar-th-blok arg))

(defun ar-bounds-xdigit-in-paragraph-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of XDIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'paragraph 'ar-th-bounds arg))

(defun ar-brace-xdigit-in-paragraph-atpt (&optional arg) 
  "Employ actions of BRACE at things class of XDIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'paragraph 'ar-th-brace arg))

(defun ar-bracket-xdigit-in-paragraph-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of XDIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'paragraph 'ar-th-bracket arg))

(defun ar-commatize-xdigit-in-paragraph-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of XDIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'paragraph 'ar-th-commatize arg))

(defun ar-comment-xdigit-in-paragraph-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of XDIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'paragraph 'ar-th-comment arg))

(defun ar-dollar-xdigit-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of XDIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'paragraph 'ar-th-dollar arg))

(defun ar-doublebackslash-xdigit-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of XDIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'paragraph 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-xdigit-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of XDIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'paragraph 'ar-th-doublebacktick arg))

(defun ar-doublequote-xdigit-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of XDIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'paragraph 'ar-th-doublequote arg))

(defun ar-doubleslash-xdigit-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of XDIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'paragraph 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-xdigit-in-paragraph-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of XDIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'paragraph 'ar-th-doublebackslashparen arg))

(defun ar-end-xdigit-in-paragraph-atpt (&optional arg) 
  "Employ actions of END at things class of XDIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'paragraph 'ar-th-end arg))

(defun ar-escape-xdigit-in-paragraph-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of XDIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'paragraph 'ar-th-escape arg))

(defun ar-hide-xdigit-in-paragraph-atpt (&optional arg) 
  "Employ actions of HIDE at things class of XDIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'paragraph 'ar-th-hide arg))

(defun ar-hide-show-xdigit-in-paragraph-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of XDIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'paragraph 'ar-th-hide-show arg))

(defun ar-hyphen-xdigit-in-paragraph-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of XDIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'paragraph 'ar-th-hyphen arg))

(defun ar-kill-xdigit-in-paragraph-atpt (&optional arg) 
  "Employ actions of KILL at things class of XDIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'paragraph 'ar-th-kill arg))

(defun ar-leftrightsinglequote-xdigit-in-paragraph-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of XDIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'paragraph 'ar-th-leftrightsinglequote arg))

(defun ar-length-xdigit-in-paragraph-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of XDIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'paragraph 'ar-th-length arg))

(defun ar-parentize-xdigit-in-paragraph-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of XDIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'paragraph 'ar-th-parentize arg))

(defun ar-quote-xdigit-in-paragraph-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of XDIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'paragraph 'ar-th-quote arg))

(defun ar-separate-xdigit-in-paragraph-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of XDIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'paragraph 'ar-th-separate arg))

(defun ar-show-xdigit-in-paragraph-atpt (&optional arg) 
  "Employ actions of SHOW at things class of XDIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'paragraph 'ar-th-show arg))

(defun ar-singlequote-xdigit-in-paragraph-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of XDIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'paragraph 'ar-th-singlequote arg))

(defun ar-slash-xdigit-in-paragraph-atpt (&optional arg) 
  "Employ actions of SLASH at things class of XDIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'paragraph 'ar-th-slash arg))

(defun ar-star-xdigit-in-paragraph-atpt (&optional arg) 
  "Employ actions of STAR at things class of XDIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'paragraph 'ar-th-star arg))

(defun ar-slashparen-xdigit-in-paragraph-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of XDIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'paragraph 'ar-th-slashparen arg))

(defun ar-sort-xdigit-in-paragraph-atpt (&optional arg) 
  "Employ actions of SORT at things class of XDIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'paragraph 'ar-th-sort arg))

(defun ar-trim-xdigit-in-paragraph-atpt (&optional arg) 
  "Employ actions of TRIM at things class of XDIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'paragraph 'ar-th-trim arg))

(defun ar-trim-left-xdigit-in-paragraph-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of XDIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'paragraph 'ar-th-trim-left arg))

(defun ar-trim-right-xdigit-in-paragraph-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of XDIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'paragraph 'ar-th-trim-right arg))

(defun ar-underscore-xdigit-in-paragraph-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of XDIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'paragraph 'ar-th-underscore arg))

(defun ar-whitespace-xdigit-in-paragraph-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of XDIGIT residing withing PARAGRAPH. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'paragraph 'ar-th-whitespace arg))

(defun ar-xdigit-in-region-atpt (&optional arg) 
  "Employ actions of  at things class of XDIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'region 'ar-th arg))

(defun ar-greaterangle-xdigit-in-region-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of XDIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'region 'ar-th-greaterangle arg))

(defun ar-lesserangle-xdigit-in-region-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of XDIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'region 'ar-th-lesserangle arg))

(defun ar-backslash-xdigit-in-region-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of XDIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'region 'ar-th-backslash arg))

(defun ar-colon-xdigit-in-region-atpt (&optional arg) 
  "Employ actions of COLON at things class of XDIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'region 'ar-th-colon arg))

(defun ar-beg-xdigit-in-region-atpt (&optional arg) 
  "Employ actions of BEG at things class of XDIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'region 'ar-th-beg arg))

(defun ar-blok-xdigit-in-region-atpt (&optional arg) 
  "Employ actions of BLOK at things class of XDIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'region 'ar-th-blok arg))

(defun ar-bounds-xdigit-in-region-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of XDIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'region 'ar-th-bounds arg))

(defun ar-brace-xdigit-in-region-atpt (&optional arg) 
  "Employ actions of BRACE at things class of XDIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'region 'ar-th-brace arg))

(defun ar-bracket-xdigit-in-region-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of XDIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'region 'ar-th-bracket arg))

(defun ar-commatize-xdigit-in-region-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of XDIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'region 'ar-th-commatize arg))

(defun ar-comment-xdigit-in-region-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of XDIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'region 'ar-th-comment arg))

(defun ar-dollar-xdigit-in-region-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of XDIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'region 'ar-th-dollar arg))

(defun ar-doublebackslash-xdigit-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of XDIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'region 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-xdigit-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of XDIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'region 'ar-th-doublebacktick arg))

(defun ar-doublequote-xdigit-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of XDIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'region 'ar-th-doublequote arg))

(defun ar-doubleslash-xdigit-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of XDIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'region 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-xdigit-in-region-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of XDIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'region 'ar-th-doublebackslashparen arg))

(defun ar-end-xdigit-in-region-atpt (&optional arg) 
  "Employ actions of END at things class of XDIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'region 'ar-th-end arg))

(defun ar-escape-xdigit-in-region-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of XDIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'region 'ar-th-escape arg))

(defun ar-hide-xdigit-in-region-atpt (&optional arg) 
  "Employ actions of HIDE at things class of XDIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'region 'ar-th-hide arg))

(defun ar-hide-show-xdigit-in-region-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of XDIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'region 'ar-th-hide-show arg))

(defun ar-hyphen-xdigit-in-region-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of XDIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'region 'ar-th-hyphen arg))

(defun ar-kill-xdigit-in-region-atpt (&optional arg) 
  "Employ actions of KILL at things class of XDIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'region 'ar-th-kill arg))

(defun ar-leftrightsinglequote-xdigit-in-region-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of XDIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'region 'ar-th-leftrightsinglequote arg))

(defun ar-length-xdigit-in-region-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of XDIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'region 'ar-th-length arg))

(defun ar-parentize-xdigit-in-region-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of XDIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'region 'ar-th-parentize arg))

(defun ar-quote-xdigit-in-region-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of XDIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'region 'ar-th-quote arg))

(defun ar-separate-xdigit-in-region-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of XDIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'region 'ar-th-separate arg))

(defun ar-show-xdigit-in-region-atpt (&optional arg) 
  "Employ actions of SHOW at things class of XDIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'region 'ar-th-show arg))

(defun ar-singlequote-xdigit-in-region-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of XDIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'region 'ar-th-singlequote arg))

(defun ar-slash-xdigit-in-region-atpt (&optional arg) 
  "Employ actions of SLASH at things class of XDIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'region 'ar-th-slash arg))

(defun ar-star-xdigit-in-region-atpt (&optional arg) 
  "Employ actions of STAR at things class of XDIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'region 'ar-th-star arg))

(defun ar-slashparen-xdigit-in-region-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of XDIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'region 'ar-th-slashparen arg))

(defun ar-sort-xdigit-in-region-atpt (&optional arg) 
  "Employ actions of SORT at things class of XDIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'region 'ar-th-sort arg))

(defun ar-trim-xdigit-in-region-atpt (&optional arg) 
  "Employ actions of TRIM at things class of XDIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'region 'ar-th-trim arg))

(defun ar-trim-left-xdigit-in-region-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of XDIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'region 'ar-th-trim-left arg))

(defun ar-trim-right-xdigit-in-region-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of XDIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'region 'ar-th-trim-right arg))

(defun ar-underscore-xdigit-in-region-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of XDIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'region 'ar-th-underscore arg))

(defun ar-whitespace-xdigit-in-region-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of XDIGIT residing withing REGION. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'region 'ar-th-whitespace arg))

(defun ar-xdigit-in-sentence-atpt (&optional arg) 
  "Employ actions of  at things class of XDIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sentence 'ar-th arg))

(defun ar-greaterangle-xdigit-in-sentence-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of XDIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sentence 'ar-th-greaterangle arg))

(defun ar-lesserangle-xdigit-in-sentence-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of XDIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sentence 'ar-th-lesserangle arg))

(defun ar-backslash-xdigit-in-sentence-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of XDIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sentence 'ar-th-backslash arg))

(defun ar-colon-xdigit-in-sentence-atpt (&optional arg) 
  "Employ actions of COLON at things class of XDIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sentence 'ar-th-colon arg))

(defun ar-beg-xdigit-in-sentence-atpt (&optional arg) 
  "Employ actions of BEG at things class of XDIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sentence 'ar-th-beg arg))

(defun ar-blok-xdigit-in-sentence-atpt (&optional arg) 
  "Employ actions of BLOK at things class of XDIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sentence 'ar-th-blok arg))

(defun ar-bounds-xdigit-in-sentence-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of XDIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sentence 'ar-th-bounds arg))

(defun ar-brace-xdigit-in-sentence-atpt (&optional arg) 
  "Employ actions of BRACE at things class of XDIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sentence 'ar-th-brace arg))

(defun ar-bracket-xdigit-in-sentence-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of XDIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sentence 'ar-th-bracket arg))

(defun ar-commatize-xdigit-in-sentence-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of XDIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sentence 'ar-th-commatize arg))

(defun ar-comment-xdigit-in-sentence-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of XDIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sentence 'ar-th-comment arg))

(defun ar-dollar-xdigit-in-sentence-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of XDIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sentence 'ar-th-dollar arg))

(defun ar-doublebackslash-xdigit-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of XDIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sentence 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-xdigit-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of XDIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sentence 'ar-th-doublebacktick arg))

(defun ar-doublequote-xdigit-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of XDIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sentence 'ar-th-doublequote arg))

(defun ar-doubleslash-xdigit-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of XDIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sentence 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-xdigit-in-sentence-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of XDIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sentence 'ar-th-doublebackslashparen arg))

(defun ar-end-xdigit-in-sentence-atpt (&optional arg) 
  "Employ actions of END at things class of XDIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sentence 'ar-th-end arg))

(defun ar-escape-xdigit-in-sentence-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of XDIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sentence 'ar-th-escape arg))

(defun ar-hide-xdigit-in-sentence-atpt (&optional arg) 
  "Employ actions of HIDE at things class of XDIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sentence 'ar-th-hide arg))

(defun ar-hide-show-xdigit-in-sentence-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of XDIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sentence 'ar-th-hide-show arg))

(defun ar-hyphen-xdigit-in-sentence-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of XDIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sentence 'ar-th-hyphen arg))

(defun ar-kill-xdigit-in-sentence-atpt (&optional arg) 
  "Employ actions of KILL at things class of XDIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sentence 'ar-th-kill arg))

(defun ar-leftrightsinglequote-xdigit-in-sentence-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of XDIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sentence 'ar-th-leftrightsinglequote arg))

(defun ar-length-xdigit-in-sentence-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of XDIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sentence 'ar-th-length arg))

(defun ar-parentize-xdigit-in-sentence-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of XDIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sentence 'ar-th-parentize arg))

(defun ar-quote-xdigit-in-sentence-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of XDIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sentence 'ar-th-quote arg))

(defun ar-separate-xdigit-in-sentence-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of XDIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sentence 'ar-th-separate arg))

(defun ar-show-xdigit-in-sentence-atpt (&optional arg) 
  "Employ actions of SHOW at things class of XDIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sentence 'ar-th-show arg))

(defun ar-singlequote-xdigit-in-sentence-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of XDIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sentence 'ar-th-singlequote arg))

(defun ar-slash-xdigit-in-sentence-atpt (&optional arg) 
  "Employ actions of SLASH at things class of XDIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sentence 'ar-th-slash arg))

(defun ar-star-xdigit-in-sentence-atpt (&optional arg) 
  "Employ actions of STAR at things class of XDIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sentence 'ar-th-star arg))

(defun ar-slashparen-xdigit-in-sentence-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of XDIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sentence 'ar-th-slashparen arg))

(defun ar-sort-xdigit-in-sentence-atpt (&optional arg) 
  "Employ actions of SORT at things class of XDIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sentence 'ar-th-sort arg))

(defun ar-trim-xdigit-in-sentence-atpt (&optional arg) 
  "Employ actions of TRIM at things class of XDIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sentence 'ar-th-trim arg))

(defun ar-trim-left-xdigit-in-sentence-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of XDIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sentence 'ar-th-trim-left arg))

(defun ar-trim-right-xdigit-in-sentence-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of XDIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sentence 'ar-th-trim-right arg))

(defun ar-underscore-xdigit-in-sentence-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of XDIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sentence 'ar-th-underscore arg))

(defun ar-whitespace-xdigit-in-sentence-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of XDIGIT residing withing SENTENCE. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sentence 'ar-th-whitespace arg))

(defun ar-xdigit-in-sexp-atpt (&optional arg) 
  "Employ actions of  at things class of XDIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sexp 'ar-th arg))

(defun ar-greaterangle-xdigit-in-sexp-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of XDIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sexp 'ar-th-greaterangle arg))

(defun ar-lesserangle-xdigit-in-sexp-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of XDIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sexp 'ar-th-lesserangle arg))

(defun ar-backslash-xdigit-in-sexp-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of XDIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sexp 'ar-th-backslash arg))

(defun ar-colon-xdigit-in-sexp-atpt (&optional arg) 
  "Employ actions of COLON at things class of XDIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sexp 'ar-th-colon arg))

(defun ar-beg-xdigit-in-sexp-atpt (&optional arg) 
  "Employ actions of BEG at things class of XDIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sexp 'ar-th-beg arg))

(defun ar-blok-xdigit-in-sexp-atpt (&optional arg) 
  "Employ actions of BLOK at things class of XDIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sexp 'ar-th-blok arg))

(defun ar-bounds-xdigit-in-sexp-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of XDIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sexp 'ar-th-bounds arg))

(defun ar-brace-xdigit-in-sexp-atpt (&optional arg) 
  "Employ actions of BRACE at things class of XDIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sexp 'ar-th-brace arg))

(defun ar-bracket-xdigit-in-sexp-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of XDIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sexp 'ar-th-bracket arg))

(defun ar-commatize-xdigit-in-sexp-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of XDIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sexp 'ar-th-commatize arg))

(defun ar-comment-xdigit-in-sexp-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of XDIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sexp 'ar-th-comment arg))

(defun ar-dollar-xdigit-in-sexp-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of XDIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sexp 'ar-th-dollar arg))

(defun ar-doublebackslash-xdigit-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of XDIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sexp 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-xdigit-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of XDIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sexp 'ar-th-doublebacktick arg))

(defun ar-doublequote-xdigit-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of XDIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sexp 'ar-th-doublequote arg))

(defun ar-doubleslash-xdigit-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of XDIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sexp 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-xdigit-in-sexp-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of XDIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sexp 'ar-th-doublebackslashparen arg))

(defun ar-end-xdigit-in-sexp-atpt (&optional arg) 
  "Employ actions of END at things class of XDIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sexp 'ar-th-end arg))

(defun ar-escape-xdigit-in-sexp-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of XDIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sexp 'ar-th-escape arg))

(defun ar-hide-xdigit-in-sexp-atpt (&optional arg) 
  "Employ actions of HIDE at things class of XDIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sexp 'ar-th-hide arg))

(defun ar-hide-show-xdigit-in-sexp-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of XDIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sexp 'ar-th-hide-show arg))

(defun ar-hyphen-xdigit-in-sexp-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of XDIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sexp 'ar-th-hyphen arg))

(defun ar-kill-xdigit-in-sexp-atpt (&optional arg) 
  "Employ actions of KILL at things class of XDIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sexp 'ar-th-kill arg))

(defun ar-leftrightsinglequote-xdigit-in-sexp-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of XDIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sexp 'ar-th-leftrightsinglequote arg))

(defun ar-length-xdigit-in-sexp-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of XDIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sexp 'ar-th-length arg))

(defun ar-parentize-xdigit-in-sexp-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of XDIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sexp 'ar-th-parentize arg))

(defun ar-quote-xdigit-in-sexp-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of XDIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sexp 'ar-th-quote arg))

(defun ar-separate-xdigit-in-sexp-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of XDIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sexp 'ar-th-separate arg))

(defun ar-show-xdigit-in-sexp-atpt (&optional arg) 
  "Employ actions of SHOW at things class of XDIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sexp 'ar-th-show arg))

(defun ar-singlequote-xdigit-in-sexp-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of XDIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sexp 'ar-th-singlequote arg))

(defun ar-slash-xdigit-in-sexp-atpt (&optional arg) 
  "Employ actions of SLASH at things class of XDIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sexp 'ar-th-slash arg))

(defun ar-star-xdigit-in-sexp-atpt (&optional arg) 
  "Employ actions of STAR at things class of XDIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sexp 'ar-th-star arg))

(defun ar-slashparen-xdigit-in-sexp-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of XDIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sexp 'ar-th-slashparen arg))

(defun ar-sort-xdigit-in-sexp-atpt (&optional arg) 
  "Employ actions of SORT at things class of XDIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sexp 'ar-th-sort arg))

(defun ar-trim-xdigit-in-sexp-atpt (&optional arg) 
  "Employ actions of TRIM at things class of XDIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sexp 'ar-th-trim arg))

(defun ar-trim-left-xdigit-in-sexp-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of XDIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sexp 'ar-th-trim-left arg))

(defun ar-trim-right-xdigit-in-sexp-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of XDIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sexp 'ar-th-trim-right arg))

(defun ar-underscore-xdigit-in-sexp-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of XDIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sexp 'ar-th-underscore arg))

(defun ar-whitespace-xdigit-in-sexp-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of XDIGIT residing withing SEXP. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'sexp 'ar-th-whitespace arg))

(defun ar-xdigit-in-shstruct-atpt (&optional arg) 
  "Employ actions of  at things class of XDIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'shstruct 'ar-th arg))

(defun ar-greaterangle-xdigit-in-shstruct-atpt (&optional arg) 
  "Employ actions of GREATERANGLE at things class of XDIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'shstruct 'ar-th-greaterangle arg))

(defun ar-lesserangle-xdigit-in-shstruct-atpt (&optional arg) 
  "Employ actions of LESSERANGLE at things class of XDIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'shstruct 'ar-th-lesserangle arg))

(defun ar-backslash-xdigit-in-shstruct-atpt (&optional arg) 
  "Employ actions of BACKSLASH at things class of XDIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'shstruct 'ar-th-backslash arg))

(defun ar-colon-xdigit-in-shstruct-atpt (&optional arg) 
  "Employ actions of COLON at things class of XDIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'shstruct 'ar-th-colon arg))

(defun ar-beg-xdigit-in-shstruct-atpt (&optional arg) 
  "Employ actions of BEG at things class of XDIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'shstruct 'ar-th-beg arg))

(defun ar-blok-xdigit-in-shstruct-atpt (&optional arg) 
  "Employ actions of BLOK at things class of XDIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'shstruct 'ar-th-blok arg))

(defun ar-bounds-xdigit-in-shstruct-atpt (&optional arg) 
  "Employ actions of BOUNDS at things class of XDIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'shstruct 'ar-th-bounds arg))

(defun ar-brace-xdigit-in-shstruct-atpt (&optional arg) 
  "Employ actions of BRACE at things class of XDIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'shstruct 'ar-th-brace arg))

(defun ar-bracket-xdigit-in-shstruct-atpt (&optional arg) 
  "Employ actions of BRACKET at things class of XDIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'shstruct 'ar-th-bracket arg))

(defun ar-commatize-xdigit-in-shstruct-atpt (&optional arg) 
  "Employ actions of COMMATIZE at things class of XDIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'shstruct 'ar-th-commatize arg))

(defun ar-comment-xdigit-in-shstruct-atpt (&optional arg) 
  "Employ actions of COMMENT at things class of XDIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'shstruct 'ar-th-comment arg))

(defun ar-dollar-xdigit-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOLLAR at things class of XDIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'shstruct 'ar-th-dollar arg))

(defun ar-doublebackslash-xdigit-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASH at things class of XDIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'shstruct 'ar-th-doublebackslash arg))

(defun ar-doublebacktick-xdigit-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKTICK at things class of XDIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'shstruct 'ar-th-doublebacktick arg))

(defun ar-doublequote-xdigit-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEQUOTE at things class of XDIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'shstruct 'ar-th-doublequote arg))

(defun ar-doubleslash-xdigit-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLESLASH at things class of XDIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'shstruct 'ar-th-doubleslash arg))

(defun ar-doublebackslashparen-xdigit-in-shstruct-atpt (&optional arg) 
  "Employ actions of DOUBLEBACKSLASHPAREN at things class of XDIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'shstruct 'ar-th-doublebackslashparen arg))

(defun ar-end-xdigit-in-shstruct-atpt (&optional arg) 
  "Employ actions of END at things class of XDIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'shstruct 'ar-th-end arg))

(defun ar-escape-xdigit-in-shstruct-atpt (&optional arg) 
  "Employ actions of ESCAPE at things class of XDIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'shstruct 'ar-th-escape arg))

(defun ar-hide-xdigit-in-shstruct-atpt (&optional arg) 
  "Employ actions of HIDE at things class of XDIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'shstruct 'ar-th-hide arg))

(defun ar-hide-show-xdigit-in-shstruct-atpt (&optional arg) 
  "Employ actions of HIDESHOW at things class of XDIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'shstruct 'ar-th-hide-show arg))

(defun ar-hyphen-xdigit-in-shstruct-atpt (&optional arg) 
  "Employ actions of HYPHEN at things class of XDIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'shstruct 'ar-th-hyphen arg))

(defun ar-kill-xdigit-in-shstruct-atpt (&optional arg) 
  "Employ actions of KILL at things class of XDIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'shstruct 'ar-th-kill arg))

(defun ar-leftrightsinglequote-xdigit-in-shstruct-atpt (&optional arg) 
  "Employ actions of LEFTRIGHTSINGLEQUOTE at things class of XDIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'shstruct 'ar-th-leftrightsinglequote arg))

(defun ar-length-xdigit-in-shstruct-atpt (&optional arg) 
  "Employ actions of LENGTH at things class of XDIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'shstruct 'ar-th-length arg))

(defun ar-parentize-xdigit-in-shstruct-atpt (&optional arg) 
  "Employ actions of PARENTIZE at things class of XDIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'shstruct 'ar-th-parentize arg))

(defun ar-quote-xdigit-in-shstruct-atpt (&optional arg) 
  "Employ actions of QUOTE at things class of XDIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'shstruct 'ar-th-quote arg))

(defun ar-separate-xdigit-in-shstruct-atpt (&optional arg) 
  "Employ actions of SEPARATE at things class of XDIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'shstruct 'ar-th-separate arg))

(defun ar-show-xdigit-in-shstruct-atpt (&optional arg) 
  "Employ actions of SHOW at things class of XDIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'shstruct 'ar-th-show arg))

(defun ar-singlequote-xdigit-in-shstruct-atpt (&optional arg) 
  "Employ actions of SINGLEQUOTE at things class of XDIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'shstruct 'ar-th-singlequote arg))

(defun ar-slash-xdigit-in-shstruct-atpt (&optional arg) 
  "Employ actions of SLASH at things class of XDIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'shstruct 'ar-th-slash arg))

(defun ar-star-xdigit-in-shstruct-atpt (&optional arg) 
  "Employ actions of STAR at things class of XDIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'shstruct 'ar-th-star arg))

(defun ar-slashparen-xdigit-in-shstruct-atpt (&optional arg) 
  "Employ actions of SLASHPAREN at things class of XDIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'shstruct 'ar-th-slashparen arg))

(defun ar-sort-xdigit-in-shstruct-atpt (&optional arg) 
  "Employ actions of SORT at things class of XDIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'shstruct 'ar-th-sort arg))

(defun ar-trim-xdigit-in-shstruct-atpt (&optional arg) 
  "Employ actions of TRIM at things class of XDIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'shstruct 'ar-th-trim arg))

(defun ar-trim-left-xdigit-in-shstruct-atpt (&optional arg) 
  "Employ actions of TRIMLEFT at things class of XDIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'shstruct 'ar-th-trim-left arg))

(defun ar-trim-right-xdigit-in-shstruct-atpt (&optional arg) 
  "Employ actions of TRIMRIGHT at things class of XDIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'shstruct 'ar-th-trim-right arg))

(defun ar-underscore-xdigit-in-shstruct-atpt (&optional arg) 
  "Employ actions of UNDERSCORE at things class of XDIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'shstruct 'ar-th-underscore arg))

(defun ar-whitespace-xdigit-in-shstruct-atpt (&optional arg) 
  "Employ actions of WHITESPACE at things class of XDIGIT residing withing SHSTRUCT. "
  (interactive "*p")
  (ar-thing-in-thing 'xdigit 'shstruct 'ar-th-whitespace arg))

(provide 'thing-classes-in-rest-list)
;;;thing-classes-in-rest-list.el ends here

